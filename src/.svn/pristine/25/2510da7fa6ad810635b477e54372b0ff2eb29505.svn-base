package com.rd.server.util;

import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;

import org.dom4j.Document;
import org.dom4j.DocumentHelper;
import org.dom4j.Element;
import org.dom4j.io.OutputFormat;
import org.dom4j.io.XMLWriter;


//生成bean

public class CreateHBM<T> {
	
   
	public void CreateHbmXml(ArrayList<HashMap<String,String>> list,HashMap<String,String> map) {
			
		try {
			Element root = DocumentHelper.createElement("hibernate-mapping");  
		       
			Document document = DocumentHelper.createDocument(root); 
			
			String path=this.getClass().getResource("").getPath();	
			
			System.out.println(path);
			
			String [] paths=path.split("/com");
			
			System.out.println(map.get("PackagePath"));
			
			String packagePath=map.get("PackagePath");
			
			if(packagePath!=null&&!packagePath.equals("")){
				
				String str=packagePath.replace(".", "/");
				
				String [] packages=str.split("/");
				
				for(int i=0;i<packages.length;i++){
					paths[0]=paths[0]+"/"+packages[i];
					
					File outfile = new File(paths[0]);                 
					  //如果文件不存在，则创建一个新文件
					 
					if(!outfile.isFile()){
						
						 outfile.mkdirs();
						 
						 System.out.println( paths[0]);
					}
					
				}
				List<String> pList=new ArrayList<String>();
				List<String> qList=new ArrayList<String>();
				for(int i=0;i<list.size();i++){
					HashMap<String,String> fmap=list.get(i);
					
					 if(fmap.get("prk").equals("true")){
						 pList.add(map.get("name"));				 
					 }else{
						 qList.add(map.get("name"));	
					 }				 
				}
							 
				Element hbmClass = root.addElement("class"); 
				
				hbmClass.addAttribute("name", map.get("CLASSNAME") );
				hbmClass.addAttribute("table", map.get("TABLENAME") );
				
				if(pList.size()==1){
					
					Element id = hbmClass.addElement("id"); 
					id.addAttribute("name",pList.get(0)); 
					id.addAttribute("column",pList.get(0)); 
					
					Element generator = id.addElement("id"); 
					generator.addAttribute("class","assigned"); 
				
					for(int i=0;i<qList.size();i++){
						
						Element property = hbmClass.addElement("property"); 
						property.addAttribute("name",qList.get(i)); 
						
					}
					
				}
				if(pList.size()>1){
					
					Element composite_id = hbmClass.addElement("composite-id"); 
					for(int i=0;i<pList.size();i++){
						
						Element key_property = composite_id.addElement("key-property");
						key_property.addAttribute("name",pList.get(i));
						key_property.addAttribute("column",pList.get(i));
						key_property.addAttribute("type","string");
					
					}

					for(int i=0;i<qList.size();i++){
						
						Element property = hbmClass.addElement("property"); 
						property.addAttribute("name",qList.get(i)); 
						
					}
					
				}
				if(pList.size()==0){
				

					for(int i=0;i<qList.size();i++){
						
						Element property = hbmClass.addElement("property"); 
						property.addAttribute("name",qList.get(i)); 
						
					}
			
				
				}
		       
		        //添加  
				//if()
		        OutputFormat outputFormat = new OutputFormat();
                
		        outputFormat.setEncoding("UTF-8");

                FileOutputStream outputStream = new FileOutputStream(paths[0]+"/"+map.get("BEAN")+".hbm.xml");
                XMLWriter xmlWriter = new XMLWriter(outputStream,outputFormat);

                xmlWriter.write(document);
                
                outputStream.flush();
                
                xmlWriter.flush();
                
                xmlWriter.close();
                
                outputStream.close();
			}else if(map.get("FilePath")!=null&&!map.get("FilePath").equals("")){
				File outfile = new File(map.get("FilePath"));                 
				  //如果文件不存在，则创建一个新文件
				 
				if(!outfile.isFile()){
					
					 outfile.mkdirs();
					 
					 System.out.println(map.get("FilePath"));
				}
				 
				OutputFormat outputFormat = new OutputFormat();

				outputFormat.setEncoding("UTF-8");

				FileOutputStream outputStream = new FileOutputStream(map.get("FilePath")+"/"+map.get("BEAN")+".xml");

				XMLWriter xmlWriter = new XMLWriter(outputStream,outputFormat);

				xmlWriter.write(document);

				outputStream.flush();

				xmlWriter.flush();

				xmlWriter.close();

				outputStream.close();
				
			}
			
		} catch (IOException e) {
			e.printStackTrace();
		}
	}	

	
	
}