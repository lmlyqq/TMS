--yuanlei 2017-06-08
CREATE OR REPLACE VIEW V_BMS_ORDER_HEADER1 AS
SELECT
T.ID,
t.AUDIT_STAT,
t5.name_c as AUDIT_STAT_NAME,
T.ODR_NO,T.CUSTOM_ODR_NO,T.CUSTOMER_ID,T.CUSTOMER_NAME,T.TRANS_SRVC_ID,T.ODR_TYP
,to_char(T.ODR_TIME,'yyyy/mm/dd hh24:mi') as ODR_TIME
,to_char(T.ODR_TIME,'yyyy/mm/dd') as ODR_DATE
,T.LOAD_ID
,T.LOAD_NAME,T.LOAD_AREA_ID,T.LOAD_AREA_NAME,T.LOAD_ADDRESS
,T.LOAD_CONTACT,T.LOAD_TEL,t.pod_delay_days,t.unload_delay_days
,to_char(T.FROM_LOAD_TIME,'yyyy/mm/dd hh24:mi') as FROM_LOAD_TIME
,to_char(T.PRE_LOAD_TIME,'yyyy/mm/dd hh24:mi') as PRE_LOAD_TIME,
T.UNLOAD_ID,T.UNLOAD_NAME,T.UNLOAD_AREA_ID,T.UNLOAD_AREA_NAME,T.UNLOAD_ADDRESS,T.UNLOAD_CONTACT,T.UNLOAD_TEL
,to_char(T.FROM_UNLOAD_TIME,'yyyy/mm/dd hh24:mi') as FROM_UNLOAD_TIME
,to_char(T.LOAD_TIME,'yyyy/mm/dd hh24:mi') as LOAD_TIME
,to_char(T.OP_POD_TIME,'yyyy/mm/dd hh24:mi') as OP_POD_TIME
,to_char(T.PRE_UNLOAD_TIME,'yyyy/mm/dd hh24:mi') as PRE_UNLOAD_TIME
,to_char(T.PRE_POD_TIME,'yyyy/mm/dd hh24:mi') as PRE_POD_TIME,T.STATUS,T.BILL_TO,T.PRE_ORDER_NO,T.REFENENCE1,T.REFENENCE2,T.REFENENCE3,T.REFENENCE4,T.CREATE_ORG_ID,T.EXEC_ORG_ID,T.UGRT_GRD,T.SALES_MAN,T.ENABLE_FLAG,T.PLAN_STAT,T.LOAD_STAT,T.UNLOAD_STAT,T.BTCH_NUM,T.ALLOW_SPLIT_FLAG,T.COD_FLAG,T.GEN_ORDER_TYP
,T.TOT_QNTY
,T.TRANS_UOM
,T.TOT_GROSS_W
,T.TOT_VOL,T.BIZ_TYP
,T.TOT_NET_W,T.TOT_WORTH,T.TOT_QNTY_EACH,T.SKU_NAME,T.ROUTE_ID,T.PRINT_FLAG,T.SHOW_SEQ,T.SLF_DELIVER_FLAG,T.SLF_PICKUP_FLAG,T.NOTES,T.SUPLR_ID,T.SUPLR_NAME,t6.VEHICLE_TYPE as VEHICLE_TYP_NAME,T.PLATE_NO,T.DRIVER,T.MOBILE,T.ABNOMAL_STAT
,t.addtime
,t.load_print_count --打印次数
,T.ADDWHO,T.EDITTIME,T.EDITWHO
,T.ODR_NO||T.CUSTOMER_NAME||T.CUSTOM_ODR_NO AS FULL_INDEX
,t.CREATE_ORG_ID_NAME,t.EXEC_ORG_ID_NAME,t.STATUS_NAME
,to_char(t.unload_time,'yyyy/mm/dd hh24:mi') as max_unload_time   --yuanlei 2012-2-17
,to_char(t.unload_time,'yyyy/mm/dd hh24:mi') as unload_time
,t.unload_delay_reason
,t.pod_delay_reason
,to_char(t.pod_time,'yyyy/mm/dd hh24:mi') as pod_time
,T.trans_srvc_id_name,T.RECE_STAT,T.RECE_STAT_NAME
,CUSTOMER_NAME AS BILL_TO_NAME
,t.losdam_flag
,0 as TOT_LD_QNTY,0 as TOT_UNLD_QNTY,0 as load_qnty_each,0 as unload_qnty_eac
,pod_delays.name_c as POD_DELAY_REASON_NAME
,unload_delays.name_c as UNLOAD_DELAY_REASON_NAME
,biz.name_c as BIZ_TYP_NAME
,t.load_area_id2,t.load_area_name2,t.unload_area_id2,t.unload_area_name2
,t2.NAME_C AS ODR_TYP_NAME,t.upload_flag
,t3.gen_method --客户月结帐号
,t3.parent_customer_id,t4.short_name parent_customer_name --隶属客户
,T.BILL_PRICE,T.INIT_FLAG
FROM BMS_ORDER_HEADER T
,bas_codes pod_delays --回单延迟
,bas_codes unload_delays --到货延迟
,bas_codes biz
,bas_codes t2
,bas_customer t3
,bas_customer t4
,bas_codes t5
,BAS_VEHICLE_TYPE t6
where t.pod_delay_reason = pod_delays.id(+) and pod_delays.prop_code(+) = 'POD_DELAY_REASON'
and t.unload_delay_reason = unload_delays.id(+) and unload_delays.prop_code(+) = 'UNLOAD_DELAY_REASON'
and t.biz_typ = biz.id(+)
and t.customer_id = t3.id(+)
and t3.parent_customer_id = t4.id(+)
and t.ODR_TYP = t2.id(+) and t2.prop_code(+) = 'TRS_TYP'
and t.AUDIT_STAT = t5.code(+) and t5.prop_code(+)='AUDIT_STAT'
and t.VEHICLE_TYP = t6.id(+) and t6.enable_flag(+)='Y';


create or replace procedure SP_IMPORT_ORDER(
IN_TMPID varchar2,
IN_USERID varchar2,
IN_LANGUAGE VARCHAR2,
OUTPUT_RESULLT in out varchar2)
IS

t_cur_column varchar2(100);
t_cur_value varchar2(500);
t_verify_type number(4);
t_table_name varchar2(100);
t_verify_code varchar2(100);

v_sql varchar2(2048);
temp_sql varchar2(1024);
temp_result varchar2(500);
tmp_verify_code varchar2(100);

r_REFENENCE1 varchar2(100);
r_CUSTOM_ODR_NO varchar2(100);
r_CUSTOMER_NAME varchar2(100);
r_BIZ_TYP varchar2(100);
r_ODR_TYP varchar2(100);
r_ODR_TIME varchar2(100);
r_VEHICLE_TYP varchar2(100);
r_TEMPERATURE1 varchar2(100);
r_TEMPERATURE2 varchar2(100);
r_PRE_LOAD_TIME varchar2(100);
r_PRE_UNLOAD_TIME varchar2(100);
r_SLF_PICKUP_FLAG varchar2(10);
r_SLF_DELIVER_FLAG varchar2(10);
r_NOTES varchar2(500);
r_LOAD_CODE varchar2(100);
r_LOAD_AREA_NAME varchar2(100);
r_LOAD_AREA_NAME2 varchar2(100);
r_LOAD_AREA_NAME3 varchar2(100);
r_LOAD_ADDRESS varchar2(300);
r_LOAD_CONTACT varchar2(100);
r_LOAD_TEL varchar2(100);
r_UNLOAD_CODE varchar2(100);
r_UNLOAD_AREA_NAME varchar2(100);
r_UNLOAD_AREA_NAME2 varchar2(100);
r_UNLOAD_AREA_NAME3 varchar2(100);
r_UNLOAD_ADDRESS varchar2(300);
r_UNLOAD_CONTACT varchar2(100);
r_UNLOAD_TEL varchar2(100);
r_SKU varchar2(100);
r_SKU_NAME varchar2(200);
r_UOM varchar2(100);
r_QNTY varchar2(100);
r_TEMPERATURE varchar2(100);
r_G_WGT varchar2(100);
r_VOL varchar2(100);
r_LINE number(4);
r_USERID varchar2(30);
r_BTCH_NUM VARCHAR2(50);

type   cur_t   is   ref   cursor;
      C_ACT   cur_t;

TYPE array_var IS VARRAY(37) OF nvarchar2(10000);

tmp_key array_var;
tmp_value array_var;

tmp_table varchar2(255);
tmp_column varchar2(255);
tmp_param_type NUMBER;
tmp_replace_field varchar2(100);
tmp_default_value varchar2(255);

exec_sql varchar2(4096);
exec_value varchar2(4096);

r_count number(4);
pos number(4);

load_code varchar2(100);
unload_code varchar2(100);

op_customer_id varchar2(32);
op_customer_name VARCHAR2(50);
op_load_area_name varchar2(50);
op_load_area_name2 varchar2(50);
op_load_area_name3 varchar2(50);
op_unload_area_name varchar2(50);
op_unload_area_name2 varchar2(50);
op_unload_area_name3 varchar2(50);
op_load_address varchar2(300);
op_load_contact varchar2(40);
op_load_tel varchar2(80);
op_unload_address varchar2(300);
op_unload_contact varchar2(40);
op_unload_tel varchar2(80);
op_load_area_id varchar2(32);
op_load_area_id2 varchar2(32);
op_load_area_id3 varchar2(32);
op_load_name varchar2(100);
op_unload_area_id varchar2(32);
op_unload_area_id2 varchar2(32);
op_unload_area_id3 varchar2(32);
op_unload_name varchar2(100);
op_exec_org_id varchar2(32);
op_id varchar2(32);
op_odr_no varchar2(100);
op_odr_row number(4);
op_skuname varchar2(100);
op_packid varchar2(32);

odr_lst LST := LST();

tmp_unload_address varchar2(300);
tmp_unload_contact varchar2(40);
tmp_unload_tel varchar2(40);
tmp_load_address  varchar2(300);
tmp_load_contact varchar2(40);
tmp_load_tel varchar2(80);


CURSOR verify is
      select verify_type,table_name,verify_code from t_input_excel_verify where type_name = 'TMP_ORDER_IMPORT' and COLUMN_NAME = t_cur_column;
CURSOR head is
      select column_name,default_value,param_type,replace_field,table_name from t_input_excel_default where table_name = 'TRANS_ORDER_HEADER' order by exec_seq asc;
CURSOR item is
      select column_name,default_value,param_type,replace_field,table_name from t_input_excel_default where table_name = 'TRANS_ORDER_ITEM' order by exec_seq asc;
--IN_TMPID varchar2(32);
BEGIN
  --IN_TMPID := '1489116521217';
  OUTPUT_RESULLT := '';
  --return;
  tmp_key := array_var('REFENENCE1','CUSTOM_ODR_NO','CUSTOMER_NAME','BIZ_TYP','ODR_TYP','ODR_TIME','VEHICLE_TYP','TEMPERATURE1','TEMPERATURE2','PRE_LOAD_TIME'
  ,'PRE_UNLOAD_TIME','SLF_PICKUP_FLAG','SLF_DELIVER_FLAG','NOTES','LOAD_CODE','LOAD_AREA_NAME','LOAD_AREA_NAME2','LOAD_AREA_NAME3','LOAD_ADDRESS','LOAD_CONTACT'
  ,'LOAD_TEL','UNLOAD_CODE','UNLOAD_AREA_NAME','UNLOAD_AREA_NAME2','UNLOAD_AREA_NAME3','UNLOAD_ADDRESS','UNLOAD_CONTACT','UNLOAD_TEL','SKU','SKU_NAME','UOM'
  ,'QNTY','TEMPERATURE','G_WGT','VOL','BTCH_NUM','USER_ID');
  v_sql := '';
  r_LINE := 1;
  pos := 1;
  for i in 1..tmp_key.count loop
      t_cur_column := tmp_key(i);
      v_sql := v_sql|| t_cur_column || ',';
  end loop;
  v_sql := 'SELECT ' || v_sql || 'LINENO FROM TMP_ORDER_IMPORT WHERE TMPID = ''' || IN_TMPID || ''' AND USER_ID = ''' || IN_USERID || ''' ORDER BY LINENO ASC';
  --校验字段
  Open  C_ACT   for   v_sql ;
  loop
      fetch C_ACT into r_REFENENCE1,r_CUSTOM_ODR_NO,r_CUSTOMER_NAME,r_BIZ_TYP,r_ODR_TYP
       ,r_ODR_TIME,r_VEHICLE_TYP,r_TEMPERATURE1,r_TEMPERATURE2,r_PRE_LOAD_TIME
       ,r_PRE_UNLOAD_TIME,r_SLF_PICKUP_FLAG,r_SLF_DELIVER_FLAG,r_NOTES,r_LOAD_CODE
       ,r_LOAD_AREA_NAME,r_LOAD_AREA_NAME2,r_LOAD_AREA_NAME3,r_LOAD_ADDRESS,r_LOAD_CONTACT
       ,r_LOAD_TEL,r_UNLOAD_CODE,r_UNLOAD_AREA_NAME,r_UNLOAD_AREA_NAME2,r_UNLOAD_AREA_NAME3
       ,r_UNLOAD_ADDRESS,r_UNLOAD_CONTACT,r_UNLOAD_TEL,r_SKU,r_SKU_NAME
       ,r_UOM,r_QNTY,r_TEMPERATURE,r_G_WGT,r_VOL,r_BTCH_NUM,r_USERID,r_LINE;            --V418A
      exit when C_ACT%notfound;

      tmp_value := array_var(r_REFENENCE1,r_CUSTOM_ODR_NO,r_CUSTOMER_NAME,r_BIZ_TYP,r_ODR_TYP
       ,r_ODR_TIME,r_VEHICLE_TYP,r_TEMPERATURE1,r_TEMPERATURE2,r_PRE_LOAD_TIME
       ,r_PRE_UNLOAD_TIME,r_SLF_PICKUP_FLAG,r_SLF_DELIVER_FLAG,r_NOTES,r_LOAD_CODE
       ,r_LOAD_AREA_NAME,r_LOAD_AREA_NAME2,r_LOAD_AREA_NAME3,r_LOAD_ADDRESS,r_LOAD_CONTACT
       ,r_LOAD_TEL,r_UNLOAD_CODE,r_UNLOAD_AREA_NAME,r_UNLOAD_AREA_NAME2,r_UNLOAD_AREA_NAME3
       ,r_UNLOAD_ADDRESS,r_UNLOAD_CONTACT,r_UNLOAD_TEL,r_SKU,r_SKU_NAME
       ,r_UOM,r_QNTY,r_TEMPERATURE,r_G_WGT,r_VOL,r_BTCH_NUM,r_USERID);

      if r_CUSTOMER_NAME is null then  --当客户单号为空时，可认为与上一行信息相同，直接跳到明细列进行校验。
          pos := 15;
      end if;

      for i in pos..tmp_key.count loop
           t_cur_column := tmp_key(i);
           t_cur_value := tmp_value(i);
           for m in verify loop
               t_verify_type := m.verify_type;
               t_table_name := m.table_name;
               t_verify_code := m.verify_code;

               if t_verify_type = 0 then  --非空检验
                   if t_cur_value is null or length(t_cur_value) < 1 then
                       OUTPUT_RESULLT := OUTPUT_RESULLT || '第'|| r_LINE ||'行字段['|| t_cur_column ||']不能为空<br />';
                   end if;
               elsif t_verify_type = 1 and length(t_cur_value) > 0 then --唯一性校验
                   temp_sql := 'select count(1) from ' || t_table_name || ' where ' || t_cur_column || '=''' || t_cur_value || '''';
                   execute immediate temp_sql into r_count;
                   if r_count > 0 then
                        OUTPUT_RESULLT := OUTPUT_RESULLT || '第'|| r_LINE ||'行字段['|| t_cur_column ||']不是唯一<br />';
                   else
                      temp_sql := 'select count(1) from TMP_ORDER_IMPORT where TMPID = ''' || IN_TMPID || ''' AND USER_ID = '''
                        || IN_USERID || ''' and ' || t_cur_column || '= ''' || t_cur_value || '''';
                      execute immediate temp_sql into r_count;
                      if r_count > 1 then
                          OUTPUT_RESULLT := OUTPUT_RESULLT || '第'|| r_LINE ||'行['|| t_cur_column ||']列不是唯一<br />';
                      end if;
                   end if;
               elsif t_verify_type = 2 and length(t_verify_code) > 0 and length(t_cur_value) > 0 then
                   temp_sql := REPLACE(t_verify_code, '?', t_cur_value);
                   execute immediate temp_sql into r_count;
                   if r_count = 0 then
                       OUTPUT_RESULLT := OUTPUT_RESULLT || '第'|| r_LINE ||'行['|| t_cur_column ||']列值为[' || t_cur_value || '],数值不合法<br />';
                   else
                      if t_cur_column = 'SKU' then  --如果是只填写SKU，则将SKU对应的名称写到临时表，避免校验SKU_NAME时因为无值不通过
                          select sku_cname into op_skuname from BAS_SKU where sku = t_cur_value;
                          update TMP_ORDER_IMPORT set SKU_NAME = op_skuname
                            WHERE TMPID = IN_TMPID AND USER_ID = IN_USERID AND LINENO = r_LINE;
                          tmp_value(30) := op_skuname;
                      end if;
                   end if;
               elsif t_verify_type = 3 then   --二选一非空校验
                   if t_cur_value is null then
                       select verify_code into tmp_verify_code from t_input_excel_verify where column_name = t_verify_code and type_name = 'TMP_ORDER_IMPORT';
                       temp_sql := 'select ' || t_verify_code || ' from TMP_ORDER_IMPORT WHERE TMPID = ''' || IN_TMPID || ''' AND USER_ID = ''' || IN_USERID || ''' and LINENO = ''' || r_LINE || '''';
                       execute immediate temp_sql into temp_result;
                       temp_sql := REPLACE(tmp_verify_code, '?', temp_result);
                       execute immediate temp_sql into r_count;
                       if r_count = 0 then
                           OUTPUT_RESULLT := OUTPUT_RESULLT || '第'|| r_LINE ||'行字段['|| t_cur_column ||']不合法<br />';
                       end if;
                   end if;
               end if;
           end loop;
      end loop;
      <<next_loop>>
          t_cur_column := '';
  end loop;
  close C_ACT;

  if length(OUTPUT_RESULLT) > 0 then
    OUTPUT_RESULLT:='01'||OUTPUT_RESULLT;
    rollback;
    -- 失败删除中间表
    delete from TMP_ORDER_IMPORT where TMPID = IN_TMPID;
    commit;
    return;
  end if;
  --插入数据
  Open  C_ACT   for   v_sql ;
  loop
      fetch C_ACT into r_REFENENCE1,r_CUSTOM_ODR_NO,r_CUSTOMER_NAME,r_BIZ_TYP,r_ODR_TYP
       ,r_ODR_TIME,r_VEHICLE_TYP,r_TEMPERATURE1,r_TEMPERATURE2,r_PRE_LOAD_TIME
       ,r_PRE_UNLOAD_TIME,r_SLF_PICKUP_FLAG,r_SLF_DELIVER_FLAG,r_NOTES,r_LOAD_CODE
       ,r_LOAD_AREA_NAME,r_LOAD_AREA_NAME2,r_LOAD_AREA_NAME3,r_LOAD_ADDRESS,r_LOAD_CONTACT
       ,r_LOAD_TEL,r_UNLOAD_CODE,r_UNLOAD_AREA_NAME,r_UNLOAD_AREA_NAME2,r_UNLOAD_AREA_NAME3
       ,r_UNLOAD_ADDRESS,r_UNLOAD_CONTACT,r_UNLOAD_TEL,r_SKU,r_SKU_NAME
       ,r_UOM,r_QNTY,r_TEMPERATURE,r_G_WGT,r_VOL,r_BTCH_NUM,r_USERID,r_LINE;            --V418A
      exit when C_ACT%notfound;

      tmp_value := array_var(r_REFENENCE1,r_CUSTOM_ODR_NO,r_CUSTOMER_NAME,r_BIZ_TYP,r_ODR_TYP
       ,r_ODR_TIME,r_VEHICLE_TYP,r_TEMPERATURE1,r_TEMPERATURE2,r_PRE_LOAD_TIME
       ,r_PRE_UNLOAD_TIME,r_SLF_PICKUP_FLAG,r_SLF_DELIVER_FLAG,r_NOTES,r_LOAD_CODE
       ,r_LOAD_AREA_NAME,r_LOAD_AREA_NAME2,r_LOAD_AREA_NAME3,r_LOAD_ADDRESS,r_LOAD_CONTACT
       ,r_LOAD_TEL,r_UNLOAD_CODE,r_UNLOAD_AREA_NAME,r_UNLOAD_AREA_NAME2,r_UNLOAD_AREA_NAME3
       ,r_UNLOAD_ADDRESS,r_UNLOAD_CONTACT,r_UNLOAD_TEL,r_SKU,r_SKU_NAME
       ,r_UOM,r_QNTY,r_TEMPERATURE,r_G_WGT,r_VOL,r_BTCH_NUM,r_USERID);

      exec_sql := '';
      exec_value := '';
      if r_CUSTOMER_NAME is not null then
          for h in head loop
              tmp_table := h.table_name;
              tmp_column := h.column_name;
              tmp_param_type := h.param_type;
              tmp_replace_field := h.replace_field;
              tmp_default_value := h.default_value;
              exec_sql := exec_sql || ',' || h.column_name;
              if h.param_type = '0' then  --定制
                  exec_value := exec_value || ',' || h.default_value;
              elsif h.param_type = '1' then  --从执行结果取值
                  temp_sql := h.default_value;
                  execute immediate temp_sql into temp_result;
                  exec_value := exec_value || ',''' || temp_result || '''';
              elsif h.param_type = '2' then   --将？替换成参数值，并从结果取值
                  for i in 1..tmp_key.count loop
                      t_cur_column := tmp_key(i);
                      if t_cur_column = h.Replace_Field then
                          t_cur_value := tmp_value(i);
                          exit;
                      end if;
                  end loop;
                  if t_cur_value is not null then
                      temp_sql := REPLACE(h.default_value, '?', t_cur_value);
                      execute immediate temp_sql into temp_result;
                      exec_value := exec_value || ',''' || temp_result || '''';
                  else
                      exec_value := exec_value || ',NULL';
                  end if;
                  if  h.column_name = 'CUSTOMER_ID' then
                      op_customer_id := temp_result;
                  elsif h.column_name = 'CUSTOMER_NAME' then
                      op_customer_name := temp_result;
                  end if;
              elsif h.param_type = '3' then  --直接从临时表上取值
                  for i in 1..tmp_key.count loop
                      t_cur_column := tmp_key(i);
                      if t_cur_column = h.column_name then
                          t_cur_value := tmp_value(i);
                          exit;
                      end if;
                  end loop;
                  if t_cur_value is null and h.column_name = 'CUSTOMER_NAME' then
                     goto next_loop;
                  end if;
                  if t_cur_value is null then
                      exec_value := exec_value || ',NULL';
                  else
                      exec_value := exec_value || ',''' || t_cur_value || '''';
                  end if;
             end if;
          end loop;
      end if;
      <<next_loop>>
          OUTPUT_RESULLT := '';
      if length(exec_value) > 1 then
          --获取托运单号
          SP_GET_IDSEQ('ORDER',op_odr_no);

          exec_sql := 'INSERT INTO TRANS_ORDER_HEADER(ODR_NO,ADDWHO,ADDTIME' || exec_sql || ') VALUES(''' || op_odr_no || ''',''' || IN_USERID || ''',sysdate' || exec_value || ')';
          execute immediate exec_sql;

          odr_lst.extend();
          odr_lst(odr_lst.count) := op_odr_no;
      end if;
      exec_sql := '';
      exec_value := '';
      op_packid := '2EEB495B515049B3A9CD76572DDDC999';
      for h in item loop
          tmp_table := h.table_name;
          tmp_column := h.column_name;
          tmp_param_type := h.param_type;
          tmp_replace_field := h.replace_field;
          tmp_default_value := h.default_value;
          if h.param_type = '0' then  --定制
              exec_sql := exec_sql || ',' || h.column_name;
              exec_value := exec_value || ',' || h.default_value;
          elsif h.param_type = '1' then  --从执行结果取值
              exec_sql := exec_sql || ',' || h.column_name;
              temp_sql := h.default_value;
              execute immediate temp_sql into temp_result;
              exec_value := exec_value || ',''' || temp_result || '''';
          elsif h.param_type = '2' then   --将？替换成参数值，并从结果取值
              exec_sql := exec_sql || ',' || h.column_name;
              for i in 1..tmp_key.count loop
                  t_cur_column := tmp_key(i);
                  if t_cur_column = h.replace_field then
                      t_cur_value := tmp_value(i);
                      exit;
                  end if;
              end loop;
              if t_cur_value is not null then
                  temp_sql := REPLACE(h.default_value, '?', t_cur_value);
                  execute immediate temp_sql into temp_result;
                  exec_value := exec_value || ',''' || temp_result || '''';
              else
                  exec_value := exec_value || ',NULL';
              end if;
          elsif h.param_type = '3' then  --直接从临时表上取值
              for i in 1..tmp_key.count loop
                  t_cur_column := tmp_key(i);
                  if t_cur_column = h.column_name then
                      t_cur_value := tmp_value(i);
                      exit;
                  end if;
              end loop;
              if h.column_name = 'LOAD_CODE' then
                  load_code := t_cur_value;
                  if load_code is not null then
                      exec_sql := exec_sql || ',' || h.column_name;
                      exec_value := exec_value || ',''' || t_cur_value || '''';
                  end if;
              elsif h.column_name = 'UNLOAD_CODE' then
                  unload_code := t_cur_value;
                  if unload_code is not null then
                      exec_sql := exec_sql || ',' || h.column_name;
                      exec_value := exec_value || ',''' || t_cur_value || '''';
                  end if;
              elsif h.column_name = 'UNLOAD_AREA_NAME' then
                  op_unload_area_name := t_cur_value;
                  if op_unload_area_name is not null then
                      exec_sql := exec_sql || ',' || h.column_name;
                      exec_value := exec_value || ',''' || t_cur_value || '''';
                  end if;
              elsif h.column_name = 'UNLOAD_AREA_NAME2' then
                  op_unload_area_name2 := t_cur_value;
                  if op_unload_area_name2 is not null then
                      exec_sql := exec_sql || ',' || h.column_name;
                      exec_value := exec_value || ',''' || t_cur_value  || '''';
                  end if;
              elsif h.column_name = 'UNLOAD_AREA_NAME3' then
                  op_unload_area_name3 := t_cur_value;
                  if op_unload_area_name3 is not null then
                      exec_sql := exec_sql || ',' || h.column_name;
                      exec_value := exec_value || ',''' || t_cur_value || '''';
                  end if;
              elsif h.column_name = 'UNLOAD_ADDRESS' then
                  op_unload_address := t_cur_value;
                  if op_unload_address is not null then
                      exec_sql := exec_sql || ',' || h.column_name;
                      exec_value := exec_value || ',''' || t_cur_value || '''';
                  end if;
              elsif h.column_name = 'UNLOAD_CONTACT' then
                  op_unload_contact := t_cur_value;
                  if op_unload_contact is not null then
                      exec_sql := exec_sql || ',' || h.column_name;
                      exec_value := exec_value || ',''' || t_cur_value || '''';
                  end if;
              elsif h.column_name = 'UNLOAD_TEL' then
                  op_unload_tel := t_cur_value;
                  if op_unload_tel is not null then
                      exec_sql := exec_sql || ',' || h.column_name;
                      exec_value := exec_value || ',''' || t_cur_value || '''';
                  end if;
              elsif h.column_name = 'LOAD_AREA_NAME' then
                  op_load_area_name := t_cur_value;
                  if op_load_area_name is not null then
                      exec_sql := exec_sql || ',' || h.column_name;
                      exec_value := exec_value || ',''' || t_cur_value || '''';
                  end if;
              elsif h.column_name = 'LOAD_AREA_NAME2' then
                  op_load_area_name2 := t_cur_value;
                  if op_load_area_name2 is not null then
                      exec_sql := exec_sql || ',' || h.column_name;
                      exec_value := exec_value || ',''' || t_cur_value || '''';
                  end if;
              elsif h.column_name = 'LOAD_AREA_NAME3' then
                  op_load_area_name3 := t_cur_value;
                  if op_load_area_name3 is not null then
                      exec_sql := exec_sql || ',' || h.column_name;
                      exec_value := exec_value || ',''' || t_cur_value || '''';
                  end if;
              elsif h.column_name = 'LOAD_ADDRESS' then
                  op_load_address := t_cur_value;
                  if op_load_address is not null then
                      exec_sql := exec_sql || ',' || h.column_name;
                      exec_value := exec_value || ',''' || t_cur_value || '''';
                  end if;
              elsif h.column_name = 'LOAD_CONTACT' then
                  op_load_contact := t_cur_value;
                  if op_load_contact is not null then
                      exec_sql := exec_sql || ',' || h.column_name;
                      exec_value := exec_value || ',''' || t_cur_value || '''';
                  end if;
              elsif h.column_name = 'LOAD_TEL' then
                  op_load_tel := t_cur_value;
                  if op_load_tel is not null then
                      exec_sql := exec_sql || ',' || h.column_name;
                      exec_value := exec_value || ',''' || t_cur_value || '''';
                  end if;
              elsif h.column_name = 'SKU' then
                  if t_cur_value is not null then
                      select id into op_packid from bas_sku where sku = t_cur_value;
                  end if;
                  exec_sql := exec_sql || ',' || h.column_name;
                  exec_value := exec_value || ',''' || t_cur_value || '''';
              else
                  exec_sql := exec_sql || ',' || h.column_name;
                  exec_value := exec_value || ',''' || t_cur_value || '''';
              end if;
         elsif h.param_type = '4' then --发货地址特殊处理
              if load_code is null then  --先自动录入地址信息再处理
                  select F_GET_DEFAULT_ORGBYUSER(IN_USERID, 0) into op_exec_org_id from dual;
                  select sys_guid() into op_id from dual;
                  select area_code into op_load_area_id from bas_area where area_cname=op_load_area_name and area_level=3 and rownum=1;
                  select area_code into op_load_area_id2 from bas_area where area_cname=op_load_area_name2 and area_level=4 and rownum=1;
                  load_code := substr(F_ZJM(op_load_address),0,32);
                  op_load_name := substr(op_load_address,0,100);
                  if op_load_area_name3 is not null then
                      select area_code into op_load_area_id3 from bas_area where area_cname=op_load_area_name3 and area_level=5 and rownum=1;
                  end if;

                  select count(1) into r_count from bas_address where customer_id = op_customer_id and addr_code = load_code;
                  if r_count > 0 then
                      select id,addr_name,area_id,area_id2,area_id3 into op_id,op_load_name,op_load_area_id,op_load_area_id2,op_load_area_id3
                        from bas_address where customer_id = op_customer_id and addr_code = load_code;
                  else
                      --插入地址
                      insert into bas_address(id,addr_code,customer_id,customer_name,load_flag,transfer_flag,recv_flag,area_id,area_name,addr_name,address,
                        cont_name,cont_tel,addr_typ,create_org_id,exec_org_id,enable_flag,addtime,addwho,area_id2,area_name2,area_id3,area_name3)
                      values(op_id,load_code,op_customer_id,op_customer_name,'Y','N','N',op_load_area_id,op_load_area_name,op_load_name,op_load_address,
                        op_load_contact,op_load_tel,'9E0057747CC24A4BB998749752D2C42E',op_exec_org_id,op_exec_org_id,'Y',sysdate,IN_USERID,op_load_area_id2,op_load_area_name2,op_load_area_id3,op_load_area_name3);
                  end if;
                  --exec_value := exec_value || ',''' || op_id || '''';

                  exec_sql := exec_sql || ',LOAD_ID,LOAD_CODE,LOAD_NAME,LOAD_AREA_ID,LOAD_AREA_ID2,LOAD_AREA_ID3';
                  exec_value := exec_value || ',''' || op_id || ''',''' || load_code || ''',''' || op_load_name || ''',''' || op_load_area_id || ''','''
                     || op_load_area_id2 || ''',''' || op_load_area_id3 || '''';
              else
                  select count(1) into r_count from bas_address where addr_code = load_code;
                  if r_count > 1 then
                      select count(1) into r_count from bas_address where customer_id = op_customer_id and addr_code = load_code;
                      if r_count > 1 or r_count = 0 then
                          OUTPUT_RESULLT := OUTPUT_RESULLT || '第'|| r_LINE ||'行收货方代码['|| unload_code ||']重复<br />';
                          for h in 1..odr_lst.count loop
                              op_odr_no := odr_lst(h);
                              delete from trans_order_header where odr_no = op_odr_no;
                              delete from trans_order_item where odr_no = op_odr_no;
                          end loop;
                          commit;
                          return;
                      else
                          select id,addr_name,area_id,area_name,area_id2,area_name2,area_id3,area_name3,cont_name,cont_tel,address
                          into op_id,op_load_name,op_load_area_id,op_load_area_name,op_load_area_id2,op_load_area_name2,op_load_area_id3,op_load_area_name3,tmp_load_contact,tmp_load_tel,tmp_load_address
                          from bas_address where customer_id = op_customer_id and addr_code = load_code; 
                      end if;
                  else
                      select id,addr_name,area_id,area_name,area_id2,area_name2,area_id3,area_name3,cont_name,cont_tel,address
                      into op_id,op_load_name,op_load_area_id,op_load_area_name,op_load_area_id2,op_load_area_name2,op_load_area_id3,op_load_area_name3,tmp_load_contact,tmp_load_tel,tmp_load_address
                      from bas_address where addr_code = load_code;
                  end if;

                  exec_sql := exec_sql || ',LOAD_ID,LOAD_NAME,LOAD_AREA_ID,LOAD_AREA_NAME,LOAD_AREA_ID2,LOAD_AREA_NAME2,LOAD_AREA_ID3,LOAD_AREA_NAME3';
                  exec_value := exec_value || ',''' || op_id || ''',''' || op_load_name || ''',''' || op_load_area_id || ''',''' || op_load_area_name ||''','''
                     || op_load_area_id2 || ''',''' || op_load_area_name2 ||''',''' || op_load_area_id3 || ''',''' || op_load_area_name3 || '''';
                  if op_load_address is null then
                      exec_sql := exec_sql || ',LOAD_ADDRESS';
                      exec_value := exec_value || ',''' || tmp_load_address || '''';
                  end if;
                  if op_load_contact is null then
                      exec_sql := exec_sql || ',LOAD_CONTACT';
                      exec_value := exec_value || ',''' || tmp_load_contact || '''';
                  end if;
                  if op_load_tel is null then
                      exec_sql := exec_sql || ',LOAD_TEL';
                      exec_value := exec_value || ',''' || tmp_load_tel || '''';
                  end if;
              end if;
              --exec_value := exec_value || ',' || t_cur_value;
         elsif h.param_type = '5' then --收货地址特殊处理
              if unload_code is null then  --先自动录入地址信息再处理
                  select F_GET_DEFAULT_ORGBYUSER(IN_USERID, 0) into op_exec_org_id from dual;
                  select sys_guid() into op_id from dual;
                  select area_code into op_unload_area_id from bas_area where area_cname=op_unload_area_name and area_level=3 and rownum=1;
                  select area_code into op_unload_area_id2 from bas_area where area_cname=op_unload_area_name2 and area_level=4 and rownum=1;
                  unload_code := substr(F_ZJM(op_unload_address),0,32);
                  op_unload_name := substr(op_unload_address,0,100);
                  if op_unload_area_name3 is not null then
                      select area_code into op_unload_area_id3 from bas_area where area_cname=op_unload_area_name3 and area_level=5 and rownum=1;
                  end if;

                  select count(1) into r_count from bas_address where customer_id = op_customer_id and addr_code = unload_code;
                  if r_count > 0 then
                      select id,addr_name,area_id,area_id2,area_id3 into op_id,op_unload_name,op_unload_area_id,op_unload_area_id2,op_unload_area_id3
                      from bas_address where addr_code = unload_code and customer_id = op_customer_id;
                  else
                      --插入地址
                      insert into bas_address(id,addr_code,customer_id,customer_name,load_flag,transfer_flag,recv_flag,area_id,area_name,addr_name,address,
                        cont_name,cont_tel,addr_typ,create_org_id,exec_org_id,enable_flag,addtime,addwho,area_id2,area_name2,area_id3,area_name3)
                      values(op_id,unload_code,op_customer_id,op_customer_name,'N','N','Y',op_unload_area_id,op_unload_area_name,op_unload_name,op_unload_address,
                        op_unload_contact,op_unload_tel,'9E0057747CC24A4BB998749752D2C42E',op_exec_org_id,op_exec_org_id,'Y',sysdate,IN_USERID,op_unload_area_id2,op_unload_area_name2,op_unload_area_id3,op_unload_area_name3);
                  end if;
                  --exec_value := exec_value || ',''' || op_id || '''';

                  exec_sql := exec_sql || ',UNLOAD_ID,UNLOAD_CODE,UNLOAD_NAME,UNLOAD_AREA_ID,UNLOAD_AREA_ID2,UNLOAD_AREA_ID3';
                  exec_value := exec_value || ',''' || op_id || ''',''' || unload_code || ''',''' || op_unload_name || ''',''' || op_unload_area_id || ''','''
                     || op_unload_area_id2 || ''',''' || op_unload_area_id3 || '''';
              else
                  select count(1) into r_count from bas_address where addr_code = unload_code;
                  if r_count > 1 then
                      select count(1) into r_count from bas_address where customer_id = op_customer_id and addr_code = unload_code;
                      if r_count > 1 or r_count = 0 then
                          OUTPUT_RESULLT := OUTPUT_RESULLT || '第'|| r_LINE ||'行收货方代码['|| unload_code ||']重复<br />';
                          for h in 1..odr_lst.count loop
                              op_odr_no := odr_lst(h);
                              delete from trans_order_header where odr_no = op_odr_no;
                              delete from trans_order_item where odr_no = op_odr_no;
                          end loop;
                          commit;
                          return;
                      else
                          select id,addr_name,area_id,area_name,area_id2,area_name2,area_id3,area_name3,address,cont_name,cont_tel
                          into op_id,op_unload_name,op_unload_area_id,op_unload_area_name,op_unload_area_id2,op_unload_area_name2,op_unload_area_id3,op_unload_area_name3,tmp_unload_address,tmp_unload_contact,tmp_unload_tel
                          from bas_address where customer_id = op_customer_id and addr_code = unload_code; 
                      end if;
                  else
                      select id,addr_name,area_id,area_name,area_id2,area_name2,area_id3,area_name3,address,cont_name,cont_tel
                      into op_id,op_unload_name,op_unload_area_id,op_unload_area_name,op_unload_area_id2,op_unload_area_name2,op_unload_area_id3,op_unload_area_name3,tmp_unload_address,tmp_unload_contact,tmp_unload_tel
                      from bas_address where addr_code = unload_code;
                  end if;
                  exec_sql := exec_sql || ',UNLOAD_ID,UNLOAD_NAME,UNLOAD_AREA_ID,UNLOAD_AREA_NAME,UNLOAD_AREA_ID2,UNLOAD_AREA_NAME2,UNLOAD_AREA_ID3,UNLOAD_AREA_NAME3';
                  exec_value := exec_value || ',''' || op_id || ''',''' || op_unload_name || ''',''' || op_unload_area_id || ''',''' || op_unload_area_name || ''','''
                     || op_unload_area_id2 || ''',''' || op_unload_area_name2 || ''',''' || op_unload_area_id3 || ''',''' || op_unload_area_name3 || '''';
                  if op_unload_address is null then
                      exec_sql := exec_sql || ',UNLOAD_ADDRESS';
                      exec_value := exec_value || ',''' || tmp_unload_address || '''';
                  end if;
                  if op_unload_contact is null then
                      exec_sql := exec_sql || ',UNLOAD_CONTACT';
                      exec_value := exec_value || ',''' || tmp_unload_contact || '''';
                  end if;
                  if op_unload_tel is null then
                      exec_sql := exec_sql || ',UNLOAD_TEL';
                      exec_value := exec_value || ',''' || tmp_unload_tel || '''';
                  end if;
              end if;
              --exec_value := exec_value || ',' || t_cur_value;
         end if;
         <<next_loop>>
             OUTPUT_RESULLT := '';
      end loop;
      select nvl(max(odr_row),0) + 1 into op_odr_row from trans_order_item where odr_no = op_odr_no;
      exec_sql := 'INSERT INTO TRANS_ORDER_ITEM(ODR_NO,ODR_ROW,ADDWHO,PACK_ID,ADDTIME' || exec_sql || ') VALUES(''' || op_odr_no || ''',' || op_odr_row || ',''' || IN_USERID || ''',''' || op_packid ||''',sysdate' || exec_value || ')';
      execute immediate exec_sql;
      
      ORDER_QTY_COUNT(op_odr_no, OUTPUT_RESULLT); --汇总订单信息
      --更新订单发货点和收货点信息
      UPDATE TRANS_ORDER_HEADER SET (LOAD_ID,LOAD_NAME,LOAD_AREA_ID,LOAD_AREA_NAME,LOAD_AREA_ID2,LOAD_AREA_NAME2,LOAD_AREA_ID3,LOAD_AREA_NAME3,LOAD_ADDRESS,LOAD_CONTACT,LOAD_TEL,LOAD_CODE)= ( select LOAD_ID,LOAD_NAME,LOAD_AREA_ID,LOAD_AREA_NAME,LOAD_AREA_ID2,LOAD_AREA_NAME2,LOAD_AREA_ID3,LOAD_AREA_NAME3,LOAD_ADDRESS,LOAD_CONTACT,LOAD_TEL,LOAD_CODE  from TRANS_ORDER_ITEM where TRANS_ORDER_HEADER.ODR_NO = TRANS_ORDER_ITEM.ODR_NO and TRANS_ORDER_ITEM.ODR_ROW = (select min(odr_row) from trans_order_item where ODR_NO = op_odr_no)) where TRANS_ORDER_HEADER.ODR_NO = op_odr_no;
      UPDATE TRANS_ORDER_HEADER SET (UNLOAD_ID,UNLOAD_NAME,UNLOAD_AREA_ID,UNLOAD_AREA_NAME,UNLOAD_AREA_ID2,UNLOAD_AREA_NAME2,UNLOAD_AREA_ID3,UNLOAD_AREA_NAME3,UNLOAD_ADDRESS,UNLOAD_CONTACT,UNLOAD_TEL,UNLOAD_CODE)= ( select UNLOAD_ID,UNLOAD_NAME,UNLOAD_AREA_ID,UNLOAD_AREA_NAME,UNLOAD_AREA_ID2,UNLOAD_AREA_NAME2,UNLOAD_AREA_ID3,UNLOAD_AREA_NAME3,UNLOAD_ADDRESS,UNLOAD_CONTACT,UNLOAD_TEL,UNLOAD_CODE  from TRANS_ORDER_ITEM where TRANS_ORDER_HEADER.ODR_NO = TRANS_ORDER_ITEM.ODR_NO and TRANS_ORDER_ITEM.ODR_ROW = (select max(odr_row) from trans_order_item where ODR_NO = op_odr_no)) where TRANS_ORDER_HEADER.ODR_NO = op_odr_no;
      
      OUTPUT_RESULLT := '00';
  end loop;
  close C_ACT;
  commit; 

  delete from TMP_ORDER_IMPORT WHERE TMPID = IN_TMPID;
  /*for h in 1..odr_lst.count loop
      op_odr_no := odr_lst(h);
      ORDER_QTY_COUNT(op_odr_no, OUTPUT_RESULLT); --汇总订单信息
      --更新订单发货点和收货点信息
      UPDATE TRANS_ORDER_HEADER SET (LOAD_ID,LOAD_NAME,LOAD_AREA_ID,LOAD_AREA_NAME,LOAD_AREA_ID2,LOAD_AREA_NAME2,LOAD_AREA_ID3,LOAD_AREA_NAME3,LOAD_ADDRESS,LOAD_CONTACT,LOAD_TEL,LOAD_CODE)= ( select LOAD_ID,LOAD_NAME,LOAD_AREA_ID,LOAD_AREA_NAME,LOAD_AREA_ID2,LOAD_AREA_NAME2,LOAD_AREA_ID3,LOAD_AREA_NAME3,LOAD_ADDRESS,LOAD_CONTACT,LOAD_TEL,LOAD_CODE  from TRANS_ORDER_ITEM where TRANS_ORDER_HEADER.ODR_NO = TRANS_ORDER_ITEM.ODR_NO and TRANS_ORDER_ITEM.ODR_ROW = (select min(odr_row) from trans_order_item where ODR_NO = op_odr_no)) where TRANS_ORDER_HEADER.ODR_NO = op_odr_no;
      UPDATE TRANS_ORDER_HEADER SET (UNLOAD_ID,UNLOAD_NAME,UNLOAD_AREA_ID,UNLOAD_AREA_NAME,UNLOAD_AREA_ID2,UNLOAD_AREA_NAME2,UNLOAD_AREA_ID3,UNLOAD_AREA_NAME3,UNLOAD_ADDRESS,UNLOAD_CONTACT,UNLOAD_TEL,UNLOAD_CODE)= ( select UNLOAD_ID,UNLOAD_NAME,UNLOAD_AREA_ID,UNLOAD_AREA_NAME,UNLOAD_AREA_ID2,UNLOAD_AREA_NAME2,UNLOAD_AREA_ID3,UNLOAD_AREA_NAME3,UNLOAD_ADDRESS,UNLOAD_CONTACT,UNLOAD_TEL,UNLOAD_CODE  from TRANS_ORDER_ITEM where TRANS_ORDER_HEADER.ODR_NO = TRANS_ORDER_ITEM.ODR_NO and TRANS_ORDER_ITEM.ODR_ROW = (select max(odr_row) from trans_order_item where ODR_NO = op_odr_no)) where TRANS_ORDER_HEADER.ODR_NO = op_odr_no;
  end loop;*/
  OUTPUT_RESULLT := '00';
  commit;
  EXCEPTION
    WHEN OTHERS THEN
        OUTPUT_RESULLT :='01'||sqlerrm || ']';
        rollback;
        
        insert into t_input_excel_temp(type_name,VALUE,line,column_name,column_cname,id,custom_odr_no) 
        values(tmp_param_type,tmp_default_value,r_LINE,tmp_column,substr(OUTPUT_RESULLT,0,199),to_char(sysdate,'YYYY-MM-DD HH24:MI'),tmp_table);
        
        delete from TMP_ORDER_IMPORT WHERE TMPID = IN_TMPID;
        for h in 1..odr_lst.count loop
            op_odr_no := odr_lst(h);
            delete from trans_order_header where odr_no = op_odr_no;
            delete from trans_order_item where odr_no = op_odr_no;
        end loop;
        commit;
        --RAISE_APPLICATION_ERROR(-20101, '执行全局校验时抛出异常: '||sqlerrm, TRUE);
END;
/


--t_input_excel_verify
25	BTCH_NUM	1	TRANS_ORDER_HEADER	TMP_ORDER_IMPORT		AAAXMoAAGAAACLcABa
--t_Input_Excel_Default
29	TRANS_ORDER_HEADER	BTCH_NUM		3		1	AAAXMjAAGAAACLOAAA


create or replace view v_shipment_item as
select  trans."ID",trans."SHPM_NO",trans."SHPM_ROW",trans."ODR_NO",trans."PARN_SHPM_NO",
        trans."SKU_ID",trans."SKU_NAME",trans."SKU_ENAME",trans."PACK_ID",
        trans."UOM",trans."QNTY",trans."VOL",trans."VOL_UNIT",trans."G_WGT",trans."N_WGT",
        trans."WGT_UNIT",trans."WORTH",
        trans."UNLD_QNTY",trans.UNLD_VOL,
       trans."UNLD_GWGT",trans."LD_NWGT",trans."LD_WORTH",
        trans."LD_QNTY",trans."LD_VOL",trans."LD_GWGT",trans."UNLD_NWGT",
        trans."UNLD_WORTH",trans."LOTATT01" as LOTATT01,trans."LOTATT02",
        trans."LOTATT03",trans."LOTATT04",
        trans."REFENENCE1",trans."REFENENCE2",trans."REFENENCE3",trans."REFENENCE4",trans."NOTES",
        trans."ADDTIME",trans."ADDWHO",trans."EDITTIME",trans."EDIWHO",trans."ODR_QNTY",
        trans.sku,trans.qnty_each,trans.temperature1,t1.name_c as temperature1_NAME,head.unload_area_id2,
        head.exec_org_id_name,head.plate_no,head.mobile,head.driver,head.unload_tel,head.unload_contact,
        head.unload_address,head.unload_area_name2,head.unload_name,head.load_name,head.UNLOAD_AREA_ID
 from TRANS_SHIPMENT_ITEM trans
 ,TRANS_SHIPMENT_HEADER head
 ,bas_codes t1
 where trans.shpm_no = head.shpm_no
 and  trans.temperature1 = t1.id(+) and t1.prop_code(+) = 'TRANS_COND';

 create or replace view lc_pay_suplr_header as
select to_char(rownum-1) as col1,'C004' as col2,'' as col3,to_char(last_day(add_months(sysdate,-1)),'YYYY-MM-DD') as col4,to_char(last_day(add_months(sysdate,-1)),'YYYY-MM-DD') as col5
,'供应商' as col6,t1.suplr_cname as col7,'业务管理' as col8,'余磊' as col9,'业务管理' as col10,'人民币' as col11,t1.udf1 as col12
 from bill_pay_initial t
 ,bas_supplier t1
 where t.suplr_id  = t1.id(+)
 and t.belong_month = to_char(last_day(add_months(sysdate,-1)),'YYYYMM');
 
 
 create or replace view lc_pay_suplr_detail as
select rownum-1 as col1,'' as col2,'P' || to_char(last_day(add_months(sysdate,-1)),'YYYYMM') || '01' AS col3,
 'P' || to_char(last_day(add_months(sysdate,-1)),'YYYYMM') || '-' || t1.short_name as col4,
 'P' || to_char(last_day(add_months(sysdate,-1)),'YYYYMM') || '-' || t1.short_name as col5,t1.udf2 || '天' as col6,'供应商' as col7,t1.suplr_cname as col8,
 '业务管理' as col9,'余磊' as col10,'长途运输成本Long-distanceTruckingCost' as col11,t3.customer_cname as col12,'人民币' as col13,'1' as col14,t.TOT_AMOUNT as col15,
 t.TOT_AMOUNT as col16,'CN03' as col17,t1.udf2 as col18,'' as col19,'' as col20,'' as col21,to_char(last_day(add_months(sysdate,-1)),'YYYY-MM-DD') as col22,
 '' as col23,t.belong_month as col24,t2.short_name as col25,'' as col26,'国内采购' as col27
 from bill_pay_initdetails t
 ,bas_supplier t1
 ,BAS_CUSTOMER t2
 ,bas_customer t3
 where t.suplr_id = t1.id(+)
 and t.customer_id = t2.id(+)
 and t2.parent_customer_id = t3.id(+);


create or replace view lc_pay_customer_header as
select to_char(rownum-1) as col1,'C004' as col2,'' as col3,to_char(last_day(add_months(sysdate,-1)),'YYYY-MM-DD') as col4,to_char(last_day(add_months(sysdate,-1)),'YYYY-MM-DD') as col5
,'供应商' as col6,t1.suplr_cname as col7,'业务管理' as col8,'余磊' as col9,'业务管理' as col10,'人民币' as col11,t1.udf1 as col12
 from bill_pay_initial t
 ,bas_supplier t1
 where t.suplr_id  = t1.id(+)
 and t.belong_month = to_char(last_day(add_months(sysdate,-1)),'YYYYMM');


create or replace view lc_pay_customer_detail as
select rownum-1 as col1,'' as col2,'P' || to_char(last_day(add_months(sysdate,-1)),'YYYYMM') || '01' AS col3,
 'P' || to_char(last_day(add_months(sysdate,-1)),'YYYYMM') || '-' || t1.short_name as col4,
 'P' || to_char(last_day(add_months(sysdate,-1)),'YYYYMM') || '-' || t1.short_name as col5,t1.udf2 || '天' as col6,'供应商' as col7,t1.suplr_cname as col8,
 '业务管理' as col9,'余磊' as col10,'长途运输成本Long-distanceTruckingCost' as col11,t3.customer_cname as col12,'人民币' as col13,'1' as col14,t.TOT_AMOUNT as col15,
 t.TOT_AMOUNT as col16,'CN03' as col17,t1.udf2 as col18,'' as col19,'' as col20,'' as col21,to_char(last_day(add_months(sysdate,-1)),'YYYY-MM-DD') as col22,
 '' as col23,t.belong_month as col24,t2.short_name as col25,'' as col26,'国内采购' as col27
 from bill_pay_initdetails t
 ,bas_supplier t1
 ,BAS_CUSTOMER t2
 ,bas_customer t3
 where t.suplr_id = t1.id(+)
 and t.customer_id = t2.id(+)
 and t2.parent_customer_id = t3.id(+);


create or replace view lc_rec_detail as
select rownum-1 as col1,'' as col2,'R' || to_char(last_day(add_months(sysdate,-1)),'YYYYMM') || '01' AS col3,
 'R' || to_char(last_day(add_months(sysdate,-1)),'YYYYMM') || '-' || t1.short_name as col4,
 t1.short_name || to_char(last_day(add_months(sysdate,-1)),'YYYYMM') as col5,t1.udf2 || '天' as col6,'客户' as col7,t2.customer_cname as col8,
 '' as col9,t1.udf4 as col10,'夏乙禾' as col11,'人民币' as col12,t.TOT_AMOUNT as col13,'1' as col14,t.TOT_AMOUNT as col15,
 'CN06' as col16,t1.udf2 as col17,'' as col18,'' as col19,'' as col20,to_char(last_day(add_months(sysdate,-1)),'YYYY-MM-DD') as col21,
 t.buss_name as col22,t.belong_month as col23,'' as col24,'国内销售' as col25
 from bill_rec_initdetails t
 ,bas_customer t1
 ,bas_customer t2
 where t.buss_id = t1.id
 and t1.parent_customer_id = t2.id(+);

create or replace view lc_rec_header as
select to_char(rownum-1) as col1,'' as col2,'C004' as col3,to_char(last_day(add_months(sysdate,-1)),'YYYY-MM-DD') as col4,to_char(last_day(add_months(sysdate,-1)),'YYYY-MM-DD') as col5
,'客户' as col6,t2.customer_cname as col7,'客服' as col8,'夏乙禾' as col9,'客服' as col10,'人民币' as col11,t1.udf1 as col12
 from bill_rec_initial t
 ,bas_customer t1
 ,Bas_customer t2
 where t.buss_id  = t1.id
 and t1.parent_customer_id = t2.id(+)
 and t.belong_month = to_char(last_day(add_months(sysdate,-1)),'YYYYMM');


-- Create table
create table SYS_WARN_SETTING
(
  ID         VARCHAR2(32) not null,
  WARN_TYPE  VARCHAR2(32),
  WARN_DESCR VARCHAR2(32),
  ADDTIME    DATE not null,
  ADDWHO     VARCHAR2(32) not null,
  EDITTIME   DATE,
  EDITWHO    VARCHAR2(32)
)
tablespace USERS
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 16
    next 8
    minextents 1
    maxextents unlimited
  );
-- Add comments to the columns 
comment on column SYS_WARN_SETTING.WARN_TYPE
  is '预警类型';
comment on column SYS_WARN_SETTING.WARN_DESCR
  is '预警描述';


-- Create table
create table SYS_WARN_MAIL
(
  ID          VARCHAR2(32),
  EMAIL       VARCHAR2(100),
  USERNAME    VARCHAR2(50),
  ACTIVE_FLAG CHAR(1),
  ADDTIME     DATE,
  ADDWHO      VARCHAR2(30),
  EDITTIME    DATE,
  EDITWHO     VARCHAR2(30),
  SETT_ID     VARCHAR2(32),
  MAIL_LEVEL  NUMBER(4)
)
tablespace USERS
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 16
    next 8
    minextents 1
    maxextents unlimited
  );


-- Create table
create table SYS_WARN_SMS
(
  ID          VARCHAR2(32),
  MOBILE      VARCHAR2(20),
  USERNAME    VARCHAR2(50),
  ACTIVE_FLAG CHAR(1),
  ADDTIME     DATE not null,
  ADDWHO      VARCHAR2(20) not null,
  EDITTIME    DATE,
  EDITWHO     VARCHAR2(20),
  SETT_ID     VARCHAR2(32),
  SMS_LEVEL   NUMBER(4)
)
tablespace USERS
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 16
    next 8
    minextents 1
    maxextents unlimited
  );


insert into SYS_WARN_MAIL (ID, EMAIL, USERNAME, ACTIVE_FLAG, ADDTIME, ADDWHO, EDITTIME, EDITWHO, SETT_ID, MAIL_LEVEL)
values ('3B8A175A969A49B1A81A049DB7311A76', 'sandy@56infor.cn', '袁磊', 'Y', to_date('05-05-2017 08:54:38', 'dd-mm-yyyy hh24:mi:ss'), 'wpsadmin', null, null, 'C333FDD2A38D4444BFBAD0763122FFC3', null);
insert into SYS_WARN_MAIL (ID, EMAIL, USERNAME, ACTIVE_FLAG, ADDTIME, ADDWHO, EDITTIME, EDITWHO, SETT_ID, MAIL_LEVEL)
values ('D808B5427F8C4B4B9674BAB03B7F8931', 'sandy@56infor.cn', '袁磊', 'Y', to_date('05-05-2017 08:50:39', 'dd-mm-yyyy hh24:mi:ss'), 'wpsadmin', null, null, '5709FCF3E9254FB58815DC0BDFB81394', null);
insert into SYS_WARN_MAIL (ID, EMAIL, USERNAME, ACTIVE_FLAG, ADDTIME, ADDWHO, EDITTIME, EDITWHO, SETT_ID, MAIL_LEVEL)
values ('2FE2B437A3104C8283F84F297029A466', 'sandy@56infor.cn', '袁磊', 'Y', to_date('05-05-2017 08:54:08', 'dd-mm-yyyy hh24:mi:ss'), 'wpsadmin', null, null, '8FBBD30A583A4A4EAFDABC64D9C6923D', null);
insert into SYS_WARN_MAIL (ID, EMAIL, USERNAME, ACTIVE_FLAG, ADDTIME, ADDWHO, EDITTIME, EDITWHO, SETT_ID, MAIL_LEVEL)
values ('09B3DC8370BF43FEA459F87BCD3FD503', 'sandy@56infor.cn', '袁磊', 'Y', to_date('05-05-2017 08:55:05', 'dd-mm-yyyy hh24:mi:ss'), 'wpsadmin', null, null, '7020544EEF024CF4867EEB75B91719E3', null);
insert into SYS_WARN_MAIL (ID, EMAIL, USERNAME, ACTIVE_FLAG, ADDTIME, ADDWHO, EDITTIME, EDITWHO, SETT_ID, MAIL_LEVEL)
values ('D8F1939E541D46B4B948E3059F65B2E4', 'sandy_23678@163.com', '袁磊', 'Y', to_date('05-05-2017 08:55:47', 'dd-mm-yyyy hh24:mi:ss'), 'wpsadmin', null, null, '7020544EEF024CF4867EEB75B91719E3', null);
insert into SYS_WARN_MAIL (ID, EMAIL, USERNAME, ACTIVE_FLAG, ADDTIME, ADDWHO, EDITTIME, EDITWHO, SETT_ID, MAIL_LEVEL)
values ('6AC635838F884943B9E3B47008EE2507', 'sandy_23678@163.com', '袁磊', 'Y', to_date('05-05-2017 08:55:55', 'dd-mm-yyyy hh24:mi:ss'), 'wpsadmin', null, null, 'C333FDD2A38D4444BFBAD0763122FFC3', null);
insert into SYS_WARN_MAIL (ID, EMAIL, USERNAME, ACTIVE_FLAG, ADDTIME, ADDWHO, EDITTIME, EDITWHO, SETT_ID, MAIL_LEVEL)
values ('6AA1C6901D304A738D673AB589253DF1', 'sandy_23678@163.com', '袁磊', 'Y', to_date('05-05-2017 08:56:04', 'dd-mm-yyyy hh24:mi:ss'), 'wpsadmin', null, null, '8FBBD30A583A4A4EAFDABC64D9C6923D', null);
insert into SYS_WARN_MAIL (ID, EMAIL, USERNAME, ACTIVE_FLAG, ADDTIME, ADDWHO, EDITTIME, EDITWHO, SETT_ID, MAIL_LEVEL)
values ('8FE230289DAA451EA7CE29FF1FB454D8', 'sandy@56infor.cn', '袁磊', 'Y', to_date('05-05-2017 08:52:44', 'dd-mm-yyyy hh24:mi:ss'), 'wpsadmin', to_date('05-05-2017 08:56:29', 'dd-mm-yyyy hh24:mi:ss'), 'wpsadmin', '6D48742C67E843B68C6A2A958BF8A660', null);
insert into SYS_WARN_MAIL (ID, EMAIL, USERNAME, ACTIVE_FLAG, ADDTIME, ADDWHO, EDITTIME, EDITWHO, SETT_ID, MAIL_LEVEL)
values ('B2FF8F6A2A654E4D9D32BAE2EEFB6C03', 'sandy@56infor.cn', '袁磊', 'Y', to_date('05-05-2017 08:51:41', 'dd-mm-yyyy hh24:mi:ss'), 'wpsadmin', to_date('05-05-2017 08:52:08', 'dd-mm-yyyy hh24:mi:ss'), 'wpsadmin', '7216FF5365C943BF8B3A52F9D69624D7', null);
insert into SYS_WARN_MAIL (ID, EMAIL, USERNAME, ACTIVE_FLAG, ADDTIME, ADDWHO, EDITTIME, EDITWHO, SETT_ID, MAIL_LEVEL)
values ('7E7270023864436B9BFDB4450700A4C1', 'sandy@56infor.cn', '袁磊', 'Y', to_date('05-05-2017 08:53:42', 'dd-mm-yyyy hh24:mi:ss'), 'wpsadmin', null, null, 'CAA7DFDC4DED4872A85435018D201EDD', null);
insert into SYS_WARN_MAIL (ID, EMAIL, USERNAME, ACTIVE_FLAG, ADDTIME, ADDWHO, EDITTIME, EDITWHO, SETT_ID, MAIL_LEVEL)
values ('0CE09D8C6886409A912C1A45A30F2EE3', 'sandy_23678@163.com', '袁磊', 'Y', to_date('05-05-2017 08:56:40', 'dd-mm-yyyy hh24:mi:ss'), 'wpsadmin', null, null, '6D48742C67E843B68C6A2A958BF8A660', null);
insert into SYS_WARN_MAIL (ID, EMAIL, USERNAME, ACTIVE_FLAG, ADDTIME, ADDWHO, EDITTIME, EDITWHO, SETT_ID, MAIL_LEVEL)
values ('007DDBE71F7E4C9E8A41E44DC9326CDB', 'sandy_23678@163.com', '袁磊', 'Y', to_date('05-05-2017 08:56:47', 'dd-mm-yyyy hh24:mi:ss'), 'wpsadmin', null, null, '7216FF5365C943BF8B3A52F9D69624D7', null);
insert into SYS_WARN_MAIL (ID, EMAIL, USERNAME, ACTIVE_FLAG, ADDTIME, ADDWHO, EDITTIME, EDITWHO, SETT_ID, MAIL_LEVEL)
values ('183CFB382EA041E0A5E61B3BE1378BAE', 'sandy_23678@163.com', '袁磊', 'Y', to_date('05-05-2017 08:56:57', 'dd-mm-yyyy hh24:mi:ss'), 'wpsadmin', null, null, '978A950C22CC402DA0BA593ABBE2AD7A', null);
insert into SYS_WARN_MAIL (ID, EMAIL, USERNAME, ACTIVE_FLAG, ADDTIME, ADDWHO, EDITTIME, EDITWHO, SETT_ID, MAIL_LEVEL)
values ('2CC0CB18D9BE417FA7C719F2F6BC1E98', 'sandy_23678@163.com', '袁磊', 'Y', to_date('05-05-2017 08:57:05', 'dd-mm-yyyy hh24:mi:ss'), 'wpsadmin', null, null, '5709FCF3E9254FB58815DC0BDFB81394', null);
insert into SYS_WARN_MAIL (ID, EMAIL, USERNAME, ACTIVE_FLAG, ADDTIME, ADDWHO, EDITTIME, EDITWHO, SETT_ID, MAIL_LEVEL)
values ('FFB2A05B869845C19A02B801D9D5CEB1', 'sandy@56infor.cn', '袁磊', 'Y', to_date('05-05-2017 08:51:14', 'dd-mm-yyyy hh24:mi:ss'), 'wpsadmin', null, null, '978A950C22CC402DA0BA593ABBE2AD7A', null);
insert into SYS_WARN_MAIL (ID, EMAIL, USERNAME, ACTIVE_FLAG, ADDTIME, ADDWHO, EDITTIME, EDITWHO, SETT_ID, MAIL_LEVEL)
values ('68EDB0B9C1DA4ADEB02B9BA6939E175E', 'sandy@56infor.cn', '袁磊', 'Y', to_date('05-05-2017 08:53:17', 'dd-mm-yyyy hh24:mi:ss'), 'wpsadmin', to_date('05-05-2017 08:56:24', 'dd-mm-yyyy hh24:mi:ss'), 'wpsadmin', 'C6FA4178F05942678C1E1A66C722B234', null);
insert into SYS_WARN_MAIL (ID, EMAIL, USERNAME, ACTIVE_FLAG, ADDTIME, ADDWHO, EDITTIME, EDITWHO, SETT_ID, MAIL_LEVEL)
values ('5FB38631ED93435EAF438A48BCF3CDD4', 'sandy_23678@163.com', '袁磊', 'Y', to_date('05-05-2017 08:56:10', 'dd-mm-yyyy hh24:mi:ss'), 'wpsadmin', null, null, 'CAA7DFDC4DED4872A85435018D201EDD', null);
insert into SYS_WARN_MAIL (ID, EMAIL, USERNAME, ACTIVE_FLAG, ADDTIME, ADDWHO, EDITTIME, EDITWHO, SETT_ID, MAIL_LEVEL)
values ('CFBFEAC368964E76AA8678BFE100D896', 'sandy_23678@163.com', '袁磊', 'Y', to_date('05-05-2017 08:56:21', 'dd-mm-yyyy hh24:mi:ss'), 'wpsadmin', null, null, 'C6FA4178F05942678C1E1A66C722B234', null);
commit;

insert into SYS_WARN_SETTING (ID, WARN_TYPE, WARN_DESCR, ADDTIME, ADDWHO, EDITTIME, EDITWHO)
values ('7020544EEF024CF4867EEB75B91719E3', '911B74863C134D4CB13CF987622D35E0', '应收超期提醒', to_date('05-05-2017 08:54:55', 'dd-mm-yyyy hh24:mi:ss'), 'wpsadmin', null, null);
insert into SYS_WARN_SETTING (ID, WARN_TYPE, WARN_DESCR, ADDTIME, ADDWHO, EDITTIME, EDITWHO)
values ('978A950C22CC402DA0BA593ABBE2AD7A', '4BB4C975A89340468AE8595F3983D12C', '预约到货提醒', to_date('05-05-2017 08:51:01', 'dd-mm-yyyy hh24:mi:ss'), 'wpsadmin', null, null);
insert into SYS_WARN_SETTING (ID, WARN_TYPE, WARN_DESCR, ADDTIME, ADDWHO, EDITTIME, EDITWHO)
values ('C333FDD2A38D4444BFBAD0763122FFC3', '876677D41D0148E2AAFE0248684CC787', '承运商付款超期提醒', to_date('05-05-2017 08:54:21', 'dd-mm-yyyy hh24:mi:ss'), 'wpsadmin', null, null);
insert into SYS_WARN_SETTING (ID, WARN_TYPE, WARN_DESCR, ADDTIME, ADDWHO, EDITTIME, EDITWHO)
values ('C6FA4178F05942678C1E1A66C722B234', 'DB83E760F14044D1866012F6A02B00B1', '车辆保险到期提醒', to_date('05-05-2017 08:52:59', 'dd-mm-yyyy hh24:mi:ss'), 'wpsadmin', null, null);
insert into SYS_WARN_SETTING (ID, WARN_TYPE, WARN_DESCR, ADDTIME, ADDWHO, EDITTIME, EDITWHO)
values ('8FBBD30A583A4A4EAFDABC64D9C6923D', '5CC2EB782B45497FACF1B270F8A570BF', '未配车确认提醒', to_date('05-05-2017 08:53:54', 'dd-mm-yyyy hh24:mi:ss'), 'wpsadmin', null, null);
insert into SYS_WARN_SETTING (ID, WARN_TYPE, WARN_DESCR, ADDTIME, ADDWHO, EDITTIME, EDITWHO)
values ('5709FCF3E9254FB58815DC0BDFB81394', 'E24A769BE0BD45969AD1E85DE673D1DE', '客户投诉提醒', to_date('05-05-2017 08:50:24', 'dd-mm-yyyy hh24:mi:ss'), 'wpsadmin', null, null);
insert into SYS_WARN_SETTING (ID, WARN_TYPE, WARN_DESCR, ADDTIME, ADDWHO, EDITTIME, EDITWHO)
values ('7216FF5365C943BF8B3A52F9D69624D7', '0D266BB70B9849039461DA32DFCDA02E', '客户合同到期提醒', to_date('05-05-2017 08:51:28', 'dd-mm-yyyy hh24:mi:ss'), 'wpsadmin', null, null);
insert into SYS_WARN_SETTING (ID, WARN_TYPE, WARN_DESCR, ADDTIME, ADDWHO, EDITTIME, EDITWHO)
values ('6D48742C67E843B68C6A2A958BF8A660', '76D837B31294470DABB7FA2AA63F0C37', '承运商合同到期提醒', to_date('05-05-2017 08:52:26', 'dd-mm-yyyy hh24:mi:ss'), 'wpsadmin', null, null);
insert into SYS_WARN_SETTING (ID, WARN_TYPE, WARN_DESCR, ADDTIME, ADDWHO, EDITTIME, EDITWHO)
values ('CAA7DFDC4DED4872A85435018D201EDD', 'EF768C285FD545229DDA2B022736B782', '车辆年审到期提醒', to_date('05-05-2017 08:53:31', 'dd-mm-yyyy hh24:mi:ss'), 'wpsadmin', null, null);
commit;
create or replace view warn_complaint as
select ODR_NO --托运单号
  ,CUSTOMER_NAME --客户
  ,to_char(LOAD_TIME,'YYYY-MM-DD') as LOAD_TIME  --发货日期
  ,to_char(RECE_TIME,'YYYY-MM-DD') as UNLOAD_TIME --收货日期
  ,LOAD_ADDRESS  --发货地
  ,UNLOAD_ADDRESS --收货地
  ,LOAD_NO --调度单号
  ,PLATE_NO --车牌号
  ,DRIVER --司机
  ,MOBILE --电话
  ,DUTY_TO --责任人
  ,ADDWHO --创建人
  ,to_char(ADDTIME,'YYYY-MM-DD HH24:MI') AS ADDTIME --创建时间
   from trans_complaint where status = '6D926C9A2826437AAEAE0E14119D9DD9';\
   

create or replace view warn_customer_contact as
select TFF_NAME --协议名称
,CONTACT_NO --合同号
,to_char(START_DATE,'YYYY-MM-DD') as START_DATE  --生效日期
,to_char(END_DATE,'YYYY-MM-DD') as END_DATE --失效日期
,OBJECT_NAME  --客户
 from tariff_header where tff_typ = '42666CA2DE904F6687FC172138CF3E51' and end_date - sysdate < 30
 and ENABLE_FLAG = 'Y';


create or replace view warn_loadno_audit as
select t.load_no  --调度单号
,t.suplr_name --承运商
,t.START_AREA_NAME --起点城市
,t.END_AREA_NAME --终点城市
,t.PLATE_NO --车牌号
,t.driver1 --司机
,t.mobile1 --电话
,t.TRAILER_NO --挂车号
,t.addwho  --创建人
,to_char(t.addtime,'YYYY-MM-DD HH24:MI') as ADDTIME --创建时间
 from trans_load_header t
where status = '10' and dispatch_stat = '748EE77B344740D5AAB4BC825DBAF34F';


create or replace view warn_order_audit as
select t.odr_no  --托运单号
,t.custom_odr_no --客户单号
,t.customer_name  --客户
,t2.NAME_C AS ODR_TYP_NAME --订单类型
,t1.NAME_C AS BIZ_TYP_NAME  --运输类型
,to_char(t.addtime,'YYYY-MM-DD HH24:MI') as ADDTIME --录单时间
,to_char(t.pre_load_time,'YYYY-MM-DD HH24:MI') as PRE_LOAD_TIME --要求发货时间
,to_char(t.pre_unload_time,'YYYY-MM-DD HH24:MI') as PRE_UNLOAD_TIME  --要求到货时间
,t3.vehicle_type as VEHICLE_TYP_NAME --车型要求
,t4.email --
 from trans_order_header T
,BAS_CODES t1
,BAS_CODES t2
,BAS_VEHICLE_TYPE t3
,SYS_USER t4
 where t.BIZ_TYP = t1.id and t1.prop_code = 'BIZ_TYP'
  and t.ODR_TYP = t2.id and t2.prop_code = 'TRS_TYP'
  and t.vehicle_typ = t3.id(+)
  and t.addwho = t4.user_id
  and t4.email is not null
  and t.status = '10'
  order by t4.email;

create or replace view warn_suplr_contact as
select TFF_NAME --协议名称
,CONTACT_NO --合同号
,to_char(START_DATE,'YYYY-MM-DD') as START_DATE  --生效日期
,to_char(END_DATE,'YYYY-MM-DD') as END_DATE --失效日期
,OBJECT_NAME  --承运商
from tariff_header where tff_typ = '55CDDBECF2BF49D1A451F09A263F3F47' and end_date - sysdate < 30;

create or replace view warn_unload_appoint as
select t.load_no  --调度单号
  ,t.customer_name --客户
  ,t.shpm_no --作业单号
  ,t.load_name --发货地
  ,t.unload_name --收货地
  ,t.tot_qnty  --数量
  ,t.tot_gross_w --毛重
  ,t.tot_vol  --体积
  ,to_char(t.pre_unload_time,'YYYY-MM-DD HH24:MI') as pre_unload_time --预计到货时间
  ,floor((t.pre_unload_time - sysdate)*24) as REMAIN_HOURS --剩余时长

   from trans_shipment_header t
  ,bas_address t1
  where t.unload_id = t1.id and t.pre_unload_time is not null
  and t1.APPOINT_FLAG = 'Y' and floor(t.pre_unload_time - sysdate) <= t1.APPOINT_HOURS;

create or replace view warn_vhe_insur as
select t1.plate_no  --车牌号
,t2.VEHICLE_TYPE as VEHICLE_TYP_ID_NAME  --车型
,t3.SUPLR_CNAME AS SUPLR_ID_NAME --承运商
,t4.name_c as VEHICLE_STAT_NAME  --车辆状态
,t5.name_c as VEHICLE_ATTR_NAME  --车辆属性
,to_char(t.ins_to,'YYYY-MM-DD') as INS_TO --保险到期日
,floor(ins_to - sysdate) as REMAIN_DAYS --剩余天数
from ins_purchase_record t
,bas_vehicle t1
,bas_vehicle_type t2
,BAS_SUPPLIER t3
,bas_codes t4
,bas_codes t5
where t.plate_no = t1.plate_no
and t1.vehicle_typ_id = t2.id
and t1.SUPLR_ID = t3.ID(+)
and t1.vehicle_stat = t4.id(+)
AND t1.VEHICLE_ATTR = t5.ID(+)
and t.ins_to is not null and t.ins_to - sysdate < 30
and t1.vehicle_attr in ('C3CD595673ED4FD5BB80C1D6BCA17C54','527B04599982476FBFFC79D2E64614A4');

--caijiante  2017-05-09
--sys_func_page
961?	22962	P06_T043_P0_06	P06_T043_P0	导入	150	Y	2015/5/27	wpsadmin	导入	T	

--yuanlei 2017-05-09
create table TMP_INSUR_IMPORT
(
  INS_NO      VARCHAR2(50),
  PLATE_NO    VARCHAR2(50),
  INS_DATE    VARCHAR2(50),
  INS_COMPANY VARCHAR2(100),
  INS_TYPE    VARCHAR2(50),
  INS_AMOUNT  NUMBER(10,2),
  INS_FEE     NUMBER(8,2),
  USER_ID     VARCHAR2(30),
  TMPID       VARCHAR2(50),
  LINENO      NUMBER(4),
  ADDTIME     DATE
)
tablespace USERS
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64
    next 8
    minextents 1
    maxextents unlimited
  );
  
  create table TMP_VEHVERIFY_IMPORT
(
  PLATE_NO       VARCHAR2(50),
  SUPLR_NAME     VARCHAR2(50),
  VERIFY_DATE    VARCHAR2(50),
  NEXT_DATE      VARCHAR2(50),
  VERIFY_AMOUNT  NUMBER(8,2),
  VERIFY_ADDRESS VARCHAR2(200),
  USER_ID        VARCHAR2(30),
  TMPID          VARCHAR2(50),
  LINENO         NUMBER(4),
  ADDTIME        DATE
)
tablespace USERS
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64
    next 8
    minextents 1
    maxextents unlimited
  );

-- Create table
create table TMP_REPAIR_IMPORT
(
  PLATE_NO       VARCHAR2(50),
  PRE_START_TIME VARCHAR2(50),
  REPAIR_OBJECT  VARCHAR2(32),
  TOTAL_AMOUNT   NUMBER(8,2),
  REPAIR_ADDRESS VARCHAR2(400),
  USER_ID        VARCHAR2(30),
  TMPID          VARCHAR2(50),
  LINENO         NUMBER(4),
  ADDTIME        DATE
)
tablespace USERS
  pctfree 10
  initrans 1
  maxtrans 255
  storage
  (
    initial 64
    next 8
    minextents 1
    maxextents unlimited
  );
  
  create or replace procedure SP_IMPORT_INSUR(
IN_TMPID varchar2, 
IN_USERID varchar2,
IN_LANGUAGE VARCHAR2,
OUTPUT_RESULLT in out varchar2)
IS

t_cur_column varchar2(100);
t_cur_value varchar2(500);
t_verify_type number(4);
t_table_name varchar2(100);
t_verify_code varchar2(100);

v_sql varchar2(2048);
temp_sql varchar2(1024);
temp_result varchar2(500);

r_INS_NO varchar2(50);
r_PLATE_NO varchar2(50);
r_INS_COMPANY varchar2(100);
r_INS_TYPE varchar2(50);
r_INS_FEE NUMBER(10,2);
r_INS_AMOUNT NUMBER(10,2);
r_INS_DATE varchar2(50);

r_LINE number(4);
r_USERID varchar2(30);

type   cur_t   is   ref   cursor;
      C_ACT   cur_t;

TYPE array_var IS VARRAY(36) OF nvarchar2(10000); 

tmp_key array_var; 
tmp_value array_var;


exec_sql varchar2(1024);
exec_value varchar2(1024);

r_count number(4);
pos number(4);

CURSOR verify is
      select verify_type,table_name,verify_code from t_input_excel_verify where type_name = 'TMP_INSUR_IMPORT' and COLUMN_NAME = t_cur_column;
CURSOR head is
      select column_name,default_value,param_type,replace_field from t_input_excel_default where table_name = 'INS_PURCHASE_RECORD' order by exec_seq asc;
--IN_TMPID varchar2(32);
BEGIN
  --IN_TMPID := '1489116521217';
  OUTPUT_RESULLT := '';
  tmp_key := array_var('INS_NO','PLATE_NO','INS_DATE','INS_COMPANY','INS_TYPE','INS_AMOUNT','INS_FEE','USER_ID');
  v_sql := '';
  r_LINE := 1;
  pos := 1;
  for i in 1..tmp_key.count loop
      t_cur_column := tmp_key(i);
      v_sql := v_sql|| t_cur_column || ',';
  end loop;
  v_sql := 'SELECT ' || v_sql || 'LINENO FROM TMP_INSUR_IMPORT WHERE TMPID = ''' || IN_TMPID || ''' AND USER_ID = ''' || IN_USERID || ''' ORDER BY LINENO ASC';
  --校验字段
  Open  C_ACT   for   v_sql ;
  loop
      fetch C_ACT into r_INS_NO,r_PLATE_NO,r_INS_DATE,r_INS_COMPANY,r_INS_TYPE,r_INS_AMOUNT,r_INS_FEE,r_USERID,r_LINE;            --V418A
      exit when C_ACT%notfound;
      
      tmp_value := array_var(r_INS_NO,r_PLATE_NO,r_INS_DATE,r_INS_COMPANY,r_INS_TYPE
       ,r_INS_AMOUNT,r_INS_FEE,r_USERID);
      
      for i in pos..tmp_key.count loop
           t_cur_column := tmp_key(i);
           t_cur_value := tmp_value(i);
           for m in verify loop
               t_verify_type := m.verify_type;
               t_table_name := m.table_name;
               t_verify_code := m.verify_code;
               
               if t_verify_type = 0 then  --非空检验
                   if t_cur_value is null or length(t_cur_value) < 1 then
                       OUTPUT_RESULLT := OUTPUT_RESULLT || '第'|| r_LINE ||'行字段['|| t_cur_column ||']不能为空<br />';
                   end if;    
               elsif t_verify_type = 1 and length(t_cur_value) > 0 then --唯一性校验
                   temp_sql := 'select count(1) from ' || t_table_name || ' where ' || t_cur_column || '=''' || t_cur_value || '''';
                   execute immediate temp_sql into r_count;
                   if r_count > 0 then
                        OUTPUT_RESULLT := OUTPUT_RESULLT || '第'|| r_LINE ||'行字段['|| t_cur_column ||']不是唯一<br />';
                   else
                      temp_sql := 'select count(1) from TMP_ORDER_IMPORT where TMPID = ''' || IN_TMPID || ''' AND USER_ID = ''' 
                        || IN_USERID || ''' and ' || t_cur_column || '= ''' || t_cur_value || '''';
                      execute immediate temp_sql into r_count;
                      if r_count > 1 then
                          OUTPUT_RESULLT := OUTPUT_RESULLT || '第'|| r_LINE ||'行字段['|| t_cur_column ||']不是唯一<br />';
                      end if;
                   end if;
               elsif t_verify_type = 2 and length(t_verify_code) > 0 and length(t_cur_value) > 0 then
                   temp_sql := REPLACE(t_verify_code, '?', t_cur_value);
                   execute immediate temp_sql into r_count;
                   if r_count = 0 then
                       OUTPUT_RESULLT := OUTPUT_RESULLT || '第'|| r_LINE ||'行字段['|| t_cur_column ||']不合法<br />';
                   end if;
               end if;
           end loop;
      end loop;
      <<next_loop>>
          t_cur_column := '';
  end loop;
  close C_ACT;

  if length(OUTPUT_RESULLT) > 0 then
    OUTPUT_RESULLT:='01'||OUTPUT_RESULLT;
    rollback;
    -- 失败删除中间表
    --delete from TMP_ORDER_IMPORT where TMPID = IN_TMPID and USER_ID = IN_USERID;
    --commit;
    return;
  end if;
  --插入数据
  Open  C_ACT   for   v_sql ;
  loop
      fetch C_ACT into r_INS_NO,r_PLATE_NO,r_INS_DATE,r_INS_COMPANY,r_INS_TYPE,r_INS_AMOUNT,r_INS_FEE,r_USERID,r_LINE;
      exit when C_ACT%notfound;
      
      tmp_value := array_var(r_INS_NO,r_PLATE_NO,r_INS_DATE,r_INS_COMPANY,r_INS_TYPE
       ,r_INS_AMOUNT,r_INS_FEE,r_USERID);
       
      exec_sql := '';
      exec_value := '';
      for h in head loop
          exec_sql := exec_sql || ',' || h.column_name;
          if h.param_type = '0' then  --定制
              exec_value := exec_value || ',' || h.default_value;
          elsif h.param_type = '1' then  --从执行结果取值
              temp_sql := h.default_value;
              execute immediate temp_sql into temp_result;
              exec_value := exec_value || ',''' || temp_result || '''';
          elsif h.param_type = '2' then   --将？替换成参数值，并从结果取值
              for i in 1..tmp_key.count loop
                  t_cur_column := tmp_key(i);
                  if t_cur_column = h.Replace_Field then
                      t_cur_value := tmp_value(i);
                      exit;
                  end if;
              end loop;
              if t_cur_value is not null then
                  temp_sql := REPLACE(h.default_value, '?', t_cur_value);
                  execute immediate temp_sql into temp_result;
                  exec_value := exec_value || ',''' || temp_result || '''';
              else
                  exec_value := exec_value || ',NULL';
              end if;
          elsif h.param_type = '3' then  --直接从临时表上取值
              for i in 1..tmp_key.count loop
                  t_cur_column := tmp_key(i);
                  if t_cur_column = h.column_name then
                      t_cur_value := tmp_value(i);
                      exit;
                  end if;
              end loop;
              if t_cur_value is null then
                  exec_value := exec_value || ',NULL';
              else
                  exec_value := exec_value || ',''' || t_cur_value || '''';
              end if;
         end if;
      end loop; 
      <<next_loop>>
          OUTPUT_RESULLT := '';
      if length(exec_value) > 1 then     
          
          exec_sql := 'INSERT INTO INS_PURCHASE_RECORD(ADDWHO,ADDTIME' || exec_sql || ') VALUES(''' || IN_USERID || ''',sysdate' || exec_value || ')';
          execute immediate exec_sql;
      end if;
      OUTPUT_RESULLT := '00';
  end loop;
  close C_ACT;
  commit;
  OUTPUT_RESULLT := '00';
  delete from TMP_INSUR_IMPORT WHERE TMPID = IN_TMPID AND USER_ID = IN_USERID;
  commit;
  EXCEPTION
    WHEN OTHERS THEN
        OUTPUT_RESULLT :='01'||sqlerrm || '[' || exec_sql || ']';
        rollback;
        --RAISE_APPLICATION_ERROR(-20101, '执行全局校验时抛出异常: '||sqlerrm, TRUE);
END;

/

create or replace procedure SP_IMPORT_VEHVERIFY(
IN_TMPID varchar2, 
IN_USERID varchar2,
IN_LANGUAGE VARCHAR2,
OUTPUT_RESULLT in out varchar2)
IS

t_cur_column varchar2(100);
t_cur_value varchar2(500);
t_verify_type number(4);
t_table_name varchar2(100);
t_verify_code varchar2(100);

v_sql varchar2(2048);
temp_sql varchar2(1024);
temp_result varchar2(500);

r_SUPLR_NAME varchar2(50);
r_PLATE_NO varchar2(50);
r_NEXT_DATE varchar2(50);
r_VERIFY_ADDRESS varchar2(200);
r_VERIFY_AMOUNT NUMBER(10,2);
r_VERIFY_DATE varchar2(50);

r_LINE number(4);
r_USERID varchar2(30);

type   cur_t   is   ref   cursor;
      C_ACT   cur_t;

TYPE array_var IS VARRAY(36) OF nvarchar2(10000); 

tmp_key array_var; 
tmp_value array_var;


exec_sql varchar2(1024);
exec_value varchar2(1024);

r_count number(4);
pos number(4);

CURSOR verify is
      select verify_type,table_name,verify_code from t_input_excel_verify where type_name = 'TMP_VEHVERIFY_IMPORT' and COLUMN_NAME = t_cur_column;
CURSOR head is
      select column_name,default_value,param_type,replace_field from t_input_excel_default where table_name = 'TRANS_VEH_VERIFY' order by exec_seq asc;
--IN_TMPID varchar2(32);
BEGIN
  --IN_TMPID := '1489116521217';
  OUTPUT_RESULLT := '';
  tmp_key := array_var('PLATE_NO','SUPLR_NAME','VERIFY_DATE','NEXT_DATE','VERIFY_AMOUNT','VERIFY_ADDRESS','USER_ID');
  v_sql := '';
  r_LINE := 1;
  pos := 1;
  for i in 1..tmp_key.count loop
      t_cur_column := tmp_key(i);
      v_sql := v_sql|| t_cur_column || ',';
  end loop;
  v_sql := 'SELECT ' || v_sql || 'LINENO FROM TMP_VEHVERIFY_IMPORT WHERE TMPID = ''' || IN_TMPID || ''' AND USER_ID = ''' || IN_USERID || ''' ORDER BY LINENO ASC';
  --校验字段
  Open  C_ACT   for   v_sql ;
  loop
      fetch C_ACT into r_PLATE_NO,r_SUPLR_NAME,r_VERIFY_DATE,r_NEXT_DATE,r_VERIFY_AMOUNT,r_VERIFY_ADDRESS,r_USERID,r_LINE;            --V418A
      exit when C_ACT%notfound;
      
      tmp_value := array_var(r_PLATE_NO,r_SUPLR_NAME,r_VERIFY_DATE,r_NEXT_DATE,r_VERIFY_AMOUNT,r_VERIFY_ADDRESS,r_USERID);
      
      for i in pos..tmp_key.count loop
           t_cur_column := tmp_key(i);
           t_cur_value := tmp_value(i);
           for m in verify loop
               t_verify_type := m.verify_type;
               t_table_name := m.table_name;
               t_verify_code := m.verify_code;
               
               if t_verify_type = 0 then  --非空检验
                   if t_cur_value is null or length(t_cur_value) < 1 then
                       OUTPUT_RESULLT := OUTPUT_RESULLT || '第'|| r_LINE ||'行字段['|| t_cur_column ||']不能为空<br />';
                   end if;    
               elsif t_verify_type = 1 and length(t_cur_value) > 0 then --唯一性校验
                   temp_sql := 'select count(1) from ' || t_table_name || ' where ' || t_cur_column || '=''' || t_cur_value || '''';
                   execute immediate temp_sql into r_count;
                   if r_count > 0 then
                        OUTPUT_RESULLT := OUTPUT_RESULLT || '第'|| r_LINE ||'行字段['|| t_cur_column ||']不是唯一<br />';
                   else
                      temp_sql := 'select count(1) from TMP_ORDER_IMPORT where TMPID = ''' || IN_TMPID || ''' AND USER_ID = ''' 
                        || IN_USERID || ''' and ' || t_cur_column || '= ''' || t_cur_value || '''';
                      execute immediate temp_sql into r_count;
                      if r_count > 1 then
                          OUTPUT_RESULLT := OUTPUT_RESULLT || '第'|| r_LINE ||'行字段['|| t_cur_column ||']不是唯一<br />';
                      end if;
                   end if;
               elsif t_verify_type = 2 and length(t_verify_code) > 0 and length(t_cur_value) > 0 then
                   temp_sql := REPLACE(t_verify_code, '?', t_cur_value);
                   execute immediate temp_sql into r_count;
                   if r_count = 0 then
                       OUTPUT_RESULLT := OUTPUT_RESULLT || '第'|| r_LINE ||'行字段['|| t_cur_column ||']不合法<br />';
                   end if;
               end if;
           end loop;
      end loop;
      <<next_loop>>
          t_cur_column := '';
  end loop;
  close C_ACT;

  if length(OUTPUT_RESULLT) > 0 then
    OUTPUT_RESULLT:='01'||OUTPUT_RESULLT;
    rollback;
    -- 失败删除中间表
    --delete from TMP_ORDER_IMPORT where TMPID = IN_TMPID and USER_ID = IN_USERID;
    --commit;
    return;
  end if;
  --插入数据
  Open  C_ACT   for   v_sql ;
  loop
      fetch C_ACT into r_PLATE_NO,r_SUPLR_NAME,r_VERIFY_DATE,r_NEXT_DATE,r_VERIFY_AMOUNT,r_VERIFY_ADDRESS,r_USERID,r_LINE;            --V418A
      exit when C_ACT%notfound;
      
      tmp_value := array_var(r_PLATE_NO,r_SUPLR_NAME,r_VERIFY_DATE,r_NEXT_DATE,r_VERIFY_AMOUNT
       ,r_VERIFY_ADDRESS,r_USERID);
       
      exec_sql := '';
      exec_value := '';
      for h in head loop
          exec_sql := exec_sql || ',' || h.column_name;
          if h.param_type = '0' then  --定制
              exec_value := exec_value || ',' || h.default_value;
          elsif h.param_type = '1' then  --从执行结果取值
              temp_sql := h.default_value;
              execute immediate temp_sql into temp_result;
              exec_value := exec_value || ',''' || temp_result || '''';
          elsif h.param_type = '2' then   --将？替换成参数值，并从结果取值
              for i in 1..tmp_key.count loop
                  t_cur_column := tmp_key(i);
                  if t_cur_column = h.Replace_Field then
                      t_cur_value := tmp_value(i);
                      exit;
                  end if;
              end loop;
              if t_cur_value is not null then
                  temp_sql := REPLACE(h.default_value, '?', t_cur_value);
                  execute immediate temp_sql into temp_result;
                  exec_value := exec_value || ',''' || temp_result || '''';
              else
                  exec_value := exec_value || ',NULL';
              end if;
          elsif h.param_type = '3' then  --直接从临时表上取值
              for i in 1..tmp_key.count loop
                  t_cur_column := tmp_key(i);
                  if t_cur_column = h.column_name then
                      t_cur_value := tmp_value(i);
                      exit;
                  end if;
              end loop;
              if t_cur_value is null then
                  exec_value := exec_value || ',NULL';
              else
                  exec_value := exec_value || ',''' || t_cur_value || '''';
              end if;
         end if;
      end loop; 
      <<next_loop>>
          OUTPUT_RESULLT := '';
      if length(exec_value) > 1 then     
          
          exec_sql := 'INSERT INTO TRANS_VEH_VERIFY(ADDWHO,ADDTIME' || exec_sql || ') VALUES(''' || IN_USERID || ''',sysdate' || exec_value || ')';
          execute immediate exec_sql;
      end if;
      OUTPUT_RESULLT := '00';
  end loop;
  close C_ACT;
  commit;
  OUTPUT_RESULLT := '00';
  delete from TMP_VEHVERIFY_IMPORT WHERE TMPID = IN_TMPID AND USER_ID = IN_USERID;
  commit;
  EXCEPTION
    WHEN OTHERS THEN
        OUTPUT_RESULLT :='01'||sqlerrm || '[' || exec_sql || ']';
        rollback;
        --RAISE_APPLICATION_ERROR(-20101, '执行全局校验时抛出异常: '||sqlerrm, TRUE);
END;

/

create or replace procedure SP_IMPORT_VEHREPAIR(
IN_TMPID varchar2, 
IN_USERID varchar2,
IN_LANGUAGE VARCHAR2,
OUTPUT_RESULLT in out varchar2)
IS

t_cur_column varchar2(100);
t_cur_value varchar2(500);
t_verify_type number(4);
t_table_name varchar2(100);
t_verify_code varchar2(100);

v_sql varchar2(2048);
temp_sql varchar2(1024);
temp_result varchar2(500);

r_PLATE_NO varchar2(50);
r_REPAIR_OBJECT varchar2(32);
r_REPAIR_ADDRESS varchar2(400);
r_TOTAL_AMOUNT NUMBER(10,2);
r_PRE_START_TIME varchar2(50);

r_LINE number(4);
r_USERID varchar2(30);

type   cur_t   is   ref   cursor;
      C_ACT   cur_t;

TYPE array_var IS VARRAY(36) OF nvarchar2(10000); 

tmp_key array_var; 
tmp_value array_var;


exec_sql varchar2(1024);
exec_value varchar2(1024);

r_count number(4);
pos number(4);

CURSOR verify is
      select verify_type,table_name,verify_code from t_input_excel_verify where type_name = 'TMP_REPAIR_IMPORT' and COLUMN_NAME = t_cur_column;
CURSOR head is
      select column_name,default_value,param_type,replace_field from t_input_excel_default where table_name = 'TRANS_VEH_REPAIR' order by exec_seq asc;
--IN_TMPID varchar2(32);
BEGIN
  --IN_TMPID := '1489116521217';
  OUTPUT_RESULLT := '';
  tmp_key := array_var('PLATE_NO','PRE_START_TIME','REPAIR_OBJECT','TOTAL_AMOUNT','REPAIR_ADDRESS','USER_ID');
  v_sql := '';
  r_LINE := 1;
  pos := 1;
  for i in 1..tmp_key.count loop
      t_cur_column := tmp_key(i);
      v_sql := v_sql|| t_cur_column || ',';
  end loop;
  v_sql := 'SELECT ' || v_sql || 'LINENO FROM TMP_REPAIR_IMPORT WHERE TMPID = ''' || IN_TMPID || ''' AND USER_ID = ''' || IN_USERID || ''' ORDER BY LINENO ASC';
  --校验字段
  Open  C_ACT   for   v_sql ;
  loop
      fetch C_ACT into r_PLATE_NO,r_PRE_START_TIME,r_REPAIR_OBJECT,r_TOTAL_AMOUNT,r_REPAIR_ADDRESS,r_USERID,r_LINE;            --V418A
      exit when C_ACT%notfound;
      
      tmp_value := array_var(r_PLATE_NO,r_PRE_START_TIME,r_REPAIR_OBJECT,r_TOTAL_AMOUNT,r_REPAIR_ADDRESS,r_USERID);
      
      for i in pos..tmp_key.count loop
           t_cur_column := tmp_key(i);
           t_cur_value := tmp_value(i);
           for m in verify loop
               t_verify_type := m.verify_type;
               t_table_name := m.table_name;
               t_verify_code := m.verify_code;
               
               if t_verify_type = 0 then  --非空检验
                   if t_cur_value is null or length(t_cur_value) < 1 then
                       OUTPUT_RESULLT := OUTPUT_RESULLT || '第'|| r_LINE ||'行字段['|| t_cur_column ||']不能为空<br />';
                   end if;    
               elsif t_verify_type = 1 and length(t_cur_value) > 0 then --唯一性校验
                   temp_sql := 'select count(1) from ' || t_table_name || ' where ' || t_cur_column || '=''' || t_cur_value || '''';
                   execute immediate temp_sql into r_count;
                   if r_count > 0 then
                        OUTPUT_RESULLT := OUTPUT_RESULLT || '第'|| r_LINE ||'行字段['|| t_cur_column ||']不是唯一<br />';
                   else
                      temp_sql := 'select count(1) from TMP_ORDER_IMPORT where TMPID = ''' || IN_TMPID || ''' AND USER_ID = ''' 
                        || IN_USERID || ''' and ' || t_cur_column || '= ''' || t_cur_value || '''';
                      execute immediate temp_sql into r_count;
                      if r_count > 1 then
                          OUTPUT_RESULLT := OUTPUT_RESULLT || '第'|| r_LINE ||'行字段['|| t_cur_column ||']不是唯一<br />';
                      end if;
                   end if;
               elsif t_verify_type = 2 and length(t_verify_code) > 0 and length(t_cur_value) > 0 then
                   temp_sql := REPLACE(t_verify_code, '?', t_cur_value);
                   execute immediate temp_sql into r_count;
                   if r_count = 0 then
                       OUTPUT_RESULLT := OUTPUT_RESULLT || '第'|| r_LINE ||'行字段['|| t_cur_column ||']不合法<br />';
                   end if;
               end if;
           end loop;
      end loop;
      <<next_loop>>
          t_cur_column := '';
  end loop;
  close C_ACT;

  if length(OUTPUT_RESULLT) > 0 then
    OUTPUT_RESULLT:='01'||OUTPUT_RESULLT;
    rollback;
    -- 失败删除中间表
    --delete from TMP_ORDER_IMPORT where TMPID = IN_TMPID and USER_ID = IN_USERID;
    --commit;
    return;
  end if;
  --插入数据
  Open  C_ACT   for   v_sql ;
  loop
      fetch C_ACT into r_PLATE_NO,r_PRE_START_TIME,r_REPAIR_OBJECT,r_TOTAL_AMOUNT,r_REPAIR_ADDRESS,r_USERID,r_LINE;
      exit when C_ACT%notfound;
      
      tmp_value := array_var(r_PLATE_NO,r_PRE_START_TIME,r_REPAIR_OBJECT,r_TOTAL_AMOUNT,r_REPAIR_ADDRESS,r_USERID);
       
      exec_sql := '';
      exec_value := '';
      for h in head loop
          exec_sql := exec_sql || ',' || h.column_name;
          if h.param_type = '0' then  --定制
              exec_value := exec_value || ',' || h.default_value;
          elsif h.param_type = '1' then  --从执行结果取值
              temp_sql := h.default_value;
              execute immediate temp_sql into temp_result;
              exec_value := exec_value || ',''' || temp_result || '''';
          elsif h.param_type = '2' then   --将？替换成参数值，并从结果取值
              for i in 1..tmp_key.count loop
                  t_cur_column := tmp_key(i);
                  if t_cur_column = h.Replace_Field then
                      t_cur_value := tmp_value(i);
                      exit;
                  end if;
              end loop;
              if t_cur_value is not null then
                  temp_sql := REPLACE(h.default_value, '?', t_cur_value);
                  execute immediate temp_sql into temp_result;
                  exec_value := exec_value || ',''' || temp_result || '''';
              else
                  exec_value := exec_value || ',NULL';
              end if;
          elsif h.param_type = '3' then  --直接从临时表上取值
              for i in 1..tmp_key.count loop
                  t_cur_column := tmp_key(i);
                  if t_cur_column = h.column_name then
                      t_cur_value := tmp_value(i);
                      exit;
                  end if;
              end loop;
              if t_cur_value is null then
                  exec_value := exec_value || ',NULL';
              else
                  exec_value := exec_value || ',''' || t_cur_value || '''';
              end if;
         end if;
      end loop; 
      <<next_loop>>
          OUTPUT_RESULLT := '';
      if length(exec_value) > 1 then     
          
          exec_sql := 'INSERT INTO TRANS_VEH_REPAIR(ADDWHO,ADDTIME' || exec_sql || ') VALUES(''' || IN_USERID || ''',sysdate' || exec_value || ')';
          execute immediate exec_sql;
      end if;
      OUTPUT_RESULLT := '00';
  end loop;
  close C_ACT;
  commit;
  OUTPUT_RESULLT := '00';
  delete from TMP_REPAIR_IMPORT WHERE TMPID = IN_TMPID AND USER_ID = IN_USERID;
  commit;
  EXCEPTION
    WHEN OTHERS THEN
        OUTPUT_RESULLT :='01'||sqlerrm || '[' || exec_sql || ']';
        rollback;
        --RAISE_APPLICATION_ERROR(-20101, '执行全局校验时抛出异常: '||sqlerrm, TRUE);
END;

/

--t_input_excel_verify
1	INS_TYPE	2	INS_PURCHASE_RECORD	TMP_INSUR_IMPORT	select count(1) from bas_codes where prop_code = 'INS_TYP' and name_c = '?'	AAAU/tAAEAAAYT/AAE

--t_input_excel_default
1	INS_PURCHASE_RECORD	ID	select sys_guid() from dual	1			AAAU/rAAEAAAWK9ABF
2	INS_PURCHASE_RECORD	INS_AMOUNT		3			AAAU/rAAEAAAWK9ABD
3	INS_PURCHASE_RECORD	INS_COMPANY		3			AAAU/rAAEAAAWK9ABE
4	INS_PURCHASE_RECORD	INS_DATE	select to_date('?','YYYY-MM-DD') from dual	2	INS_DATE	1	AAAU/rAAEAAAWK9ABA
5	INS_PURCHASE_RECORD	INS_NO		3			AAAU/rAAEAAAWK9ABB
6	INS_PURCHASE_RECORD	INS_TYPE	select id from bas_codes where name_c = '?' and prop_code = 'INS_TYP'	2	INS_TYPE		AAAU/rAAEAAAWK/AAi
7	INS_PURCHASE_RECORD	PLATE_NO		3			AAAU/rAAEAAAWK9ABC
8	TRANS_VEH_REPAIR	ID	select sys_guid() from dual	1			AAAU/rAAEAAAWK9AA/
9	TRANS_VEH_REPAIR	PLATE_NO		3			AAAU/rAAEAAAWK9AA7
10	TRANS_VEH_REPAIR	PRE_START_TIME	select to_date('?','YYYY-MM-DD HH24:MI:SS') from dual	2	PRE_START_TIME	1	AAAU/rAAEAAAWK9AA6
11	TRANS_VEH_REPAIR	REPAIR_ADDRESS		3			AAAU/rAAEAAAWK9AA+
12	TRANS_VEH_REPAIR	REPAIR_OBJECT		3			AAAU/rAAEAAAWK9AA8
13	TRANS_VEH_REPAIR	TOTAL_AMOUNT		3			AAAU/rAAEAAAWK9AA9
14	TRANS_VEH_VERIFY	ID	select sys_guid() from dual	1			AAAU/rAAEAAAWK9AA5
15	TRANS_VEH_VERIFY	NEXT_DATE	select to_date('?','YYYY-MM-DD') from dual	2	NEXT_DATE	1	AAAU/rAAEAAAWK9AA0
16	TRANS_VEH_VERIFY	PLATE_NO		3			AAAU/rAAEAAAWK9AA1
17	TRANS_VEH_VERIFY	SUPLR_ID	select id from bas_supplier where suplr_cname = '?'	2	SUPLR_NAME		AAAU/rAAEAAAWK9AA2
18	TRANS_VEH_VERIFY	VERIFY_ADDRESS		3			AAAU/rAAEAAAWK9AA4
19	TRANS_VEH_VERIFY	VERIFY_AMOUNT		3			AAAU/rAAEAAAWK9AA3
20	TRANS_VEH_VERIFY	VERIFY_DATE	select to_date('?','YYYY-MM-DD') from dual	2	VERIFY_DATE	1	AAAU/rAAEAAAWK9AAz

--2017-5-9 yuuanlei new version
create or replace procedure SAVE_SUPPLIER(
my_s_code varchar2,
my_s_cname varchar2,
my_s_ename varchar2,
my_s_name varchar2,
my_hint_code varchar2,
my_t_flag varchar2,
my_w_flag varchar2,
my_s_typ varchar2,
my_c_flag varchar2,
my_intl_flag varchar2,
my_bill_to varchar2,
my_property varchar2,
my_grade varchar2,
my_repesentative varchar2,
my_area_id varchar2,
my_addr varchar2,
my_zip varchar2,
my_c_name varchar2,
my_c_tel varchar2,
my_c_fax varchar2,
my_c_email varchar2,
my_url varchar2,
my_m_org_id varchar2,
my_bank varchar2,
my_acc_num varchar2,
my_taxno varchar2,
my_i_title varchar2,
my_i_deadline varchar2,
my_sett_typ varchar2,
my_pay_typ varchar2,
my_sett_cyc varchar2,
my_credit_limit varchar2,
my_currency varchar2,
my_ap_deadline varchar2,
my_whse_id varchar2,
my_eqmt_num varchar2,
my_v_for_flag varchar2,
my_i_flag varchar2,
my_ins_flag varchar2,
my_i_amt varchar2,
my_i_efct_dt varchar2,
my_i_exp_dt varchar2,
my_notes varchar2,
my_rep_til varchar2,
my_e_flag varchar2,
my_black_flag varchar2,
udf2 varchar2,
udf4 varchar2,
my_addwho varchar2,
my_org_id varchar2,
my_org_name varchar2,
out_result_code out varchar2
) is
count_ int;
sys_id varchar2(32);
sys_o_id varchar2(32);
c_serv_id varchar2(32);
sys_show_seq int;
sys_bill_to varchar2(50):=my_bill_to;--结算方
  cursor ucrr is
            select id,SRVC_NAME,default_flag from bas_trans_service where ENABLE_FLAG='Y';
begin
     out_result_code:='00';
     /*select count(1) into count_ from bas_supplier
            where suplr_code=my_s_code or suplr_cname=my_s_cname or short_name =my_s_name or hint_code = my_hint_code;
     if count_ > 0 then
        out_result_code:='02';--违反唯一性约束
        return;
     end if;*/

     select sys_guid() into sys_id from dual;
     IF my_s_name = my_bill_to then
              sys_bill_to :=sys_id;
     end if;

     insert into bas_supplier(ID,SUPLR_CODE,SUPLR_CNAME,SUPLR_ENAME,SHORT_NAME,HINT_CODE,TRANSPORT_FLAG,WAREHOUSE_FLAG,SUPLR_TYP,
                 CONTRACT_FLAG,INTL_FLAG,BILL_TO,PROPERTY,GRADE,REPRESENTATIVE,AREA_ID,ADDRESS,ZIP,CONT_NAME,CONT_TEL,
                 CONT_FAX,CONT_EMAIL,URL,MAINT_ORG_ID,SHOW_SEQ,BANK,ACC_NUM,TAXNO,INVOICE_TITLE,INV_DEADLINE,SETT_TYP,
                 PAY_TYP,SETT_CYC,CREDIT_LIMIT,CURRENCY,AP_DEADLINE,WHSE_ID,EQMT_NUM,VEHICLE_FOR_FLAG,INVOICE_FLAG,
                 INS_FLAG,INS_AMT,INS_EFCT_DT,INS_EXP_DT,NOTES,REP_TIL,ENABLE_FLAG,MODIFY_FLAG,ADDWHO,ADDTIME,udf2,udf4,Blacklist_Flag)
            values(sys_id,my_s_code,my_s_cname,my_s_ename,my_s_name,my_hint_code,my_t_flag,my_w_flag,my_s_typ,
                 my_c_flag,my_intl_flag,sys_bill_to,my_property,my_grade,my_repesentative,my_area_id,my_addr,my_zip,my_c_name,my_c_tel,
                 my_c_fax,my_c_email,my_url,my_m_org_id,sys_show_seq,my_bank,my_acc_num,my_taxno,my_i_title,my_i_deadline,my_sett_typ,
                 my_pay_typ,my_sett_cyc,my_credit_limit,my_currency,my_ap_deadline,my_whse_id,my_eqmt_num,my_v_for_flag,my_i_flag,
                 my_ins_flag,my_i_amt,to_date(my_i_efct_dt,'yyyy-mm-dd'),to_date(my_i_exp_dt,'yyyy-mm-dd'),my_notes,my_rep_til,my_e_flag,'Y',my_addwho,sysdate,udf2,udf4,my_black_flag);

      --插入默认执行机构
      select sys_guid() into sys_o_id from dual;
      insert into bas_supplier_org(id,org_id,suplr_id,org_name,default_flag,addtime,addwho)
             values (sys_o_id,my_org_id,sys_id,my_org_name,'Y',sysdate,my_addwho);

                  for coo in ucrr loop
                select sys_guid() into c_serv_id from dual;
                if coo.default_flag='Y' then --插入默认运输服务
                   begin
                       insert into bas_suplr_trans_srvc(id,trans_srvc_id,suplr_id,service_name,default_flag,addwho,addtime)
                              values(c_serv_id,coo.id,sys_id,coo.srvc_name,'Y',my_addwho,sysdate);
                   end;
                ELSE
                    begin
                        insert into bas_suplr_trans_srvc(id,trans_srvc_id,suplr_id,service_name,default_flag,addwho,addtime)
                              values(c_serv_id,coo.id,sys_id,coo.srvc_name,'N',my_addwho,sysdate);
                    end;
                END IF;
            end loop;
      out_result_code:=out_result_code || sys_id;
      commit;

      EXCEPTION
          WHEN OTHERS THEN
               ROLLBACK;
               out_result_code :=sqlcode || sqlerrm; --失败标记
               RETURN;
end;

/

create or replace view r_kpi_tmp_rate_t as
select
    t.shpm_no,t.odr_time,t.suplr_name,t.depart_time,t.arrive_whse_time,
   -- (case when load.addtime is not null and t.pre_whse_time is not null then ceil(load.addtime-t.pre_whse_time) else -1 end) as whse_delay_days,
   --yuanlei 2012-09-17
   (case when t.arrive_whse_time is not null and t.pre_whse_time is not null then ceil(t.arrive_whse_time-t.pre_whse_time) else -1 end) as whse_delay_days,
    --yuanlei
    nvl(ceil(NVL(t.depart_time,sysdate) - t.pre_load_time),-99) as send_delay_days,
    --nvl(t.UNLOAD_DELAY_DAYS, -99) as UNLOAD_DELAY_DAYS,
    nvl(ceil(NVL(t.unload_time,sysdate) - t.pre_unload_time),-99) as unload_delay_days,
    (nvl(NVL(pod_time,sysdate) - unload_time,0) - 7) as pod_delay_days
    from trans_shipment_header t
  --  (select max(addtime) addtime,doc_no from trans_customeract_log where action_typ ='UNLOAD_WHSE' group by doc_no) load
   -- where t.load_no = load.doc_no(+)
    where t.status < 90

    --yuanlei 2012-09-12 去除客户自提的数据
    and NVL(t.SLF_PICKUP_FLAG,'N') = 'N'
    and t.Suplr_Name <> '自提物流'
    --yuanlei;

/

create or replace view r_kpi_unload_rate as
select t.suplr_name,t.depart_time as addtime,
(case when unload_delay_days<=0 then 1 else 0 end) as DAYS,
1 as DAYS0,
(case when unload_delay_days > 0 and unload_delay_days <= 1 then 1 else 0 end) as DAYS1,
(case when unload_delay_days > 1 and unload_delay_days <= 2 then 1 else 0 end) as DAYS2,
(case when unload_delay_days > 2 and unload_delay_days <= 3 then 1 else 0 end) as DAYS3,
(case when unload_delay_days > 3 and unload_delay_days <= 4 then 1 else 0 end) as DAYS4,
(case when unload_delay_days > 4 and unload_delay_days <= 5 then 1 else 0 end) as DAYS5,
(case when unload_delay_days > 5 then 1 else 0 end) as DAYS6
from R_KPI_TMP_RATE_t t;

/

create or replace view v_shpm_track as
select t.custom_odr_no --承运单号
,t.load_name --出发地
,t.unload_name --到达地
,to_char(t.pre_load_time,'YYYY-MM-DD HH24:MI') as PRE_LOAD_TIME --要求到达提货点日期
,to_char(t.pre_unload_time,'YYYY-MM-DD HH24:MI') as PRE_UNLOAD_TIME --要求到达日期
,t.tot_gross_w --吨位
,t3.udf4 --开票方（简写）
,t1.suplr_name --承运商
,t1.plate_no --车牌号
,t1.driver --驾驶员姓名
,t1.mobile  --驾驶员联系方式
,t4.due_fee  --运费（含开票点）
,'GPS:' || t7.equip_no || ',温控仪:' || nvl(t5.equip_no,t6.equip_no) as EQUIPNO -- 温度记录编号（含GPS和温度记录仪）
,to_char(t1.arrive_whse_time,'YYYY-MM-DD HH24:MI') as ARRIVE_WHSE_TIME  --实际到达提货点时间
,to_char(t1.start_load_time,'YYYY-MM-DD HH24:MI')  as START_LOAD_TIME --实际装货时间
,to_char(t1.end_load_time,'YYYY-MM-DD HH24:MI') as END_LOAD_TIME --实际离开提货点时间
,t8.CURRENT_LOC --在途跟踪
,t8.TEMPERATURE --在途温度
,to_char(t1.CAST_BILL_TIME,'YYYY-MM-DD') as ARRIVE_DATE --实际到达卸货点日期
,to_char(t1.CAST_BILL_TIME,'HH24:MI:SS') as CAST_BILL_TIME --卸货投单时间
,to_char(t1.START_UNLOAD_TIME,'HH24:MI:SS') as START_UNLOAD_TIME --卸货开始时间
,to_char(t1.UNLOAD_TIME,'HH24:MI:SS') as UNLOAD_TIME --卸货结束时间
,t1.udf1 --卸货温度
,t1.track_notes --异常备注
,'' as ADDITIONAL --额外费用录入
,t.customer_id,t.odr_no,t1.shpm_no,t1.load_no,t1.exec_org_id
from trans_order_header t
,trans_shipment_header t1
,trans_load_header t2
,bas_supplier t3
,trans_bill_pay t4
,bas_tempeq t5
,bas_tempeq t6
,bas_gpseq t7
,trans_track_trace t8
where t.odr_no = t1.odr_no
and t1.load_no = t2.load_no
and t.suplr_id = t3.id(+)
and t1.load_no = t4.doc_no(+)
and t2.temp_no1 = t5.id(+)
and t2.temp_no2 = t6.id(+)
and t2.gps_no1 = t7.id(+)
and t1.shpm_no = t8.shpm_no(+)
and t1.status >= '40';

/

create or replace view lc_pay_customer_detail as
select rownum-1 as col1,'' as col2,'P' || to_char(last_day(add_months(sysdate,-1)),'YYYYMM') || '01' AS col3,
 'P' || to_char(last_day(add_months(sysdate,-1)),'YYYYMM') || '-' || t1.short_name as col4,
 'P' || to_char(last_day(add_months(sysdate,-1)),'YYYYMM') || '-' || t1.short_name as col5,t1.AP_DEADLINE || '天' as col6,'供应商' as col7,t1.suplr_cname as col8,
 '业务管理' as col9,'余磊' as col10,'长途运输成本Long-distanceTruckingCost' as col11,t3.customer_cname as col12,'人民币' as col13,'1' as col14,t.TOT_AMOUNT as col15,
 t.TOT_AMOUNT as col16,'CN03' as col17,t1.udf2 as col18,'' as col19,'' as col20,'' as col21,to_char(last_day(add_months(sysdate,-1)),'YYYY-MM-DD') as col22,
 '' as col23,t.belong_month as col24,t2.short_name as col25,'' as col26,'国内采购' as col27
 from bill_pay_initdetails t
 ,bas_supplier t1
 ,BAS_CUSTOMER t2
 ,bas_customer t3
 where t.suplr_id = t1.id(+)
 and t.customer_id = t2.id(+)
 and t2.parent_customer_id = t3.id(+);

/

CREATE OR REPLACE VIEW V_PAY_INIT AS
select t.id,'扣款单' as FEE_TYPE,t.vehicle_typ_id,t2.suplr_cname,t.LOAD_NO,t.custom_odr_no,'' as load_date,'' as unload_date,t3.load_name,t3.unload_name,t4.vehicle_type,BELONG_MONTH,t1.name_c as TYPE_NAME,DEDUCT_AMOUNT AS AMOUNT,t.descr,t.plate_no
from BILL_PAY_DEDUCT t
,BAS_CODES t1
,bas_supplier t2
,trans_order_header t3
,bas_vehicle_type t4
where t.deduct_type = t1.id(+)
and t.suplr_id = t2.id
and t.custom_odr_no = t3.custom_odr_no(+)
and t3.vehicle_typ = t4.id(+)
and t.status = 'C71638421A6C450382CFF8C7C201718F'
union all
select t.id,'补贴单' as FEE_TYPE,t.vehicle_typ_id,t2.suplr_cname,t.LOAD_NO,t.custom_odr_no,'' as load_date,'' as unload_date,t3.load_name,t3.unload_name,t4.vehicle_type,BELONG_MONTH,t1.name_c as TYPE_NAME,ALLOWANCE_AMOUNT AS AMOUNT,t.descr,t.plate_no
from BILL_PAY_ALLOWANCE t
,BAS_CODES t1
,bas_supplier t2
,trans_order_header t3
,bas_vehicle_type t4
where t.allowance_type = t1.id(+)
and t.suplr_id = t2.id
and t.custom_odr_no = t3.custom_odr_no(+)
and t3.vehicle_typ = t4.id(+)
and t.status = 'C71638421A6C450382CFF8C7C201718F'
union all
select t.id,'运费' as FEE_TYPE,t.vehicle_typ_id,t.suplr_name,t.LOAD_NO,'' custom_odr_no,'' as load_date,'' as unload_date,'' as load_name,unload_name,t2.vehicle_type,t.BELONG_MONTH,'应付运费' as TYPE_NAME,TOT_AMOUNT,t.NOTES,t.plate_no
from bill_pay_initdetails t
,bas_vehicle_type t2
where t.vehicle_typ_id = t2.id(+)
and t.init_no is null
--费用类型、承运商、调度单号、客户单号、发货日期、收货日期、发货方、收货方、车型、所属期、类型说明、费用金额（含税）

--2017-05-09 yuanlei
create or replace view r_kpi_loadwh_rate as
select t.suplr_name,t.odr_time,t.arrive_whse_time as addtime,t.exec_org_id,t.exec_org_id_name,t.suplr_id,
tot_count as DAYS,
(case when whse_delay_days = 0 then 1 else 0 end) as DAYS0,
(case when whse_delay_days = 1 then 1 else 0 end) as DAYS1,
(case when whse_delay_days = 2 then 1 else 0 end) as DAYS2,
(case when whse_delay_days = 3 then 1 else 0 end) as DAYS3,
(case when whse_delay_days = 4 then 1 else 0 end) as DAYS4,
(case when whse_delay_days = 5 then 1 else 0 end) as DAYS5,
(case when whse_delay_days >= 6 then 1 else 0 end) as DAYS6
from (

select '1' as tot_count,t.shpm_no,t.odr_time,t.suplr_name,t.arrive_whse_time,t.exec_org_id,t.exec_org_id_name,t.suplr_id,
(case when t.pre_load_time is null then 0 else ceil(t.arrive_whse_time-t.pre_whse_time) end) as whse_delay_days
from trans_shipment_header t
where status<90 and t.ARRIVE_WHSE_TIME is not null

) 
t;

create or replace view r_kpi_load_rate as
select t.suplr_id,t.suplr_name,t.odr_time as addtime,t.exec_org_id,t.exec_org_id_name,
tot_count as DAYS,
1 as DAYS0,
(case when send_delay_days = 1 then 1 else 0 end) as DAYS1,
(case when send_delay_days = 2 then 1 else 0 end) as DAYS2,
(case when send_delay_days = 3 then 1 else 0 end) as DAYS3,
(case when send_delay_days = 4 then 1 else 0 end) as DAYS4,
(case when send_delay_days = 5 then 1 else 0 end) as DAYS5,
(case when send_delay_days >= 6 then 1 else 0 end) as DAYS6
from
(
select '1' as tot_count,t.exec_org_id,t.exec_org_id_name,t.shpm_no,t.odr_time,t.suplr_id,t.suplr_name,
(case when t.pre_load_time is null then 0 else ceil(t.END_LOAD_TIME-t.pre_load_time) end) as send_delay_days
from trans_shipment_header t
where t.status < 90 and t.END_LOAD_TIME is not null
) 
t;

create or replace view r_kpi_unload_rate as
select t.suplr_id,t.suplr_name,t.odr_time as addtime,t.exec_org_id,t.exec_org_id_name,
tot_count as DAYS,
1 as DAYS0,
(case when unload_delay_days = 1 then 1 else 0 end) as DAYS1,
(case when unload_delay_days = 2 then 1 else 0 end) as DAYS2,
(case when unload_delay_days = 3 then 1 else 0 end) as DAYS3,
(case when unload_delay_days = 4 then 1 else 0 end) as DAYS4,
(case when unload_delay_days = 5 then 1 else 0 end) as DAYS5,
(case when unload_delay_days >= 6 then 1 else 0 end) as DAYS6
from
(
select '1' as tot_count,t.exec_org_id,t.exec_org_id_name,t.shpm_no,t.odr_time,t.suplr_id,t.suplr_name,
(case when t.PRE_UNLOAD_TIME is null then 0 else ceil(t.CAST_BILL_TIME-t.PRE_UNLOAD_TIME) end) as unload_delay_days
from trans_shipment_header t
where t.status < 90 and t.CAST_BILL_TIME is not null
) 
t;


create or replace view r_kpi_pod_rate as
select t.suplr_id,t.suplr_name,t.odr_time as addtime,t.exec_org_id,t.exec_org_id_name,
tot_count as DAYS,
1 as DAYS0,
(case when pod_delay_days = 1 then 1 else 0 end) as DAYS1,
(case when pod_delay_days = 2 then 1 else 0 end) as DAYS2,
(case when pod_delay_days = 3 then 1 else 0 end) as DAYS3,
(case when pod_delay_days = 4 then 1 else 0 end) as DAYS4,
(case when pod_delay_days = 5 then 1 else 0 end) as DAYS5,
(case when pod_delay_days >= 6 then 1 else 0 end) as DAYS6
from
(
select '1' as tot_count,t.exec_org_id,t.exec_org_id_name,t.shpm_no,t.odr_time,t.suplr_id,t.suplr_name,
(case when t.PRE_POD_TIME is null then 0 else ceil(t.POD_TIME-t.PRE_POD_TIME) end) as pod_delay_days
from trans_shipment_header t
where t.status < 90 and t.POD_TIME is not null
) 
t;

create or replace view r_kpi_order as
select t.EXEC_ORG_ID,t.EXEC_ORG_ID_NAME,t.CUSTOMER_ID,t.ADDTIME,t.ODR_TIME,t.ODR_NO,t.REFENENCE1,t.CUSTOMER_NAME,t.BIZ_TYP,t.STATUS_NAME,
t.LOAD_AREA_ID2,t.LOAD_AREA_NAME2,t.LOAD_ADDRESS,t.UNLOAD_AREA_ID2,t.UNLOAD_AREA_NAME2,t.UNLOAD_ADDRESS,t.UNLOAD_CONTACT,t.UNLOAD_TEL
--,(case when AUDIT_TIME is null or PRE_AUDIT_TIME >= AUDIT_TIME then 'Y' else 'N' end) AUDIT_FLAG
,(case when DEPART_TIME is null or PRE_LOAD_TIME >= DEPART_TIME then 'Y' else 'N' end) LOAD_FLAG
,(case when UNLOAD_TIME is null or PRE_UNLOAD_TIME >= UNLOAD_TIME then 'Y' else 'N' end) UNLOAD_FLAG
,(case when POD_TIME is null or PRE_POD_TIME >= POD_TIME then 'Y' else 'N' end) POD_FLAG
--,to_char(t.PRE_AUDIT_TIME,'YYYY-MM-DD HH24:MI') AS PRE_AUDIT_TIME
--,to_char(t.AUDIT_TIME,'YYYY-MM-DD HH24:MI') AS AUDIT_TIME
,to_char(t.PRE_LOAD_TIME,'YYYY-MM-DD HH24:MI') AS PRE_LOAD_TIME
,to_char(t.DEPART_TIME,'YYYY-MM-DD HH24:MI') AS LOAD_TIME
,to_char(t.PRE_UNLOAD_TIME,'YYYY-MM-DD HH24:MI') AS PRE_UNLOAD_TIME
,to_char(t.UNLOAD_TIME,'YYYY-MM-DD HH24:MI') AS UNLOAD_TIME
,to_char(t.PRE_POD_TIME,'YYYY-MM-DD HH24:MI') AS PRE_POD_TIME
,to_char(t.POD_TIME,'YYYY-MM-DD HH24:MI') AS POD_TIME
,t1.name_c as BIZ_TYP_NAME
--,(case when AUDIT_TIME is null or PRE_AUDIT_TIME is null then 0 else ceil((AUDIT_TIME-PRE_AUDIT_TIME)*24) end) AUDIT_HOURS
,(case when END_LOAD_TIME is null or PRE_LOAD_TIME is null then 0 else ceil((END_LOAD_TIME-PRE_LOAD_TIME)*24) end) LOAD_HOURS
,(case when CAST_BILL_TIME is null or PRE_UNLOAD_TIME is null then 0 else ceil((CAST_BILL_TIME-PRE_UNLOAD_TIME)*24) end) UNLOAD_HOURS
,(case when POD_TIME is null or PRE_POD_TIME is null then 0 else ceil((POD_TIME-PRE_POD_TIME)*24) end) POD_HOURS
,to_char(t.ARRIVE_WHSE_TIME,'YYYY-MM-DD HH24:MI') as ARRIVE_WHSE_TIME
,to_char(t.START_LOAD_TIME,'YYYY-MM-DD HH24:MI') as START_LOAD_TIME
,to_char(t.END_LOAD_TIME,'YYYY-MM-DD HH24:MI') as END_LOAD_TIME
,(case when ARRIVE_WHSE_TIME is null or START_LOAD_TIME is null then 0 else ceil((START_LOAD_TIME-ARRIVE_WHSE_TIME)*24) end) LOAD_WAIT_HOURS
,(case when END_LOAD_TIME is null or START_LOAD_TIME is null then 0 else ceil((END_LOAD_TIME-START_LOAD_TIME)*24) end) PICKLOAD_HOURS
,to_char(t.CAST_BILL_TIME,'YYYY-MM-DD HH24:MI') as CAST_BILL_TIME
,to_char(t.START_UNLOAD_TIME,'YYYY-MM-DD HH24:MI') as START_UNLOAD_TIME
,(case when START_UNLOAD_TIME is null or CAST_BILL_TIME is null then 0 else ceil((START_UNLOAD_TIME-CAST_BILL_TIME)*24) end) UNLOAD_WAIT_HOURS
,(case when UNLOAD_TIME is null or START_UNLOAD_TIME is null then 0 else ceil((UNLOAD_TIME-START_UNLOAD_TIME)*24) end) UNLOADING_HOURS
FROM TRANS_SHIPMENT_HEADER T
,BAS_CODES t1
where t.BIZ_TYP = t1.id(+);

--yuanlei 2017-05-11
CREATE OR REPLACE VIEW V_PAY_INIT AS
select t.id,'扣款单' as FEE_TYPE,t.vehicle_typ_id,t2.suplr_cname,t.LOAD_NO,t.custom_odr_no,'' as load_date,'' as unload_date,'' as load_name,'' as unload_name,t4.vehicle_type,BELONG_MONTH,t1.name_c as TYPE_NAME,DEDUCT_AMOUNT AS AMOUNT,t.descr,t.plate_no
from BILL_PAY_DEDUCT t
,BAS_CODES t1
,bas_supplier t2
,bas_vehicle_type t4
where t.deduct_type = t1.id(+)
and t.suplr_id = t2.id
and t.vehicle_typ_id = t4.id(+)
and t.status = 'C71638421A6C450382CFF8C7C201718F'
and t.init_no = 'X'
union all
select t.id,'补贴单' as FEE_TYPE,t.vehicle_typ_id,t2.suplr_cname,t.LOAD_NO,t.custom_odr_no,'' as load_date,'' as unload_date,'' as load_name,'' as unload_name,t4.vehicle_type,BELONG_MONTH,t1.name_c as TYPE_NAME,ALLOWANCE_AMOUNT AS AMOUNT,t.descr,t.plate_no
from BILL_PAY_ALLOWANCE t
,BAS_CODES t1
,bas_supplier t2
,bas_vehicle_type t4
where t.allowance_type = t1.id(+)
and t.suplr_id = t2.id
and t.vehicle_typ_id = t4.id(+)
and t.status = 'C71638421A6C450382CFF8C7C201718F'
and t.init_no = 'X'
union all
select t.id,'运费' as FEE_TYPE,t.vehicle_typ_id,t.suplr_name,t.LOAD_NO,'' custom_odr_no,'' as load_date,'' as unload_date,'' as load_name,unload_name,t2.vehicle_type,t.BELONG_MONTH,'应付运费' as TYPE_NAME,TOT_AMOUNT,t.NOTES,t.plate_no
from bill_pay_initdetails t
,bas_vehicle_type t2
where t.vehicle_typ_id = t2.id(+)
and t.init_no  = 'X'
--费用类型、承运商、调度单号、客户单号、发货日期、收货日期、发货方、收货方、车型、所属期、类型说明、费用金额（含税）

CREATE OR REPLACE PROCEDURE SP_SHPM_LOAD_FINISH (
in_load_no VARCHAR2,            --调度单号
in_shpm_no LST,                  --作业单号
in_ARRIVER_WHSE_TIME VARCHAR2,   --到库时间
in_START_LOAD_TIME VARCHAR2,     --开始装货时间
in_END_LOAD_TIME VARCHAR2,       --完成装货时间
in_udf3 VARCHAR2,               --开门温度
in_udf4 VARCHAR2,               --关门温度
in_veh_pos number,              --车位
in_LOAD_NOTES VARCHAR2,         --备注
in_SHPM_ROW LST,               --明细行号
in_LD_QNTY LST,                --发货数量
in_UNLD_QNTY LST,              --收货数量
in_UNLD_VOL LST,               --收货体积
in_UNLD_GWGT LST,              --收货重量
in_user_id VARCHAR2,           --用户ID
output_result OUT VARCHAR2
)
IS
/**
 *  yuanlei 2011-1-1
 *  V1.1 编辑时间 ：2010-2-16 添加司机服务态度、满意度
 *  V1.2 编辑时间 ：2011-9-20 添加了作业单跟踪记录字段TRACK_NOTES，自动添加跟踪记录时，更新作业单该字段值，避免关联查询
 */
/*in_shpm_no LST := LST();
in_SHPM_ROW LST := LST();
in_LD_QNTY LST := LST();
in_UNLD_QNTY LST := LST();
in_UNLD_VOL LST := LST();
in_UNLD_GWGT LST := LST();
in_UNLD_NWGT LST := LST();
in_UNLD_WORTH LST := LST();*/
op_customer_id varchar(32);
op_exec_org_id varchar(32);
op_odr_no varchar(50);
op_trans_uom varchar(32);
op_price number(18,8);
op_suplr_id varchar(32);
op_plate_no varchar(20);
op_driver varchar(20);
op_mobile varchar(20);
op_trans_srvc_id varchar2(32);
op_biz_typ varchar2(32);
op_last_jrny_no varchar2(100);
op_exec_org_id_name varchar2(50);
t_sub_qnty number(18,8);
t_unload_days number(4);
op_status varchar2(50);
op_arrive_time varchar2(50);
op_start_time varchar2(30);
op_end_time varchar2(30);

op_qnty number(18,8);
op_vol number(18,8);
op_gwgt number(18,8);
op_nwgt number(18,8);
op_worth number(18,8);

tmp_shpm_no varchar(100);
tmp_abnormal_notes varchar(512);
t_count number(4);
--in_SERVICE_CODE varchar(512);
--in_SATISFY_CODE varchar(512);
t_status varchar(50);

in_odr_no LST := LST();

op_stat_code varchar2(50);
op_sysid varchar2(32);
op_temperature_name varchar2(50);
op_addr_code varchar2(100);

CURSOR head IS
      SELECT SHPM_NO,refenence1,odr_no,tot_qnty,refenence4,plate_no,udf3,load_name,load_id,load_address,unload_name,end_contact,customer_name,biz_typ,trans_srvc_id FROM TRANS_SHIPMENT_HEADER WHERE LOAD_NO = in_load_no;

op_notes_name varchar2(400);
op_notes_code varchar2(50);
BEGIN
    output_result := '00';
    if length(in_ARRIVER_WHSE_TIME) > 19 then
        op_arrive_time := substr(in_ARRIVER_WHSE_TIME,0,18);
    else
        op_arrive_time := in_ARRIVER_WHSE_TIME;
    end if;
    if length(in_START_LOAD_TIME) > 19 then
        op_start_time := substr(in_START_LOAD_TIME,0,18);
    else
        op_start_time := in_START_LOAD_TIME;
    end if;
    if length(in_END_LOAD_TIME) > 19 then
        op_end_time := substr(in_END_LOAD_TIME,0,18);
    else
        op_end_time := in_END_LOAD_TIME;
    end if;
    --in_SERVICE_CODE := '';
    --in_SATISFY_CODE := '';
    /*in_shpm_no.extend;
    in_shpm_no(1) := null;
    in_SHPM_ROW.extend;
    in_SHPM_ROW(1) := ' ';
    in_LD_QNTY.extend;
    in_LD_QNTY(1) := '';
    --in_LD_QNTY.extend;
    --in_LD_QNTY(2) := '12000';
    in_UNLD_QNTY.extend;
    in_UNLD_QNTY(1) := '120';
    --in_UNLD_QNTY.extend;
    --in_UNLD_QNTY(2) := '12000';
    in_UNLD_VOL.extend;
    in_UNLD_VOL(1) := '26822600';
    --in_UNLD_VOL.extend;
    --in_UNLD_VOL(2) := '10729040';
    in_UNLD_GWGT.extend;
    in_UNLD_GWGT(1) := '46';
    --in_UNLD_GWGT.extend;
    --in_UNLD_GWGT(2) := '48.4';
    in_UNLD_NWGT.extend;
    in_UNLD_NWGT(1) := '0';
    --in_UNLD_NWGT.extend;
    --in_UNLD_NWGT(2) := '0';
    in_UNLD_WORTH.extend;
    in_UNLD_WORTH(1) := '0';
    --in_UNLD_WORTH.extend;
    --in_UNLD_WORTH(2) := '0';*/
    --dbms_output.put_line('start:' || to_char(sysdate,'yyyy-mm-dd hh:mi:ss'));
    if in_load_no <> 'X' then
      select dispatch_stat into t_status from trans_load_header where load_no = in_load_no;
      if t_status <> RDPG_STAT.LOAD_AUDIT then
           output_result := '01调度单未配车审核，不能执行做装车确认!';
           return;
      end if;
      select suplr_id,exec_org_id,plate_no,driver1,mobile1 into op_suplr_id,op_exec_org_id,op_plate_no,op_driver,op_mobile from TRANS_LOAD_HEADER WHERE LOAD_NO = in_load_no;
    end if;
    if trim(in_shpm_no(1)) is not null then

        for   i   in   1..in_shpm_no.count   loop
            tmp_shpm_no := in_shpm_no(i);
            select odr_no,trans_uom,customer_id,abnomal_notes,status,biz_typ,trans_srvc_id,exec_org_id,exec_org_id_name,last_jrny_no
              into op_odr_no,op_trans_uom,op_customer_id,tmp_abnormal_notes,op_status,op_biz_typ,op_trans_srvc_id,op_exec_org_id,op_exec_org_id_name,op_last_jrny_no
              from TRANS_SHIPMENT_HEADER where shpm_no = tmp_shpm_no;
            if op_status >= '30' then
                in_odr_no.extend;
                in_odr_no(i) := op_odr_no;
                if trim(in_SHPM_ROW(1)) is not null then   --完好发货
                begin
                    for j in 1..in_SHPM_ROW.count loop
                        select qnty,vol,g_wgt,n_wgt,worth into op_qnty,op_vol,op_gwgt,op_nwgt,op_worth from TRANS_SHIPMENT_ITEM where shpm_no = tmp_shpm_no and shpm_row = in_SHPM_ROW(j);
                        --op_vol := in_LD_QNTY(j) * op_vol / op_qnty;
                        --op_gwgt := in_LD_QNTY(j) * op_gwgt / op_qnty;
                        op_vol := in_UNLD_VOL(j);
                        op_gwgt := in_UNLD_GWGT(j);
                        op_nwgt := in_UNLD_QNTY(j) * op_nwgt / op_qnty;
                        op_worth := in_UNLD_QNTY(j) * op_worth / op_qnty;
                        update TRANS_SHIPMENT_ITEM SET LD_QNTY = in_UNLD_QNTY(j),LD_VOL = op_vol,LD_GWGT = op_gwgt,LD_NWGT = op_nwgt,
                            LD_WORTH = op_worth where shpm_no = tmp_shpm_no and shpm_row = in_SHPM_ROW(j);
                        t_sub_qnty := op_qnty - in_UNLD_QNTY(j);
                        if t_sub_qnty > 0 then

                            --插入货差货损记录
                            insert into TRANS_LOSS_DAMAGE(ID,Load_No,SHPM_NO,ODR_NO,SHPM_ROW,SKU_ID,SKU_SPEC,LOTID,PACK_ID,TRANS_UOM,QNTY,
                            AMOUNT,LOSS_DAMAGE_TYP,REASON,DUTYER,CUSTOMER_ID,SUPLR_ID,EXEC_ORG_ID,NOTES,Addtime,Addwho)
                            select sys_guid(),in_load_no,in_shpm_no(i),op_odr_no,in_SHPM_ROW(j),SKU_ID,SKU_SPEC,LOT_ID,PACK_ID,op_trans_uom,t_sub_qnty,
                            op_price * t_sub_qnty,null,null,null,op_customer_id,op_suplr_id,op_exec_org_id,'',sysdate,in_user_id
                              from TRANS_SHIPMENT_ITEM where shpm_no = tmp_shpm_no and shpm_row = in_shpm_row(j);
                            output_result := output_result || 'Y';
                        else
                            output_result := output_result || 'N';
                        end if;

                        --判断是否是提货段，如果提货段数量有差异要回写到后面的段和托运单上
                        --if op_trans_srvc_id = '1' then--提货
                            update TRANS_ORDER_ITEM set QNTY = in_UNLD_QNTY(j),VOL = op_vol, G_WGT = op_gwgt, N_WGT = op_nwgt, WORTH = op_worth
                            where odr_no = op_odr_no and odr_row = in_SHPM_ROW(j);
                            if op_last_jrny_no is not null then  --行程拆分
                                update TRANS_SHIPMENT_ITEM set QNTY = in_UNLD_QNTY(j),VOL = op_vol, G_WGT = op_gwgt, N_WGT = op_nwgt, WORTH = op_worth
                                where odr_no = op_odr_no  and shpm_no != tmp_shpm_no and shpm_row = in_shpm_row(j);
                            end if;
                        --end if;

                    end loop;
                end;
                end if;
                update TRANS_SHIPMENT_HEADER SET LOAD_STAT = RDPG_STAT.LOADED_NAME, START_LOAD_TIME = to_date(op_start_time,'yyyy-MM-dd HH24:mi:ss')
                ,END_LOAD_TIME = to_date(op_end_time,'yyyy-MM-dd HH24:mi:ss'),LOAD_NOTES = in_LOAD_NOTES,UDF3 = in_udf3,veh_pos = in_veh_pos
                ,ARRIVE_WHSE_TIME = to_date(op_arrive_time,'yyyy-MM-dd HH24:mi:ss')
                --,sign_org_id = op_exec_org_id,sign_org_id_name = op_exec_org_id_name
                WHERE shpm_no = tmp_shpm_no;
                --自动给每个作业单写笔跟踪记录
                INSERT INTO TRANS_TRACK_TRACE(ID,LOAD_NO,SHPM_NO,ODR_NO,PLATE_NO,DRIVER,MOBILE,TRACER,EXEC_ORG_ID,TRACE_TIME,
                   PRE_UNLOAD_TIME,CURRENT_LOC,INFORMATION,ADDWHO,ADDTIME,notes)
                select sys_guid(),LOAD_NO,SHPM_NO,ODR_NO,op_plate_no,op_driver,to_char(op_mobile),in_user_id,op_exec_org_id,sysdate,
                   PRE_UNLOAD_TIME,UNLOAD_AREA_NAME,'装车确认',in_user_id,sysdate,in_LOAD_NOTES
                 from TRANS_SHIPMENT_HEADER where shpm_no = tmp_shpm_no;

                --实际收款金额回写托运单和作业单
                /*if in_udf4 is not null and length(trim(in_udf4)) > 0 then
                    update trans_bill_rece set PAY_FEE = in_udf4 where doc_no = op_odr_no and fee_name = '应收运费';

                end if;*/

                select UNLOAD_DELAY_DAYS into t_unload_days from trans_shipment_header where shpm_no = tmp_shpm_no;
                --插入业务日志
                insert into TRANS_TRANSACTION_LOG(id,ACTION_TYP,DOC_TYP,DOC_NO,NOTES,ADDTIME,ADDWHO)
                    values(sys_guid(),RDPG_STAT.UNLOAD,RDPG_STAT.SHPM_NO,tmp_shpm_no,'作业单装车确认',sysdate,in_user_id);
                SP_SFSTATUS_LOG(op_biz_typ,op_trans_srvc_id,in_load_no,tmp_shpm_no,'45',in_user_id);

                --插入作业单客户日志
                --SP_CUSTOMACT_LOG('LOADED',RDPG_STAT.SHPM_NO,tmp_shpm_no,in_user_id,to_date(in_UNLOAD_TIME,'yyyy-MM-dd HH24:mi:ss') , output_result);
            end if;
        end loop;

        select count(1) into t_count from trans_shipment_header where load_no = in_load_no and load_stat <> RDPG_STAT.LOADED_NAME;
        if t_count > 0 then
            update trans_load_header set load_stat = '15',START_LOAD_TIME = to_date(op_start_time,'yyyy-MM-dd HH24:mi:ss')
              ,END_LOAD_TIME = to_date(op_end_time,'yyyy-MM-dd HH24:mi:ss'),ARRIVE_WHSE_TIME = to_date(op_arrive_time,'yyyy-MM-dd HH24:mi:ss')
            where load_no = in_load_no;
        else
            update trans_load_header set load_stat = '20',START_LOAD_TIME = to_date(op_start_time,'yyyy-MM-dd HH24:mi:ss')
              ,END_LOAD_TIME = to_date(op_end_time,'yyyy-MM-dd HH24:mi:ss'),ARRIVE_WHSE_TIME = to_date(op_arrive_time,'yyyy-MM-dd HH24:mi:ss')
            where load_no = in_load_no;
        end if;
    else
        update TRANS_SHIPMENT_HEADER SET LOAD_STAT = RDPG_STAT.LOADED_NAME, START_LOAD_TIME = to_date(op_start_time,'yyyy-MM-dd HH24:mi:ss')
        ,END_LOAD_TIME = to_date(op_end_time,'yyyy-MM-dd HH24:mi:ss'),LOAD_NOTES = in_LOAD_NOTES,UDF3 = in_udf3, UDF4 = in_udf4,veh_pos = in_veh_pos
        ,ARRIVE_WHSE_TIME = to_date(op_arrive_time,'yyyy-MM-dd HH24:mi:ss')
        WHERE load_no = in_load_no;

        UPDATE TRANS_LOAD_HEADER SET LOAD_STAT = '20' where LOAD_NO = in_load_no;

        --自动给每个作业单写笔跟踪记录
        INSERT INTO TRANS_TRACK_TRACE(ID,LOAD_NO,SHPM_NO,ODR_NO,PLATE_NO,DRIVER,MOBILE,TRACER,EXEC_ORG_ID,TRACE_TIME,
           PRE_UNLOAD_TIME,CURRENT_LOC,INFORMATION,ADDWHO,ADDTIME,notes)
        select sys_guid(),LOAD_NO,SHPM_NO,ODR_NO,op_plate_no,op_driver,to_char(op_mobile),in_user_id,op_exec_org_id,sysdate,
           PRE_UNLOAD_TIME,UNLOAD_AREA_NAME,'装车确认',in_user_id,sysdate,in_LOAD_NOTES
         from TRANS_SHIPMENT_HEADER where load_no = in_load_no;

        --插入业务日志
        insert into TRANS_TRANSACTION_LOG(id,ACTION_TYP,DOC_TYP,DOC_NO,NOTES,ADDTIME,ADDWHO)
            values(sys_guid(),RDPG_STAT.UNLOAD,RDPG_STAT.LOAD_NO,in_load_no,'调度单装车确认',sysdate,in_user_id);
        select shpm_no,biz_typ,trans_srvc_id into tmp_shpm_no,op_biz_typ,op_trans_srvc_id from trans_shipment_header where load_no = in_load_no and rownum <= 1;
        SP_SFSTATUS_LOG(op_biz_typ,op_trans_srvc_id,in_load_no,tmp_shpm_no,'45',in_user_id);

        for it in head loop
            if tmp_shpm_no != it.shpm_no then
                begin
                    --批量复制运单状态日志
                    select notes_code,stat_code into op_notes_code,op_stat_code from sf_status_config where biz_typ = it.biz_typ and trans_srvc_id = it.trans_srvc_id and node = '45' and enable_flag = 'Y';
                    select name_c into op_notes_name from bas_codes where code = op_notes_code and prop_code = 'SF_NOTES';

                    if instr(op_notes_name,'X1') > 0 then
                        if it.load_name is null then
                            op_notes_name := replace(op_notes_name,'X1',it.load_address);
                        else
                            op_notes_name := replace(op_notes_name,'X1',it.load_name);
                        end if;
                    end if;
                    if instr(op_notes_name,'X2') > 0 then
                        op_notes_name := replace(op_notes_name,'X2',it.unload_name);
                    end if;
                    insert into sf_status_log(id,refenence1,odr_no,status,qnty,temperature,plate_no,load_no,addtime,addwho,node,shpm_no,notes,descr)
                    values(sys_guid(),it.refenence1,it.odr_no,op_stat_code,it.tot_qnty,it.refenence4,it.plate_no,in_load_no,sysdate,in_user_id,'45',it.shpm_no,op_notes_name,'装车温度:' || it.udf3 || ',数量:' || it.tot_qnty);
                exception when OTHERS THEN
                    output_result := output_result;
                end;
            end if;
        end loop;
    end if;

    commit;
    --dbms_output.put_line('end:' || to_char(sysdate,'yyyy-mm-dd hh:mi:ss'));
    EXCEPTION
    WHEN OTHERS THEN
         rollback;
         output_result:='01'||sqlerrm;
    return;
END;
/

CREATE OR REPLACE FUNCTION IS_DATE(parameter VARCHAR2) RETURN NUMBER IS
  val DATE;
BEGIN
  val := TO_DATE(NVL(parameter, 'a'), 'yyyy-mm-dd hh24:mi:ss');
  RETURN 1;
EXCEPTION
  WHEN OTHERS THEN
    RETURN 0;
END;
/

CREATE OR REPLACE FUNCTION IS_DATE(parameter VARCHAR2) RETURN NUMBER IS
  val DATE;
BEGIN
  val := TO_DATE(NVL(parameter, 'a'), 'yyyy-mm-dd hh24:mi:ss');
  RETURN 1;
EXCEPTION
  WHEN OTHERS THEN
    RETURN 0;
END;
/

CREATE OR REPLACE PROCEDURE BMS_REC_CREATE_ADJNO
(
in_INIT_NO LST,   --期初单号
in_user_id varchar2,
output_result out varchar2
)
IS
/**
 * 生成调整账单
 */
r_init_no varchar2(100);
r_adj_no varchar2(100);


op_buss_id varchar2(32);
op_buss_name varchar2(100);
op_belong_month varchar2(50);
op_initital_amount NUMBER(18,8);
op_init_amount number(18,8);
op_tax_amount NUMBER(18,8);
op_subtax_amount number(18,8);
op_adj_amount number(18,8);
op_confirm_amount number(18,8);
op_account_stat varchar2(32);
op_tax number(4,2);
op_hold_flag char(1);
op_invoice_title varchar2(50);

t_count number(4);

--in_INIT_NO LST := LST();
begin
    --in_INIT_NO.Extend;
    --in_INIT_NO(1) := '2017032700005';
    output_result := '00';
    for   i   in   1..in_INIT_NO.count loop
        r_init_no := in_INIT_NO(i);
        select buss_id,buss_name,belong_month,initital_amount,adj_amount,confirm_amount,tax_amount,subtax_amount,account_stat,init_amount,hold_flag
        into op_buss_id,op_buss_name,op_belong_month,op_initital_amount,op_adj_amount,op_confirm_amount,op_tax_amount,op_subtax_amount,op_account_stat,op_init_amount,op_hold_flag
            from bill_rec_initial WHERE INIT_NO = r_init_no;
        if op_account_stat = '20' then
            output_result :='01对账单已确认无法生成调整单!';
            return;
        end if;
        if op_hold_flag = 'Y' then
            output_result :='01对账单已生成调整单,不能重复生成!';
            return;
        end if;
        if op_adj_amount = 0 then
            output_result :='01金额未调整,不需要生成调整账单!';
            return;
        end if;
        select udf2,invoice_title into op_tax,op_invoice_title from bas_customer where id = op_buss_id;
        if op_tax is null then
            op_tax := 0;
        end if;
        SP_GET_IDSEQ('RECE_ADJNO',r_adj_no);

        /*begin
            select min(show_seq) into t_show_seq from SYS_APPROVE_SET where doc_no = 'REC_ADJNO';
        exception when no_data_found then
            output_result :='01应收调整单未设置审批流程，请先设置审批流程!';
            return;
        end;
        select ROLE_ID into op_role_id from SYS_APPROVE_SET where DOC_NO = 'REC_ADJNO' and show_seq = t_show_seq;*/
        select count(1) into t_count from BILL_REC_ADJUST where init_no = r_init_no;

        op_tax_amount := round(op_adj_amount * op_tax /(100+op_tax),2);
        insert into BILL_REC_ADJUST(id,adj_no,buss_id,buss_name,belong_month,INITITAL_AMOUNT,CONFIRM_AMOUNT,ADJ_AMOUNT,TAX_AMOUNT,SUBTAX_AMOUNT,status,addtime,addwho,init_no,bill_to)
        values(sys_guid(),r_adj_no,op_buss_id,op_buss_name,op_belong_month,op_initital_amount,op_confirm_amount,op_adj_amount,op_tax_amount,op_adj_amount-op_tax_amount,'10',sysdate,in_user_id,r_init_no,op_invoice_title);

        if t_count = 0 then
            insert into BILL_REC_ADJDETAILS(ID,ADJ_NO,Buss_Id,buss_name,Odr_No,Custom_Odr_No,vehicle_typ_id,LOAD_DATE,UNLOAD_DATE,LOAD_NAME,UNLOAD_NAME,Notes,init_amount,initital_amount,confirm_amount1,adj_amount1,addwho,addtime,init_no,init_detail_id)
            select sys_guid(),r_adj_no,buss_id,buss_name,odr_no,custom_odr_no,vehicle_typ_id,load_date,unload_date,load_name,unload_name,notes,init_amount,TOT_AMOUNT,confirm_amount,adj_amount,in_user_id,sysdate,r_init_no,id from BILL_REC_INITDETAILS
            where init_no = r_init_no;
        elsif t_count = 1 then
            update BILL_REC_ADJDETAILS set (INITITAL_AMOUNT,Confirm_amount2,ADJ_AMOUNT2) = (select tot_amount,Confirm_amount,adj_amount from BILL_REC_INITDETAILS where BILL_REC_ADJDETAILS.Init_Detail_Id = BILL_REC_INITDETAILS.ID);
        elsif t_count = 2 then
            update BILL_REC_ADJDETAILS set (INITITAL_AMOUNT,Confirm_amount3,ADJ_AMOUNT3) = (select tot_amount,Confirm_amount,adj_amount from BILL_REC_INITDETAILS where BILL_REC_ADJDETAILS.Init_Detail_Id = BILL_REC_INITDETAILS.ID);
        else
            output_result :='01最多只允许调整3次账单!';
            return;
        end if;
        update bill_rec_initial set HOLD_FLAG = 'Y' where INIT_NO = r_init_no;
    end loop;
    commit;
    EXCEPTION
       WHEN OTHERS THEN
           rollback;
           output_result := '01' || sqlerrm;
     return;
end;
/

CREATE OR REPLACE VIEW V_REC_INVOICEINFO AS
SELECT b.act_amount,b.addtime,b.addwho,b.amount,b.bank_account,b.bank_point,b.bill_to,b.edittime,
       b.editwho,b.fee_name,b.id,b.invoice_address,b.invoice_by,b.invoice_no,b.invoice_num,
       to_char(b.invoice_time,'yyyy/mm/dd HH:mm')as invoice_time,b.invoice_type,b.notes,b.rece_amount,b.rece_by,
       to_char(b.rece_time,'yyyy/mm/dd HH:mm')as rece_time,b.tax_amount,b.tax_no,b.tax_ratio

FROM
    BILL_REC_INVOICEINFO b;
    
create or replace procedure SP_SHPM_CANCELRECLAIM(
in_shpm_no LST,                  --托运单号
in_user_id VARCHAR2,           --用户ID
output_result OUT VARCHAR2
)
IS
/*in_odr_no LST := LST();*/
t_all_shpm_no varchar(400);
t_count number(8);
t_sql varchar(1024);
op_shpm_no varchar2(100);
op_odr_no varchar(50);
op_status varchar(32);
op_status_name varchar(50);
op_load_no varchar2(100);
op_account_stat varchar2(100);
tmp_shpm_no varchar(400);  --yuanlei 2012-09-13 增加临时参数
BEGIN
    output_result := '00';
    /*in_odr_no.extend;
    in_odr_no(1) := 'YH1101069559';*/
    for   i   in   1..in_shpm_no.count   loop
        op_shpm_no := in_shpm_no(i);
        t_all_shpm_no := t_all_shpm_no || ',''' || op_shpm_no || '''';
        select odr_no,load_no into op_odr_no,op_load_no from TRANS_SHIPMENT_HEADER where shpm_no = op_shpm_no;
        select account_stat into op_account_stat from trans_load_header where load_no = op_load_no;
        if op_account_stat is not null and op_account_stat = '20' then
            output_result := '01调度单[' || op_load_no || ']已对账,无法取消回单';
            rollback;
            return; 
        end if;
        --清除托运单的实际回单时间、回单延迟原因，实际到货时间、到货延迟原因，货损货差标记，状态
        update TRANS_SHIPMENT_HEADER SET STATUS = RDPG_STAT.SHPM_UNLOAD,STATUS_NAME = RDPG_STAT.SHPM_UNLOAD_NAME ,POD_TIME = null, POD_DELAY_REASON = null,OP_POD_TIME = null,POD_DELAY_DAYS = null
          WHERE shpm_no = in_shpm_no(i);
        update TRANS_BILL_DETAIL SET STATUS = RDPG_STAT.SHPM_UNLOAD WHERE DOC_NO = in_shpm_no(i);
        --清除收货数量、毛重、体积、净重、货值
        --update TRANS_ORDER_ITEM SET UNLD_QNTY = null,UNLD_VOL = null,UNLD_GWGT = null,UNLD_NWGT = null,UNLD_WORTH = null
        --  where odr_no = in_odr_no(i);
        --删除货差货损记录
        delete from TRANS_LOSS_DAMAGE where SHPM_NO = in_shpm_no(i);
        --插入业务日志
        insert into TRANS_TRANSACTION_LOG(id,ACTION_TYP,DOC_TYP,DOC_NO,NOTES,ADDTIME,ADDWHO)
            values(sys_guid(),RDPG_STAT.RECLAIM,RDPG_STAT.SHPM_NO,in_shpm_no(i),'',sysdate,in_user_id);
        delete from sf_status_log where status = '090' and shpm_no = op_odr_no;
        --yuanlei 2012-09-13 解决批量取消回单的BUG
        /*t_all_shpm_no :=  substr(t_all_shpm_no,2,length(t_all_shpm_no) - 1);
        --判断作业单所在原始托运单的其他子作业单状态
        t_sql := 'SELECT COUNT(1) FROM TRANS_SHIPMENT_HEADER WHERE odr_no = '''||op_odr_no||''' AND status>= ' || RDPG_STAT.SHPM_RECEIPT || '
              AND SHPM_NO not in (' || t_all_shpm_no || ')';
        */
        tmp_shpm_no :=  substr(t_all_shpm_no,2,length(t_all_shpm_no) - 1);
        --判断作业单所在原始托运单的其他子作业单状态
        t_sql := 'SELECT COUNT(1) FROM TRANS_SHIPMENT_HEADER WHERE odr_no = '''||op_odr_no||''' AND status>= ' || RDPG_STAT.SHPM_RECEIPT || '
              AND SHPM_NO not in (' || tmp_shpm_no || ')';
        --yuanlei
        execute   immediate t_sql into t_count;
        if t_count > 0 then
            op_status := RDPG_STAT.SO_PART_RECEIPT;
            op_status_name := RDPG_STAT.SO_PART_RECEIPT_NAME;
        else
            op_status := RDPG_STAT.SO_CONFIRM;
            op_status_name := RDPG_STAT.SO_CONFIRM_NAME;
        end if;
        update TRANS_ORDER_HEADER SET status = op_status,status_name = op_status_name,OP_POD_TIME = null,POD_TIME = null,POD_DELAY_REASON = null,POD_SIGNATARY = null,POD_ORG_ID = null WHERE ODR_NO = op_odr_no;
    end loop;
    commit;
    EXCEPTION
    WHEN OTHERS THEN
         rollback;
         output_result:='01'||sqlerrm;
    return;
END;
/

--caijiante  2017-05-11
--SYS_FUNC_PAGE加一条记录
962?	22963	P06_T032_P1_04	P06_T032_P1	保存	150	Y	2015/5/27	wpsadmin	保存	T	


--yuanlei 2017-05-12
alter table trans_load_header modify(seal_no varchar2(1000));


--caijiante  2017-05-12
--SYS_FUNC_PAGE加一条记录
963?	22964	P02_B09_P0_08	P02_B09_P0	导出	150	Y	2015/5/27	wpsadmin	导出	T	

--yuanlei 2017-05-15
create or replace procedure SP_IMPORT_ORDER(
IN_TMPID varchar2,
IN_USERID varchar2,
IN_LANGUAGE VARCHAR2,
OUTPUT_RESULLT in out varchar2)
IS

t_cur_column varchar2(100);
t_cur_value varchar2(500);
t_verify_type number(4);
t_table_name varchar2(100);
t_verify_code varchar2(100);

v_sql varchar2(2048);
temp_sql varchar2(1024);
temp_result varchar2(500);
tmp_verify_code varchar2(100);

r_REFENENCE1 varchar2(100);
r_CUSTOM_ODR_NO varchar2(100);
r_CUSTOMER_NAME varchar2(100);
r_BIZ_TYP varchar2(100);
r_ODR_TYP varchar2(100);
r_ODR_TIME varchar2(100);
r_VEHICLE_TYP varchar2(100);
r_TEMPERATURE1 varchar2(100);
r_TEMPERATURE2 varchar2(100);
r_PRE_LOAD_TIME varchar2(100);
r_PRE_UNLOAD_TIME varchar2(100);
r_SLF_PICKUP_FLAG varchar2(10);
r_SLF_DELIVER_FLAG varchar2(10);
r_NOTES varchar2(500);
r_LOAD_CODE varchar2(100);
r_LOAD_AREA_NAME varchar2(100);
r_LOAD_AREA_NAME2 varchar2(100);
r_LOAD_AREA_NAME3 varchar2(100);
r_LOAD_ADDRESS varchar2(300);
r_LOAD_CONTACT varchar2(100);
r_LOAD_TEL varchar2(100);
r_UNLOAD_CODE varchar2(100);
r_UNLOAD_AREA_NAME varchar2(100);
r_UNLOAD_AREA_NAME2 varchar2(100);
r_UNLOAD_AREA_NAME3 varchar2(100);
r_UNLOAD_ADDRESS varchar2(300);
r_UNLOAD_CONTACT varchar2(100);
r_UNLOAD_TEL varchar2(100);
r_SKU varchar2(100);
r_SKU_NAME varchar2(200);
r_UOM varchar2(100);
r_QNTY varchar2(100);
r_TEMPERATURE varchar2(100);
r_G_WGT varchar2(100);
r_VOL varchar2(100);
r_LINE number(4);
r_USERID varchar2(30);
r_BTCH_NUM VARCHAR2(50);

type   cur_t   is   ref   cursor;
      C_ACT   cur_t;

TYPE array_var IS VARRAY(37) OF nvarchar2(10000);

tmp_key array_var;
tmp_value array_var;

tmp_table varchar2(255);
tmp_column varchar2(255);
tmp_param_type NUMBER;
tmp_replace_field varchar2(100);
tmp_default_value varchar2(255);

exec_sql varchar2(4096);
exec_value varchar2(4096);

r_count number(4);
pos number(4);

load_code varchar2(100);
unload_code varchar2(100);

op_customer_id varchar2(32);
op_customer_name VARCHAR2(50);
op_load_area_name varchar2(50);
op_load_area_name2 varchar2(50);
op_load_area_name3 varchar2(50);
op_unload_area_name varchar2(50);
op_unload_area_name2 varchar2(50);
op_unload_area_name3 varchar2(50);
op_load_address varchar2(300);
op_load_contact varchar2(40);
op_load_tel varchar2(80);
op_unload_address varchar2(300);
op_unload_contact varchar2(40);
op_unload_tel varchar2(80);
op_load_area_id varchar2(32);
op_load_area_id2 varchar2(32);
op_load_area_id3 varchar2(32);
op_load_name varchar2(100);
op_unload_area_id varchar2(32);
op_unload_area_id2 varchar2(32);
op_unload_area_id3 varchar2(32);
op_unload_name varchar2(100);
op_exec_org_id varchar2(32);
op_id varchar2(32);
op_odr_no varchar2(100);
op_odr_row number(4);
op_skuname varchar2(100);
op_packid varchar2(32);

odr_lst LST := LST();

tmp_unload_address varchar2(300);
tmp_unload_contact varchar2(40);
tmp_unload_tel varchar2(40);
tmp_load_address  varchar2(300);
tmp_load_contact varchar2(40);
tmp_load_tel varchar2(80);


CURSOR verify is
      select verify_type,table_name,verify_code from t_input_excel_verify where type_name = 'TMP_ORDER_IMPORT' and COLUMN_NAME = t_cur_column;
CURSOR head is
      select column_name,default_value,param_type,replace_field,table_name from t_input_excel_default where table_name = 'TRANS_ORDER_HEADER' order by exec_seq asc;
CURSOR item is
      select column_name,default_value,param_type,replace_field,table_name from t_input_excel_default where table_name = 'TRANS_ORDER_ITEM' order by exec_seq asc;
--IN_TMPID varchar2(32);
BEGIN
  --IN_TMPID := '1489116521217';
  OUTPUT_RESULLT := '';
  --return;
  tmp_key := array_var('REFENENCE1','CUSTOM_ODR_NO','CUSTOMER_NAME','BIZ_TYP','ODR_TYP','ODR_TIME','VEHICLE_TYP','TEMPERATURE1','TEMPERATURE2','SLF_PICKUP_FLAG'
  ,'SLF_DELIVER_FLAG','NOTES','REQ_LOAD_TIME','REQ_UNLOAD_TIME','LOAD_CODE','LOAD_AREA_NAME','LOAD_AREA_NAME2','LOAD_AREA_NAME3','LOAD_ADDRESS','LOAD_CONTACT'
  ,'LOAD_TEL','UNLOAD_CODE','UNLOAD_AREA_NAME','UNLOAD_AREA_NAME2','UNLOAD_AREA_NAME3','UNLOAD_ADDRESS','UNLOAD_CONTACT','UNLOAD_TEL','SKU','SKU_NAME','UOM'
  ,'QNTY','TEMPERATURE','G_WGT','VOL','BTCH_NUM','USER_ID');
  v_sql := '';
  r_LINE := 1;
  pos := 1;
  for i in 1..tmp_key.count loop
      t_cur_column := tmp_key(i);
      v_sql := v_sql|| t_cur_column || ',';
  end loop;
  v_sql := 'SELECT ' || v_sql || 'LINENO FROM TMP_ORDER_IMPORT WHERE TMPID = ''' || IN_TMPID || ''' AND USER_ID = ''' || IN_USERID || ''' ORDER BY LINENO ASC';
  --校验字段
  Open  C_ACT   for   v_sql ;
  loop
      fetch C_ACT into r_REFENENCE1,r_CUSTOM_ODR_NO,r_CUSTOMER_NAME,r_BIZ_TYP,r_ODR_TYP
       ,r_ODR_TIME,r_VEHICLE_TYP,r_TEMPERATURE1,r_TEMPERATURE2,r_SLF_PICKUP_FLAG,r_SLF_DELIVER_FLAG
       ,r_NOTES,r_PRE_LOAD_TIME,r_PRE_UNLOAD_TIME,r_LOAD_CODE
       ,r_LOAD_AREA_NAME,r_LOAD_AREA_NAME2,r_LOAD_AREA_NAME3,r_LOAD_ADDRESS,r_LOAD_CONTACT
       ,r_LOAD_TEL,r_UNLOAD_CODE,r_UNLOAD_AREA_NAME,r_UNLOAD_AREA_NAME2,r_UNLOAD_AREA_NAME3
       ,r_UNLOAD_ADDRESS,r_UNLOAD_CONTACT,r_UNLOAD_TEL,r_SKU,r_SKU_NAME
       ,r_UOM,r_QNTY,r_TEMPERATURE,r_G_WGT,r_VOL,r_BTCH_NUM,r_USERID,r_LINE;            --V418A
      exit when C_ACT%notfound;

      tmp_value := array_var(r_REFENENCE1,r_CUSTOM_ODR_NO,r_CUSTOMER_NAME,r_BIZ_TYP,r_ODR_TYP
       ,r_ODR_TIME,r_VEHICLE_TYP,r_TEMPERATURE1,r_TEMPERATURE2,r_SLF_PICKUP_FLAG,r_SLF_DELIVER_FLAG
       ,r_NOTES,r_PRE_LOAD_TIME,r_PRE_UNLOAD_TIME,r_LOAD_CODE
       ,r_LOAD_AREA_NAME,r_LOAD_AREA_NAME2,r_LOAD_AREA_NAME3,r_LOAD_ADDRESS,r_LOAD_CONTACT
       ,r_LOAD_TEL,r_UNLOAD_CODE,r_UNLOAD_AREA_NAME,r_UNLOAD_AREA_NAME2,r_UNLOAD_AREA_NAME3
       ,r_UNLOAD_ADDRESS,r_UNLOAD_CONTACT,r_UNLOAD_TEL,r_SKU,r_SKU_NAME
       ,r_UOM,r_QNTY,r_TEMPERATURE,r_G_WGT,r_VOL,r_BTCH_NUM,r_USERID);

      if r_CUSTOMER_NAME is null then  --当客户单号为空时，可认为与上一行信息相同，直接跳到明细列进行校验。
          pos := 15;
      end if;

      for i in pos..tmp_key.count loop
           t_cur_column := tmp_key(i);
           t_cur_value := tmp_value(i);
           for m in verify loop
               t_verify_type := m.verify_type;
               t_table_name := m.table_name;
               t_verify_code := m.verify_code;

               if t_verify_type = 0 then  --非空检验
                   if t_cur_value is null or length(t_cur_value) < 1 then
                       OUTPUT_RESULLT := OUTPUT_RESULLT || '第'|| r_LINE ||'行字段['|| t_cur_column ||']不能为空<br />';
                       if length(OUTPUT_RESULLT) > 1000 then
                           OUTPUT_RESULLT:='01'||OUTPUT_RESULLT;
                           return;
                       end if;
                   end if;
               elsif t_verify_type = 1 and length(t_cur_value) > 0 then --唯一性校验
                   temp_sql := 'select count(1) from ' || t_table_name || ' where ' || t_cur_column || '=''' || t_cur_value || '''';
                   execute immediate temp_sql into r_count;
                   if r_count > 0 then
                        OUTPUT_RESULLT := OUTPUT_RESULLT || '第'|| r_LINE ||'行['|| t_cur_column ||']列不是唯一<br />';
                        if length(OUTPUT_RESULLT) > 1000 then
                           OUTPUT_RESULLT:='01'||OUTPUT_RESULLT;
                           return;
                        end if;
                   else
                      temp_sql := 'select count(1) from TMP_ORDER_IMPORT where TMPID = ''' || IN_TMPID || ''' AND USER_ID = '''
                        || IN_USERID || ''' and ' || t_cur_column || '= ''' || t_cur_value || '''';
                      execute immediate temp_sql into r_count;
                      if r_count > 1 then
                          OUTPUT_RESULLT := OUTPUT_RESULLT || '第'|| r_LINE ||'行['|| t_cur_column ||']列不是唯一<br />';
                          if length(OUTPUT_RESULLT) > 1000 then
                               OUTPUT_RESULLT:='01'||OUTPUT_RESULLT;
                               return;
                           end if;
                      end if;
                   end if;
               elsif t_verify_type = 2 and length(t_verify_code) > 0 and length(t_cur_value) > 0 then
                   temp_sql := REPLACE(t_verify_code, '?', t_cur_value);
                   execute immediate temp_sql into r_count;
                   if r_count = 0 then
                       OUTPUT_RESULLT := OUTPUT_RESULLT || '第'|| r_LINE ||'行['|| t_cur_column ||']列值为[' || t_cur_value || '],数值不合法<br />';
                       if length(OUTPUT_RESULLT) > 1000 then
                           OUTPUT_RESULLT:='01'||OUTPUT_RESULLT;
                           return;
                       end if;
                   else
                      if t_cur_column = 'SKU' then  --如果是只填写SKU，则将SKU对应的名称写到临时表，避免校验SKU_NAME时因为无值不通过
                          select sku_cname into op_skuname from BAS_SKU where sku = t_cur_value;
                          update TMP_ORDER_IMPORT set SKU_NAME = op_skuname
                            WHERE TMPID = IN_TMPID AND USER_ID = IN_USERID AND LINENO = r_LINE;
                          tmp_value(30) := op_skuname;
                      end if;
                   end if;
               elsif t_verify_type = 3 then   --二选一非空校验
                   if t_cur_value is null then
                       select verify_code into tmp_verify_code from t_input_excel_verify where column_name = t_verify_code and type_name = 'TMP_ORDER_IMPORT';
                       temp_sql := 'select ' || t_verify_code || ' from TMP_ORDER_IMPORT WHERE TMPID = ''' || IN_TMPID || ''' AND USER_ID = ''' || IN_USERID || ''' and LINENO = ''' || r_LINE || '''';
                       execute immediate temp_sql into temp_result;
                       temp_sql := REPLACE(tmp_verify_code, '?', temp_result);
                       execute immediate temp_sql into r_count;
                       if r_count = 0 then
                           OUTPUT_RESULLT := OUTPUT_RESULLT || '第'|| r_LINE ||'行'|| t_cur_column ||']值不合法<br />';
                           if length(OUTPUT_RESULLT) > 1000 then
                               OUTPUT_RESULLT:='01'||OUTPUT_RESULLT;
                               return;
                           end if;
                       end if;
                   end if;
               elsif t_verify_type = 4 and length(t_verify_code) > 0 and length(t_cur_value) > 0 then --长度校验
                   temp_sql := REPLACE(t_verify_code, '?', t_cur_value);
                   execute immediate temp_sql into r_count;
                   if r_count = 0 then
                       OUTPUT_RESULLT := OUTPUT_RESULLT || '第'|| r_LINE ||'行['|| t_cur_column ||']列内容超长!<br />';
                       if length(OUTPUT_RESULLT) > 1000 then
                           OUTPUT_RESULLT:='01'||OUTPUT_RESULLT;
                           return;
                       end if;
                   end if;
               end if;
           end loop;
      end loop;
      <<next_loop>>
          t_cur_column := '';
  end loop;
  close C_ACT;

  if length(OUTPUT_RESULLT) > 0 then
    OUTPUT_RESULLT:='01'||OUTPUT_RESULLT;
    rollback;
    -- 失败删除中间表
    delete from TMP_ORDER_IMPORT where TMPID = IN_TMPID;
    commit;
    return;
  end if;
  --插入数据
  Open  C_ACT   for   v_sql ;
  loop
      fetch C_ACT into r_REFENENCE1,r_CUSTOM_ODR_NO,r_CUSTOMER_NAME,r_BIZ_TYP,r_ODR_TYP
       ,r_ODR_TIME,r_VEHICLE_TYP,r_TEMPERATURE1,r_TEMPERATURE2,r_SLF_PICKUP_FLAG,r_SLF_DELIVER_FLAG
       ,r_NOTES,r_PRE_LOAD_TIME,r_PRE_UNLOAD_TIME,r_LOAD_CODE
       ,r_LOAD_AREA_NAME,r_LOAD_AREA_NAME2,r_LOAD_AREA_NAME3,r_LOAD_ADDRESS,r_LOAD_CONTACT
       ,r_LOAD_TEL,r_UNLOAD_CODE,r_UNLOAD_AREA_NAME,r_UNLOAD_AREA_NAME2,r_UNLOAD_AREA_NAME3
       ,r_UNLOAD_ADDRESS,r_UNLOAD_CONTACT,r_UNLOAD_TEL,r_SKU,r_SKU_NAME
       ,r_UOM,r_QNTY,r_TEMPERATURE,r_G_WGT,r_VOL,r_BTCH_NUM,r_USERID,r_LINE;            --V418A
      exit when C_ACT%notfound;

      tmp_value := array_var(r_REFENENCE1,r_CUSTOM_ODR_NO,r_CUSTOMER_NAME,r_BIZ_TYP,r_ODR_TYP
       ,r_ODR_TIME,r_VEHICLE_TYP,r_TEMPERATURE1,r_TEMPERATURE2,r_SLF_PICKUP_FLAG,r_SLF_DELIVER_FLAG
       ,r_NOTES,r_PRE_LOAD_TIME,r_PRE_UNLOAD_TIME,r_LOAD_CODE
       ,r_LOAD_AREA_NAME,r_LOAD_AREA_NAME2,r_LOAD_AREA_NAME3,r_LOAD_ADDRESS,r_LOAD_CONTACT
       ,r_LOAD_TEL,r_UNLOAD_CODE,r_UNLOAD_AREA_NAME,r_UNLOAD_AREA_NAME2,r_UNLOAD_AREA_NAME3
       ,r_UNLOAD_ADDRESS,r_UNLOAD_CONTACT,r_UNLOAD_TEL,r_SKU,r_SKU_NAME
       ,r_UOM,r_QNTY,r_TEMPERATURE,r_G_WGT,r_VOL,r_BTCH_NUM,r_USERID);

      exec_sql := '';
      exec_value := '';
      if r_CUSTOMER_NAME is not null then
          for h in head loop
              tmp_table := h.table_name;
              tmp_column := h.column_name;
              tmp_param_type := h.param_type;
              tmp_replace_field := h.replace_field;
              tmp_default_value := h.default_value;
              exec_sql := exec_sql || ',' || h.column_name;
              if h.param_type = '0' then  --定制
                  exec_value := exec_value || ',' || h.default_value;
              elsif h.param_type = '1' then  --从执行结果取值
                  temp_sql := h.default_value;
                  execute immediate temp_sql into temp_result;
                  exec_value := exec_value || ',''' || temp_result || '''';
              elsif h.param_type = '2' then   --将？替换成参数值，并从结果取值
                  for i in 1..tmp_key.count loop
                      t_cur_column := tmp_key(i);
                      if t_cur_column = h.Replace_Field then
                          t_cur_value := tmp_value(i);
                          exit;
                      end if;
                  end loop;
                  if t_cur_value is not null then
                      temp_sql := REPLACE(h.default_value, '?', t_cur_value);
                      execute immediate temp_sql into temp_result;
                      exec_value := exec_value || ',''' || temp_result || '''';
                  else
                      exec_value := exec_value || ',NULL';
                  end if;
                  if  h.column_name = 'CUSTOMER_ID' then
                      op_customer_id := temp_result;
                  elsif h.column_name = 'CUSTOMER_NAME' then
                      op_customer_name := temp_result;
                  end if;
              elsif h.param_type = '3' then  --直接从临时表上取值
                  for i in 1..tmp_key.count loop
                      t_cur_column := tmp_key(i);
                      if t_cur_column = h.column_name then
                          t_cur_value := tmp_value(i);
                          exit;
                      end if;
                  end loop;
                  if t_cur_value is null and h.column_name = 'CUSTOMER_NAME' then
                     goto next_loop;
                  end if;
                  if t_cur_value is null then
                      exec_value := exec_value || ',NULL';
                  else
                      exec_value := exec_value || ',''' || t_cur_value || '''';
                  end if;
             end if;
          end loop;
      end if;
      <<next_loop>>
          OUTPUT_RESULLT := '';
      if length(exec_value) > 1 then
          --获取托运单号
          SP_GET_IDSEQ('ORDER',op_odr_no);

          exec_sql := 'INSERT INTO TRANS_ORDER_HEADER(ODR_NO,ADDWHO,ADDTIME' || exec_sql || ') VALUES(''' || op_odr_no || ''',''' || IN_USERID || ''',sysdate' || exec_value || ')';
          execute immediate exec_sql;

          odr_lst.extend();
          odr_lst(odr_lst.count) := op_odr_no;
      end if;
      exec_sql := '';
      exec_value := '';
      op_packid := '2EEB495B515049B3A9CD76572DDDC999';
      for h in item loop
          tmp_table := h.table_name;
          tmp_column := h.column_name;
          tmp_param_type := h.param_type;
          tmp_replace_field := h.replace_field;
          tmp_default_value := h.default_value;
          if h.param_type = '0' then  --定制
              exec_sql := exec_sql || ',' || h.column_name;
              exec_value := exec_value || ',' || h.default_value;
          elsif h.param_type = '1' then  --从执行结果取值
              exec_sql := exec_sql || ',' || h.column_name;
              temp_sql := h.default_value;
              execute immediate temp_sql into temp_result;
              exec_value := exec_value || ',''' || temp_result || '''';
          elsif h.param_type = '2' then   --将？替换成参数值，并从结果取值
              exec_sql := exec_sql || ',' || h.column_name;
              for i in 1..tmp_key.count loop
                  t_cur_column := tmp_key(i);
                  if t_cur_column = h.replace_field then
                      t_cur_value := tmp_value(i);
                      exit;
                  end if;
              end loop;
              if t_cur_value is not null then
                  temp_sql := REPLACE(h.default_value, '?', t_cur_value);
                  execute immediate temp_sql into temp_result;
                  exec_value := exec_value || ',''' || temp_result || '''';
              else
                  exec_value := exec_value || ',NULL';
              end if;
          elsif h.param_type = '3' then  --直接从临时表上取值
              for i in 1..tmp_key.count loop
                  t_cur_column := tmp_key(i);
                  if t_cur_column = h.column_name then
                      t_cur_value := tmp_value(i);
                      exit;
                  end if;
              end loop;
              if h.column_name = 'LOAD_CODE' then
                  load_code := t_cur_value;
                  if load_code is not null then
                      exec_sql := exec_sql || ',' || h.column_name;
                      exec_value := exec_value || ',''' || t_cur_value || '''';
                  end if;
              elsif h.column_name = 'UNLOAD_CODE' then
                  unload_code := t_cur_value;
                  if unload_code is not null then
                      exec_sql := exec_sql || ',' || h.column_name;
                      exec_value := exec_value || ',''' || t_cur_value || '''';
                  end if;
              elsif h.column_name = 'UNLOAD_AREA_NAME' then
                  op_unload_area_name := t_cur_value;
                  if op_unload_area_name is not null then
                      exec_sql := exec_sql || ',' || h.column_name;
                      exec_value := exec_value || ',''' || t_cur_value || '''';
                  end if;
              elsif h.column_name = 'UNLOAD_AREA_NAME2' then
                  op_unload_area_name2 := t_cur_value;
                  if op_unload_area_name2 is not null then
                      exec_sql := exec_sql || ',' || h.column_name;
                      exec_value := exec_value || ',''' || t_cur_value  || '''';
                  end if;
              elsif h.column_name = 'UNLOAD_AREA_NAME3' then
                  op_unload_area_name3 := t_cur_value;
                  if op_unload_area_name3 is not null then
                      exec_sql := exec_sql || ',' || h.column_name;
                      exec_value := exec_value || ',''' || t_cur_value || '''';
                  end if;
              elsif h.column_name = 'UNLOAD_ADDRESS' then
                  op_unload_address := t_cur_value;
                  if op_unload_address is not null then
                      exec_sql := exec_sql || ',' || h.column_name;
                      exec_value := exec_value || ',''' || t_cur_value || '''';
                  end if;
              elsif h.column_name = 'UNLOAD_CONTACT' then
                  op_unload_contact := t_cur_value;
                  if op_unload_contact is not null then
                      exec_sql := exec_sql || ',' || h.column_name;
                      exec_value := exec_value || ',''' || t_cur_value || '''';
                  end if;
              elsif h.column_name = 'UNLOAD_TEL' then
                  op_unload_tel := t_cur_value;
                  if op_unload_tel is not null then
                      exec_sql := exec_sql || ',' || h.column_name;
                      exec_value := exec_value || ',''' || t_cur_value || '''';
                  end if;
              elsif h.column_name = 'LOAD_AREA_NAME' then
                  op_load_area_name := t_cur_value;
                  if op_load_area_name is not null then
                      exec_sql := exec_sql || ',' || h.column_name;
                      exec_value := exec_value || ',''' || t_cur_value || '''';
                  end if;
              elsif h.column_name = 'LOAD_AREA_NAME2' then
                  op_load_area_name2 := t_cur_value;
                  if op_load_area_name2 is not null then
                      exec_sql := exec_sql || ',' || h.column_name;
                      exec_value := exec_value || ',''' || t_cur_value || '''';
                  end if;
              elsif h.column_name = 'LOAD_AREA_NAME3' then
                  op_load_area_name3 := t_cur_value;
                  if op_load_area_name3 is not null then
                      exec_sql := exec_sql || ',' || h.column_name;
                      exec_value := exec_value || ',''' || t_cur_value || '''';
                  end if;
              elsif h.column_name = 'LOAD_ADDRESS' then
                  op_load_address := t_cur_value;
                  if op_load_address is not null then
                      exec_sql := exec_sql || ',' || h.column_name;
                      exec_value := exec_value || ',''' || t_cur_value || '''';
                  end if;
              elsif h.column_name = 'LOAD_CONTACT' then
                  op_load_contact := t_cur_value;
                  if op_load_contact is not null then
                      exec_sql := exec_sql || ',' || h.column_name;
                      exec_value := exec_value || ',''' || t_cur_value || '''';
                  end if;
              elsif h.column_name = 'LOAD_TEL' then
                  op_load_tel := t_cur_value;
                  if op_load_tel is not null then
                      exec_sql := exec_sql || ',' || h.column_name;
                      exec_value := exec_value || ',''' || t_cur_value || '''';
                  end if;
              elsif h.column_name = 'SKU' then
                  if t_cur_value is not null then
                      select id into op_packid from bas_sku where sku = t_cur_value;
                  end if;
                  exec_sql := exec_sql || ',' || h.column_name;
                  exec_value := exec_value || ',''' || t_cur_value || '''';
              else
                  exec_sql := exec_sql || ',' || h.column_name;
                  exec_value := exec_value || ',''' || t_cur_value || '''';
              end if;
         elsif h.param_type = '4' then --发货地址特殊处理
              if load_code is null then  --先自动录入地址信息再处理
                  select F_GET_DEFAULT_ORGBYUSER(IN_USERID, 0) into op_exec_org_id from dual;
                  select sys_guid() into op_id from dual;
                  select area_code into op_load_area_id from bas_area where area_cname=op_load_area_name and area_level=3 and rownum=1;
                  select area_code into op_load_area_id2 from bas_area where area_cname=op_load_area_name2 and area_level=4 and rownum=1;
                  load_code := substr(F_ZJM(op_load_address),0,32);
                  op_load_name := substr(op_load_address,0,100);
                  if op_load_area_name3 is not null then
                      select area_code into op_load_area_id3 from bas_area where area_cname=op_load_area_name3 and area_level=5 and rownum=1;
                  end if;

                  select count(1) into r_count from bas_address where customer_id = op_customer_id and addr_code = load_code;
                  if r_count > 0 then
                      select id,addr_name,area_id,area_id2,area_id3 into op_id,op_load_name,op_load_area_id,op_load_area_id2,op_load_area_id3
                        from bas_address where customer_id = op_customer_id and addr_code = load_code;
                  else
                      --插入地址
                      insert into bas_address(id,addr_code,customer_id,customer_name,load_flag,transfer_flag,recv_flag,area_id,area_name,addr_name,address,
                        cont_name,cont_tel,addr_typ,create_org_id,exec_org_id,enable_flag,addtime,addwho,area_id2,area_name2,area_id3,area_name3)
                      values(op_id,load_code,op_customer_id,op_customer_name,'Y','N','N',op_load_area_id,op_load_area_name,op_load_name,op_load_address,
                        op_load_contact,op_load_tel,'9E0057747CC24A4BB998749752D2C42E',op_exec_org_id,op_exec_org_id,'Y',sysdate,IN_USERID,op_load_area_id2,op_load_area_name2,op_load_area_id3,op_load_area_name3);
                  end if;
                  --exec_value := exec_value || ',''' || op_id || '''';

                  exec_sql := exec_sql || ',LOAD_ID,LOAD_CODE,LOAD_NAME,LOAD_AREA_ID,LOAD_AREA_ID2,LOAD_AREA_ID3';
                  exec_value := exec_value || ',''' || op_id || ''',''' || load_code || ''',''' || op_load_name || ''',''' || op_load_area_id || ''','''
                     || op_load_area_id2 || ''',''' || op_load_area_id3 || '''';
              else
                  select count(1) into r_count from bas_address where addr_code = load_code;
                  if r_count > 1 then
                      select count(1) into r_count from bas_address where customer_id = op_customer_id and addr_code = load_code;
                      if r_count > 1 or r_count = 0 then
                          OUTPUT_RESULLT := OUTPUT_RESULLT || '第'|| r_LINE ||'行收货方代码['|| unload_code ||']重复<br />';
                          for h in 1..odr_lst.count loop
                              op_odr_no := odr_lst(h);
                              delete from trans_order_header where odr_no = op_odr_no;
                              delete from trans_order_item where odr_no = op_odr_no;
                          end loop;
                          commit;
                          return;
                      else
                          select id,addr_name,area_id,area_name,area_id2,area_name2,area_id3,area_name3,cont_name,cont_tel,address
                          into op_id,op_load_name,op_load_area_id,op_load_area_name,op_load_area_id2,op_load_area_name2,op_load_area_id3,op_load_area_name3,tmp_load_contact,tmp_load_tel,tmp_load_address
                          from bas_address where customer_id = op_customer_id and addr_code = load_code; 
                      end if;
                  else
                      select id,addr_name,area_id,area_name,area_id2,area_name2,area_id3,area_name3,cont_name,cont_tel,address
                      into op_id,op_load_name,op_load_area_id,op_load_area_name,op_load_area_id2,op_load_area_name2,op_load_area_id3,op_load_area_name3,tmp_load_contact,tmp_load_tel,tmp_load_address
                      from bas_address where addr_code = load_code;
                  end if;

                  exec_sql := exec_sql || ',LOAD_ID,LOAD_NAME,LOAD_AREA_ID,LOAD_AREA_NAME,LOAD_AREA_ID2,LOAD_AREA_NAME2,LOAD_AREA_ID3,LOAD_AREA_NAME3';
                  exec_value := exec_value || ',''' || op_id || ''',''' || op_load_name || ''',''' || op_load_area_id || ''',''' || op_load_area_name ||''','''
                     || op_load_area_id2 || ''',''' || op_load_area_name2 ||''',''' || op_load_area_id3 || ''',''' || op_load_area_name3 || '''';
                  if op_load_address is null then
                      exec_sql := exec_sql || ',LOAD_ADDRESS';
                      exec_value := exec_value || ',''' || tmp_load_address || '''';
                  end if;
                  if op_load_contact is null then
                      exec_sql := exec_sql || ',LOAD_CONTACT';
                      exec_value := exec_value || ',''' || tmp_load_contact || '''';
                  end if;
                  if op_load_tel is null then
                      exec_sql := exec_sql || ',LOAD_TEL';
                      exec_value := exec_value || ',''' || tmp_load_tel || '''';
                  end if;
              end if;
              --exec_value := exec_value || ',' || t_cur_value;
         elsif h.param_type = '5' then --收货地址特殊处理
              if unload_code is null then  --先自动录入地址信息再处理
                  select F_GET_DEFAULT_ORGBYUSER(IN_USERID, 0) into op_exec_org_id from dual;
                  select sys_guid() into op_id from dual;
                  select area_code into op_unload_area_id from bas_area where area_cname=op_unload_area_name and area_level=3 and rownum=1;
                  select area_code into op_unload_area_id2 from bas_area where area_cname=op_unload_area_name2 and area_level=4 and rownum=1;
                  unload_code := substr(F_ZJM(op_unload_address),0,32);
                  op_unload_name := substr(op_unload_address,0,100);
                  if op_unload_area_name3 is not null then
                      select area_code into op_unload_area_id3 from bas_area where area_cname=op_unload_area_name3 and area_level=5 and rownum=1;
                  end if;

                  select count(1) into r_count from bas_address where customer_id = op_customer_id and addr_code = unload_code;
                  if r_count > 0 then
                      select id,addr_name,area_id,area_id2,area_id3 into op_id,op_unload_name,op_unload_area_id,op_unload_area_id2,op_unload_area_id3
                      from bas_address where addr_code = unload_code and customer_id = op_customer_id;
                  else
                      --插入地址
                      insert into bas_address(id,addr_code,customer_id,customer_name,load_flag,transfer_flag,recv_flag,area_id,area_name,addr_name,address,
                        cont_name,cont_tel,addr_typ,create_org_id,exec_org_id,enable_flag,addtime,addwho,area_id2,area_name2,area_id3,area_name3)
                      values(op_id,unload_code,op_customer_id,op_customer_name,'N','N','Y',op_unload_area_id,op_unload_area_name,op_unload_name,op_unload_address,
                        op_unload_contact,op_unload_tel,'9E0057747CC24A4BB998749752D2C42E',op_exec_org_id,op_exec_org_id,'Y',sysdate,IN_USERID,op_unload_area_id2,op_unload_area_name2,op_unload_area_id3,op_unload_area_name3);
                  end if;
                  --exec_value := exec_value || ',''' || op_id || '''';

                  exec_sql := exec_sql || ',UNLOAD_ID,UNLOAD_CODE,UNLOAD_NAME,UNLOAD_AREA_ID,UNLOAD_AREA_ID2,UNLOAD_AREA_ID3';
                  exec_value := exec_value || ',''' || op_id || ''',''' || unload_code || ''',''' || op_unload_name || ''',''' || op_unload_area_id || ''','''
                     || op_unload_area_id2 || ''',''' || op_unload_area_id3 || '''';
              else
                  select count(1) into r_count from bas_address where addr_code = unload_code;
                  if r_count > 1 then
                      select count(1) into r_count from bas_address where customer_id = op_customer_id and addr_code = unload_code;
                      if r_count > 1 or r_count = 0 then
                          OUTPUT_RESULLT := OUTPUT_RESULLT || '第'|| r_LINE ||'行收货方代码['|| unload_code ||']重复<br />';
                          for h in 1..odr_lst.count loop
                              op_odr_no := odr_lst(h);
                              delete from trans_order_header where odr_no = op_odr_no;
                              delete from trans_order_item where odr_no = op_odr_no;
                          end loop;
                          commit;
                          return;
                      else
                          select id,addr_name,area_id,area_name,area_id2,area_name2,area_id3,area_name3,address,cont_name,cont_tel
                          into op_id,op_unload_name,op_unload_area_id,op_unload_area_name,op_unload_area_id2,op_unload_area_name2,op_unload_area_id3,op_unload_area_name3,tmp_unload_address,tmp_unload_contact,tmp_unload_tel
                          from bas_address where customer_id = op_customer_id and addr_code = unload_code; 
                      end if;
                  else
                      select id,addr_name,area_id,area_name,area_id2,area_name2,area_id3,area_name3,address,cont_name,cont_tel
                      into op_id,op_unload_name,op_unload_area_id,op_unload_area_name,op_unload_area_id2,op_unload_area_name2,op_unload_area_id3,op_unload_area_name3,tmp_unload_address,tmp_unload_contact,tmp_unload_tel
                      from bas_address where addr_code = unload_code;
                  end if;
                  exec_sql := exec_sql || ',UNLOAD_ID,UNLOAD_NAME,UNLOAD_AREA_ID,UNLOAD_AREA_NAME,UNLOAD_AREA_ID2,UNLOAD_AREA_NAME2,UNLOAD_AREA_ID3,UNLOAD_AREA_NAME3';
                  exec_value := exec_value || ',''' || op_id || ''',''' || op_unload_name || ''',''' || op_unload_area_id || ''',''' || op_unload_area_name || ''','''
                     || op_unload_area_id2 || ''',''' || op_unload_area_name2 || ''',''' || op_unload_area_id3 || ''',''' || op_unload_area_name3 || '''';
                  if op_unload_address is null then
                      exec_sql := exec_sql || ',UNLOAD_ADDRESS';
                      exec_value := exec_value || ',''' || tmp_unload_address || '''';
                  end if;
                  if op_unload_contact is null then
                      exec_sql := exec_sql || ',UNLOAD_CONTACT';
                      exec_value := exec_value || ',''' || tmp_unload_contact || '''';
                  end if;
                  if op_unload_tel is null then
                      exec_sql := exec_sql || ',UNLOAD_TEL';
                      exec_value := exec_value || ',''' || tmp_unload_tel || '''';
                  end if;
              end if;
              --exec_value := exec_value || ',' || t_cur_value;
         end if;
         <<next_loop>>
             OUTPUT_RESULLT := '';
      end loop;
      select nvl(max(odr_row),0) + 1 into op_odr_row from trans_order_item where odr_no = op_odr_no;
      exec_sql := 'INSERT INTO TRANS_ORDER_ITEM(ODR_NO,ODR_ROW,ADDWHO,PACK_ID,ADDTIME' || exec_sql || ') VALUES(''' || op_odr_no || ''',' || op_odr_row || ',''' || IN_USERID || ''',''' || op_packid ||''',sysdate' || exec_value || ')';
      execute immediate exec_sql;
      
      ORDER_QTY_COUNT(op_odr_no, OUTPUT_RESULLT); --汇总订单信息
      --更新订单发货点和收货点信息
      UPDATE TRANS_ORDER_HEADER SET (LOAD_ID,LOAD_NAME,LOAD_AREA_ID,LOAD_AREA_NAME,LOAD_AREA_ID2,LOAD_AREA_NAME2,LOAD_AREA_ID3,LOAD_AREA_NAME3,LOAD_ADDRESS,LOAD_CONTACT,LOAD_TEL,LOAD_CODE)= ( select LOAD_ID,LOAD_NAME,LOAD_AREA_ID,LOAD_AREA_NAME,LOAD_AREA_ID2,LOAD_AREA_NAME2,LOAD_AREA_ID3,LOAD_AREA_NAME3,LOAD_ADDRESS,LOAD_CONTACT,LOAD_TEL,LOAD_CODE  from TRANS_ORDER_ITEM where TRANS_ORDER_HEADER.ODR_NO = TRANS_ORDER_ITEM.ODR_NO and TRANS_ORDER_ITEM.ODR_ROW = (select min(odr_row) from trans_order_item where ODR_NO = op_odr_no)) where TRANS_ORDER_HEADER.ODR_NO = op_odr_no;
      UPDATE TRANS_ORDER_HEADER SET (UNLOAD_ID,UNLOAD_NAME,UNLOAD_AREA_ID,UNLOAD_AREA_NAME,UNLOAD_AREA_ID2,UNLOAD_AREA_NAME2,UNLOAD_AREA_ID3,UNLOAD_AREA_NAME3,UNLOAD_ADDRESS,UNLOAD_CONTACT,UNLOAD_TEL,UNLOAD_CODE)= ( select UNLOAD_ID,UNLOAD_NAME,UNLOAD_AREA_ID,UNLOAD_AREA_NAME,UNLOAD_AREA_ID2,UNLOAD_AREA_NAME2,UNLOAD_AREA_ID3,UNLOAD_AREA_NAME3,UNLOAD_ADDRESS,UNLOAD_CONTACT,UNLOAD_TEL,UNLOAD_CODE  from TRANS_ORDER_ITEM where TRANS_ORDER_HEADER.ODR_NO = TRANS_ORDER_ITEM.ODR_NO and TRANS_ORDER_ITEM.ODR_ROW = (select max(odr_row) from trans_order_item where ODR_NO = op_odr_no)) where TRANS_ORDER_HEADER.ODR_NO = op_odr_no;
      
      OUTPUT_RESULLT := '00';
  end loop;
  close C_ACT;
  commit; 

  delete from TMP_ORDER_IMPORT WHERE TMPID = IN_TMPID;
  /*for h in 1..odr_lst.count loop
      op_odr_no := odr_lst(h);
      ORDER_QTY_COUNT(op_odr_no, OUTPUT_RESULLT); --汇总订单信息
      --更新订单发货点和收货点信息
      UPDATE TRANS_ORDER_HEADER SET (LOAD_ID,LOAD_NAME,LOAD_AREA_ID,LOAD_AREA_NAME,LOAD_AREA_ID2,LOAD_AREA_NAME2,LOAD_AREA_ID3,LOAD_AREA_NAME3,LOAD_ADDRESS,LOAD_CONTACT,LOAD_TEL,LOAD_CODE)= ( select LOAD_ID,LOAD_NAME,LOAD_AREA_ID,LOAD_AREA_NAME,LOAD_AREA_ID2,LOAD_AREA_NAME2,LOAD_AREA_ID3,LOAD_AREA_NAME3,LOAD_ADDRESS,LOAD_CONTACT,LOAD_TEL,LOAD_CODE  from TRANS_ORDER_ITEM where TRANS_ORDER_HEADER.ODR_NO = TRANS_ORDER_ITEM.ODR_NO and TRANS_ORDER_ITEM.ODR_ROW = (select min(odr_row) from trans_order_item where ODR_NO = op_odr_no)) where TRANS_ORDER_HEADER.ODR_NO = op_odr_no;
      UPDATE TRANS_ORDER_HEADER SET (UNLOAD_ID,UNLOAD_NAME,UNLOAD_AREA_ID,UNLOAD_AREA_NAME,UNLOAD_AREA_ID2,UNLOAD_AREA_NAME2,UNLOAD_AREA_ID3,UNLOAD_AREA_NAME3,UNLOAD_ADDRESS,UNLOAD_CONTACT,UNLOAD_TEL,UNLOAD_CODE)= ( select UNLOAD_ID,UNLOAD_NAME,UNLOAD_AREA_ID,UNLOAD_AREA_NAME,UNLOAD_AREA_ID2,UNLOAD_AREA_NAME2,UNLOAD_AREA_ID3,UNLOAD_AREA_NAME3,UNLOAD_ADDRESS,UNLOAD_CONTACT,UNLOAD_TEL,UNLOAD_CODE  from TRANS_ORDER_ITEM where TRANS_ORDER_HEADER.ODR_NO = TRANS_ORDER_ITEM.ODR_NO and TRANS_ORDER_ITEM.ODR_ROW = (select max(odr_row) from trans_order_item where ODR_NO = op_odr_no)) where TRANS_ORDER_HEADER.ODR_NO = op_odr_no;
  end loop;*/
  OUTPUT_RESULLT := '00';
  commit;
  EXCEPTION
    WHEN OTHERS THEN
        --OUTPUT_RESULLT :='01'||sqlerrm || ']';
        OUTPUT_RESULLT := '01' || OUTPUT_RESULLT || '第'|| r_LINE ||'行['|| t_cur_column ||']列异常,请联系管理员!<br />';
        rollback;
        
        insert into t_input_excel_temp(type_name,VALUE,line,column_name,column_cname,id,custom_odr_no) 
        values(tmp_param_type,tmp_default_value,r_LINE,tmp_column,substr(OUTPUT_RESULLT,0,199),to_char(sysdate,'YYYY-MM-DD HH24:MI'),tmp_table);
        
        delete from TMP_ORDER_IMPORT WHERE TMPID = IN_TMPID;
        for h in 1..odr_lst.count loop
            op_odr_no := odr_lst(h);
            delete from trans_order_header where odr_no = op_odr_no;
            delete from trans_order_item where odr_no = op_odr_no;
        end loop;
        commit;
        --RAISE_APPLICATION_ERROR(-20101, '执行全局校验时抛出异常: '||sqlerrm, TRUE);
END;
/

CREATE OR REPLACE FUNCTION IS_Number (
   str_    VARCHAR2 ) RETURN VARCHAR2
IS
   num_    NUMBER;
BEGIN
  num_ := to_number(str_);
  return '1';
EXCEPTION
   WHEN OTHERS THEN
      RETURN '0';
END Is_Number;

/

create or replace procedure SP_IMPORT_ORDER(
IN_TMPID varchar2,
IN_USERID varchar2,
IN_LANGUAGE VARCHAR2,
OUTPUT_RESULLT in out varchar2)
IS

t_cur_column varchar2(100);
t_cur_value varchar2(500);
t_cur_name varchar2(100);
t_msg varchar2(200);
t_verify_type number(4);
t_table_name varchar2(100);
t_verify_code varchar2(100);

v_sql varchar2(2048);
temp_sql varchar2(1024);
temp_result varchar2(500);
tmp_verify_code varchar2(100);

r_REFENENCE1 varchar2(100);
r_CUSTOM_ODR_NO varchar2(100);
r_CUSTOMER_NAME varchar2(100);
r_BIZ_TYP varchar2(100);
r_ODR_TYP varchar2(100);
r_ODR_TIME varchar2(100);
r_VEHICLE_TYP varchar2(100);
r_TEMPERATURE1 varchar2(100);
r_TEMPERATURE2 varchar2(100);
r_PRE_LOAD_TIME varchar2(100);
r_PRE_UNLOAD_TIME varchar2(100);
r_SLF_PICKUP_FLAG varchar2(10);
r_SLF_DELIVER_FLAG varchar2(10);
r_NOTES varchar2(500);
r_LOAD_CODE varchar2(100);
r_LOAD_AREA_NAME varchar2(100);
r_LOAD_AREA_NAME2 varchar2(100);
r_LOAD_AREA_NAME3 varchar2(100);
r_LOAD_ADDRESS varchar2(300);
r_LOAD_CONTACT varchar2(100);
r_LOAD_TEL varchar2(100);
r_UNLOAD_CODE varchar2(100);
r_UNLOAD_AREA_NAME varchar2(100);
r_UNLOAD_AREA_NAME2 varchar2(100);
r_UNLOAD_AREA_NAME3 varchar2(100);
r_UNLOAD_ADDRESS varchar2(300);
r_UNLOAD_CONTACT varchar2(100);
r_UNLOAD_TEL varchar2(100);
r_SKU varchar2(100);
r_SKU_NAME varchar2(200);
r_UOM varchar2(100);
r_QNTY varchar2(100);
r_TEMPERATURE varchar2(100);
r_G_WGT varchar2(100);
r_VOL varchar2(100);
r_LINE number(4);
r_USERID varchar2(30);
r_BTCH_NUM VARCHAR2(50);

type   cur_t   is   ref   cursor;
      C_ACT   cur_t;

TYPE array_var IS VARRAY(37) OF nvarchar2(10000);

tmp_key array_var;
tmp_name array_var;
tmp_value array_var;

tmp_table varchar2(255);
tmp_column varchar2(255);
tmp_param_type NUMBER;
tmp_replace_field varchar2(100);
tmp_default_value varchar2(255);

exec_sql varchar2(4096);
exec_value varchar2(4096);

r_count number(4);
pos number(4);

load_code varchar2(100);
unload_code varchar2(100);

op_customer_id varchar2(32);
op_customer_name VARCHAR2(50);
op_load_area_name varchar2(50);
op_load_area_name2 varchar2(50);
op_load_area_name3 varchar2(50);
op_unload_area_name varchar2(50);
op_unload_area_name2 varchar2(50);
op_unload_area_name3 varchar2(50);
op_load_address varchar2(300);
op_load_contact varchar2(40);
op_load_tel varchar2(80);
op_unload_address varchar2(300);
op_unload_contact varchar2(40);
op_unload_tel varchar2(80);
op_load_area_id varchar2(32);
op_load_area_id2 varchar2(32);
op_load_area_id3 varchar2(32);
op_load_name varchar2(100);
op_unload_area_id varchar2(32);
op_unload_area_id2 varchar2(32);
op_unload_area_id3 varchar2(32);
op_unload_name varchar2(100);
op_exec_org_id varchar2(32);
op_id varchar2(32);
op_odr_no varchar2(100);
op_odr_row number(4);
op_skuname varchar2(100);
op_packid varchar2(32);

odr_lst LST := LST();

tmp_unload_address varchar2(300);
tmp_unload_contact varchar2(40);
tmp_unload_tel varchar2(40);
tmp_load_address  varchar2(300);
tmp_load_contact varchar2(40);
tmp_load_tel varchar2(80);


CURSOR verify is
      select verify_type,table_name,verify_code,error_msg from t_input_excel_verify where type_name = 'TMP_ORDER_IMPORT' and COLUMN_NAME = t_cur_column;
CURSOR head is
      select column_name,default_value,param_type,replace_field,table_name from t_input_excel_default where table_name = 'TRANS_ORDER_HEADER' order by exec_seq asc;
CURSOR item is
      select column_name,default_value,param_type,replace_field,table_name from t_input_excel_default where table_name = 'TRANS_ORDER_ITEM' order by exec_seq asc;
--IN_TMPID varchar2(32);
BEGIN
  --IN_TMPID := '1489116521217';
  OUTPUT_RESULLT := '';
  --return;
  tmp_key := array_var('REFENENCE1','CUSTOM_ODR_NO','CUSTOMER_NAME','BIZ_TYP','ODR_TYP','ODR_TIME','VEHICLE_TYP','TEMPERATURE1','TEMPERATURE2','SLF_PICKUP_FLAG'
  ,'SLF_DELIVER_FLAG','NOTES','PRE_LOAD_TIME','PRE_UNLOAD_TIME','LOAD_CODE','LOAD_AREA_NAME','LOAD_AREA_NAME2','LOAD_AREA_NAME3','LOAD_ADDRESS','LOAD_CONTACT'
  ,'LOAD_TEL','UNLOAD_CODE','UNLOAD_AREA_NAME','UNLOAD_AREA_NAME2','UNLOAD_AREA_NAME3','UNLOAD_ADDRESS','UNLOAD_CONTACT','UNLOAD_TEL','SKU','SKU_NAME','UOM'
  ,'QNTY','TEMPERATURE','G_WGT','VOL','BTCH_NUM','USER_ID');
  
  tmp_name := array_var('运单号','客户订单号','客户代码','业务类型','运输类型','下单时间','车辆类型','温度下限','温度上限','客户自提'
  ,'客户自送','备注','要求发货时间','要求到货时间','发货点代码','发货省','发货市','发货区','发货详细地址','发货联系人'
  ,'发货联系电话','卸货点代码','卸货省','卸货市','卸货区','卸货详细地址','卸货联系人','卸货联系电话','货品代码','货品名称','运输单位'
  ,'数量','温区','毛重(千克)','体积（立方）','订单组号','登录用户');
  v_sql := '';
  r_LINE := 1;
  pos := 1;
  for i in 1..tmp_key.count loop
      t_cur_column := tmp_key(i);
      v_sql := v_sql|| t_cur_column || ',';
  end loop;
  v_sql := 'SELECT ' || v_sql || 'LINENO FROM TMP_ORDER_IMPORT WHERE TMPID = ''' || IN_TMPID || ''' AND USER_ID = ''' || IN_USERID || ''' ORDER BY LINENO ASC';
  --校验字段
  Open  C_ACT   for   v_sql ;
  loop
      fetch C_ACT into r_REFENENCE1,r_CUSTOM_ODR_NO,r_CUSTOMER_NAME,r_BIZ_TYP,r_ODR_TYP
       ,r_ODR_TIME,r_VEHICLE_TYP,r_TEMPERATURE1,r_TEMPERATURE2,r_SLF_PICKUP_FLAG,r_SLF_DELIVER_FLAG
       ,r_NOTES,r_PRE_LOAD_TIME,r_PRE_UNLOAD_TIME,r_LOAD_CODE
       ,r_LOAD_AREA_NAME,r_LOAD_AREA_NAME2,r_LOAD_AREA_NAME3,r_LOAD_ADDRESS,r_LOAD_CONTACT
       ,r_LOAD_TEL,r_UNLOAD_CODE,r_UNLOAD_AREA_NAME,r_UNLOAD_AREA_NAME2,r_UNLOAD_AREA_NAME3
       ,r_UNLOAD_ADDRESS,r_UNLOAD_CONTACT,r_UNLOAD_TEL,r_SKU,r_SKU_NAME
       ,r_UOM,r_QNTY,r_TEMPERATURE,r_G_WGT,r_VOL,r_BTCH_NUM,r_USERID,r_LINE;            --V418A
      exit when C_ACT%notfound;

      tmp_value := array_var(r_REFENENCE1,r_CUSTOM_ODR_NO,r_CUSTOMER_NAME,r_BIZ_TYP,r_ODR_TYP
       ,r_ODR_TIME,r_VEHICLE_TYP,r_TEMPERATURE1,r_TEMPERATURE2,r_SLF_PICKUP_FLAG,r_SLF_DELIVER_FLAG
       ,r_NOTES,r_PRE_LOAD_TIME,r_PRE_UNLOAD_TIME,r_LOAD_CODE
       ,r_LOAD_AREA_NAME,r_LOAD_AREA_NAME2,r_LOAD_AREA_NAME3,r_LOAD_ADDRESS,r_LOAD_CONTACT
       ,r_LOAD_TEL,r_UNLOAD_CODE,r_UNLOAD_AREA_NAME,r_UNLOAD_AREA_NAME2,r_UNLOAD_AREA_NAME3
       ,r_UNLOAD_ADDRESS,r_UNLOAD_CONTACT,r_UNLOAD_TEL,r_SKU,r_SKU_NAME
       ,r_UOM,r_QNTY,r_TEMPERATURE,r_G_WGT,r_VOL,r_BTCH_NUM,r_USERID);

      if r_CUSTOMER_NAME is null then  --当客户单号为空时，可认为与上一行信息相同，直接跳到明细列进行校验。
          pos := 15;
      end if;

      for i in pos..tmp_key.count loop
           t_cur_column := tmp_key(i);
           t_cur_value := tmp_value(i);
           t_cur_name := tmp_name(i);
           for m in verify loop
               t_verify_type := m.verify_type;
               t_table_name := m.table_name;
               t_verify_code := m.verify_code;
               t_msg := m.error_msg;

               if t_verify_type = 0 then  --非空检验
                   if t_cur_value is null or length(t_cur_value) < 1 then
                       OUTPUT_RESULLT := OUTPUT_RESULLT || '<br />数据第'|| r_LINE ||'行【'|| t_cur_name ||'】列' || t_msg;
                       if length(OUTPUT_RESULLT) > 1000 then
                           OUTPUT_RESULLT:='01'||OUTPUT_RESULLT;
                           return;
                       end if;
                   end if;
               elsif t_verify_type = 1 and length(t_cur_value) > 0 then --唯一性校验
                   temp_sql := 'select count(1) from ' || t_table_name || ' where ' || t_cur_column || '=''' || t_cur_value || '''';
                   execute immediate temp_sql into r_count;
                   if r_count > 0 then
                        OUTPUT_RESULLT := OUTPUT_RESULLT || '<br />数据第'|| r_LINE ||'行【'|| t_cur_name ||'】列' || t_msg;
                        if length(OUTPUT_RESULLT) > 1000 then
                           OUTPUT_RESULLT:='01'||OUTPUT_RESULLT;
                           return;
                        end if;
                   else
                      temp_sql := 'select count(1) from TMP_ORDER_IMPORT where TMPID = ''' || IN_TMPID || ''' AND USER_ID = '''
                        || IN_USERID || ''' and ' || t_cur_column || '= ''' || t_cur_value || '''';
                      execute immediate temp_sql into r_count;
                      if r_count > 1 then
                          OUTPUT_RESULLT := OUTPUT_RESULLT || '<br />数据第'|| r_LINE ||'行【'|| t_cur_name ||'】列' || t_msg;
                          if length(OUTPUT_RESULLT) > 1000 then
                               OUTPUT_RESULLT:='01'||OUTPUT_RESULLT;
                               return;
                           end if;
                      end if;
                   end if;
               elsif t_verify_type = 2 and length(t_verify_code) > 0 and length(t_cur_value) > 0 then
                   temp_sql := REPLACE(t_verify_code, '?', t_cur_value);
                   execute immediate temp_sql into r_count;
                   if r_count = 0 then
                       OUTPUT_RESULLT := OUTPUT_RESULLT || '<br />数据第'|| r_LINE ||'行【'|| t_cur_name ||'】列值为[' || t_cur_value || '],' || t_msg;
                       if length(OUTPUT_RESULLT) > 1000 then
                           OUTPUT_RESULLT:='01'||OUTPUT_RESULLT;
                           return;
                       end if;
                   else
                      if t_cur_column = 'SKU' then  --如果是只填写SKU，则将SKU对应的名称写到临时表，避免校验SKU_NAME时因为无值不通过
                          select sku_cname into op_skuname from BAS_SKU where sku = t_cur_value;
                          update TMP_ORDER_IMPORT set SKU_NAME = op_skuname
                            WHERE TMPID = IN_TMPID AND USER_ID = IN_USERID AND LINENO = r_LINE;
                          tmp_value(30) := op_skuname;
                      end if;
                   end if;
               elsif t_verify_type = 3 then   --二选一非空校验
                   if t_cur_value is null then
                       select verify_code into tmp_verify_code from t_input_excel_verify where column_name = t_verify_code and verify_type = '2' and type_name = 'TMP_ORDER_IMPORT';
                       temp_sql := 'select ' || t_verify_code || ' from TMP_ORDER_IMPORT WHERE TMPID = ''' || IN_TMPID || ''' AND USER_ID = ''' || IN_USERID || ''' and LINENO = ''' || r_LINE || '''';
                       execute immediate temp_sql into temp_result;
                       temp_sql := REPLACE(tmp_verify_code, '?', temp_result);
                       execute immediate temp_sql into r_count;
                       if r_count = 0 then
                           OUTPUT_RESULLT := OUTPUT_RESULLT || '<br />数据第'|| r_LINE ||'行【'|| t_cur_name ||'】列' || t_msg;
                           if length(OUTPUT_RESULLT) > 1000 then
                               OUTPUT_RESULLT:='01'||OUTPUT_RESULLT;
                               return;
                           end if;
                       end if;
                   end if;
               elsif t_verify_type = 4 and length(t_verify_code) > 0 and length(t_cur_value) > 0 then --长度校验
                   temp_sql := REPLACE(t_verify_code, '?', t_cur_value);
                   execute immediate temp_sql into r_count;
                   if r_count = 0 then
                       OUTPUT_RESULLT := OUTPUT_RESULLT || '<br />数据第'|| r_LINE ||'行【'|| t_cur_name ||'】列' || t_msg;
                       if length(OUTPUT_RESULLT) > 1000 then
                           OUTPUT_RESULLT:='01'||OUTPUT_RESULLT;
                           return;
                       end if;
                   end if;
               end if;
           end loop;
      end loop;
      <<next_loop>>
          t_cur_column := '';
  end loop;
  close C_ACT;

  if length(OUTPUT_RESULLT) > 0 then
    OUTPUT_RESULLT:='01'||OUTPUT_RESULLT;
    rollback;
    -- 失败删除中间表
    delete from TMP_ORDER_IMPORT where TMPID = IN_TMPID;
    commit;
    return;
  end if;
  --插入数据
  Open  C_ACT   for   v_sql ;
  loop
      fetch C_ACT into r_REFENENCE1,r_CUSTOM_ODR_NO,r_CUSTOMER_NAME,r_BIZ_TYP,r_ODR_TYP
       ,r_ODR_TIME,r_VEHICLE_TYP,r_TEMPERATURE1,r_TEMPERATURE2,r_SLF_PICKUP_FLAG,r_SLF_DELIVER_FLAG
       ,r_NOTES,r_PRE_LOAD_TIME,r_PRE_UNLOAD_TIME,r_LOAD_CODE
       ,r_LOAD_AREA_NAME,r_LOAD_AREA_NAME2,r_LOAD_AREA_NAME3,r_LOAD_ADDRESS,r_LOAD_CONTACT
       ,r_LOAD_TEL,r_UNLOAD_CODE,r_UNLOAD_AREA_NAME,r_UNLOAD_AREA_NAME2,r_UNLOAD_AREA_NAME3
       ,r_UNLOAD_ADDRESS,r_UNLOAD_CONTACT,r_UNLOAD_TEL,r_SKU,r_SKU_NAME
       ,r_UOM,r_QNTY,r_TEMPERATURE,r_G_WGT,r_VOL,r_BTCH_NUM,r_USERID,r_LINE;            --V418A
      exit when C_ACT%notfound;

      tmp_value := array_var(r_REFENENCE1,r_CUSTOM_ODR_NO,r_CUSTOMER_NAME,r_BIZ_TYP,r_ODR_TYP
       ,r_ODR_TIME,r_VEHICLE_TYP,r_TEMPERATURE1,r_TEMPERATURE2,r_SLF_PICKUP_FLAG,r_SLF_DELIVER_FLAG
       ,r_NOTES,r_PRE_LOAD_TIME,r_PRE_UNLOAD_TIME,r_LOAD_CODE
       ,r_LOAD_AREA_NAME,r_LOAD_AREA_NAME2,r_LOAD_AREA_NAME3,r_LOAD_ADDRESS,r_LOAD_CONTACT
       ,r_LOAD_TEL,r_UNLOAD_CODE,r_UNLOAD_AREA_NAME,r_UNLOAD_AREA_NAME2,r_UNLOAD_AREA_NAME3
       ,r_UNLOAD_ADDRESS,r_UNLOAD_CONTACT,r_UNLOAD_TEL,r_SKU,r_SKU_NAME
       ,r_UOM,r_QNTY,r_TEMPERATURE,r_G_WGT,r_VOL,r_BTCH_NUM,r_USERID);

      exec_sql := '';
      exec_value := '';
      if r_CUSTOMER_NAME is not null then
          for h in head loop
              tmp_table := h.table_name;
              tmp_column := h.column_name;
              tmp_param_type := h.param_type;
              tmp_replace_field := h.replace_field;
              tmp_default_value := h.default_value;
              exec_sql := exec_sql || ',' || h.column_name;
              if h.param_type = '0' then  --定制
                  exec_value := exec_value || ',' || h.default_value;
              elsif h.param_type = '1' then  --从执行结果取值
                  temp_sql := h.default_value;
                  execute immediate temp_sql into temp_result;
                  exec_value := exec_value || ',''' || temp_result || '''';
              elsif h.param_type = '2' then   --将？替换成参数值，并从结果取值
                  for i in 1..tmp_key.count loop
                      t_cur_column := tmp_key(i);
                      if t_cur_column = h.Replace_Field then
                          t_cur_value := tmp_value(i);
                          exit;
                      end if;
                  end loop;
                  if t_cur_value is not null then
                      temp_sql := REPLACE(h.default_value, '?', t_cur_value);
                      execute immediate temp_sql into temp_result;
                      exec_value := exec_value || ',''' || temp_result || '''';
                  else
                      exec_value := exec_value || ',NULL';
                  end if;
                  if  h.column_name = 'CUSTOMER_ID' then
                      op_customer_id := temp_result;
                  elsif h.column_name = 'CUSTOMER_NAME' then
                      op_customer_name := temp_result;
                  end if;
              elsif h.param_type = '3' then  --直接从临时表上取值
                  for i in 1..tmp_key.count loop
                      t_cur_column := tmp_key(i);
                      if t_cur_column = h.column_name then
                          t_cur_value := tmp_value(i);
                          exit;
                      end if;
                  end loop;
                  if t_cur_value is null and h.column_name = 'CUSTOMER_NAME' then
                     goto next_loop;
                  end if;
                  if t_cur_value is null then
                      exec_value := exec_value || ',NULL';
                  else
                      exec_value := exec_value || ',''' || t_cur_value || '''';
                  end if;
             end if;
          end loop;
      end if;
      <<next_loop>>
          OUTPUT_RESULLT := '';
      if length(exec_value) > 1 then
          --获取托运单号
          SP_GET_IDSEQ('ORDER',op_odr_no);

          exec_sql := 'INSERT INTO TRANS_ORDER_HEADER(ODR_NO,ADDWHO,ADDTIME' || exec_sql || ') VALUES(''' || op_odr_no || ''',''' || IN_USERID || ''',sysdate' || exec_value || ')';
          execute immediate exec_sql;

          odr_lst.extend();
          odr_lst(odr_lst.count) := op_odr_no;
      end if;
      exec_sql := '';
      exec_value := '';
      op_packid := '2EEB495B515049B3A9CD76572DDDC999';
      for h in item loop
          tmp_table := h.table_name;
          tmp_column := h.column_name;
          tmp_param_type := h.param_type;
          tmp_replace_field := h.replace_field;
          tmp_default_value := h.default_value;
          if h.param_type = '0' then  --定制
              exec_sql := exec_sql || ',' || h.column_name;
              exec_value := exec_value || ',' || h.default_value;
          elsif h.param_type = '1' then  --从执行结果取值
              exec_sql := exec_sql || ',' || h.column_name;
              temp_sql := h.default_value;
              execute immediate temp_sql into temp_result;
              exec_value := exec_value || ',''' || temp_result || '''';
          elsif h.param_type = '2' then   --将？替换成参数值，并从结果取值
              exec_sql := exec_sql || ',' || h.column_name;
              for i in 1..tmp_key.count loop
                  t_cur_column := tmp_key(i);
                  if t_cur_column = h.replace_field then
                      t_cur_value := tmp_value(i);
                      exit;
                  end if;
              end loop;
              if t_cur_value is not null then
                  temp_sql := REPLACE(h.default_value, '?', t_cur_value);
                  execute immediate temp_sql into temp_result;
                  exec_value := exec_value || ',''' || temp_result || '''';
              else
                  exec_value := exec_value || ',NULL';
              end if;
          elsif h.param_type = '3' then  --直接从临时表上取值
              for i in 1..tmp_key.count loop
                  t_cur_column := tmp_key(i);
                  if t_cur_column = h.column_name then
                      t_cur_value := tmp_value(i);
                      exit;
                  end if;
              end loop;
              if h.column_name = 'LOAD_CODE' then
                  load_code := t_cur_value;
                  if load_code is not null then
                      exec_sql := exec_sql || ',' || h.column_name;
                      exec_value := exec_value || ',''' || t_cur_value || '''';
                  end if;
              elsif h.column_name = 'UNLOAD_CODE' then
                  unload_code := t_cur_value;
                  if unload_code is not null then
                      exec_sql := exec_sql || ',' || h.column_name;
                      exec_value := exec_value || ',''' || t_cur_value || '''';
                  end if;
              elsif h.column_name = 'UNLOAD_AREA_NAME' then
                  op_unload_area_name := t_cur_value;
                  if op_unload_area_name is not null then
                      exec_sql := exec_sql || ',' || h.column_name;
                      exec_value := exec_value || ',''' || t_cur_value || '''';
                  end if;
              elsif h.column_name = 'UNLOAD_AREA_NAME2' then
                  op_unload_area_name2 := t_cur_value;
                  if op_unload_area_name2 is not null then
                      exec_sql := exec_sql || ',' || h.column_name;
                      exec_value := exec_value || ',''' || t_cur_value  || '''';
                  end if;
              elsif h.column_name = 'UNLOAD_AREA_NAME3' then
                  op_unload_area_name3 := t_cur_value;
                  if op_unload_area_name3 is not null then
                      exec_sql := exec_sql || ',' || h.column_name;
                      exec_value := exec_value || ',''' || t_cur_value || '''';
                  end if;
              elsif h.column_name = 'UNLOAD_ADDRESS' then
                  op_unload_address := t_cur_value;
                  if op_unload_address is not null then
                      exec_sql := exec_sql || ',' || h.column_name;
                      exec_value := exec_value || ',''' || t_cur_value || '''';
                  end if;
              elsif h.column_name = 'UNLOAD_CONTACT' then
                  op_unload_contact := t_cur_value;
                  if op_unload_contact is not null then
                      exec_sql := exec_sql || ',' || h.column_name;
                      exec_value := exec_value || ',''' || t_cur_value || '''';
                  end if;
              elsif h.column_name = 'UNLOAD_TEL' then
                  op_unload_tel := t_cur_value;
                  if op_unload_tel is not null then
                      exec_sql := exec_sql || ',' || h.column_name;
                      exec_value := exec_value || ',''' || t_cur_value || '''';
                  end if;
              elsif h.column_name = 'LOAD_AREA_NAME' then
                  op_load_area_name := t_cur_value;
                  if op_load_area_name is not null then
                      exec_sql := exec_sql || ',' || h.column_name;
                      exec_value := exec_value || ',''' || t_cur_value || '''';
                  end if;
              elsif h.column_name = 'LOAD_AREA_NAME2' then
                  op_load_area_name2 := t_cur_value;
                  if op_load_area_name2 is not null then
                      exec_sql := exec_sql || ',' || h.column_name;
                      exec_value := exec_value || ',''' || t_cur_value || '''';
                  end if;
              elsif h.column_name = 'LOAD_AREA_NAME3' then
                  op_load_area_name3 := t_cur_value;
                  if op_load_area_name3 is not null then
                      exec_sql := exec_sql || ',' || h.column_name;
                      exec_value := exec_value || ',''' || t_cur_value || '''';
                  end if;
              elsif h.column_name = 'LOAD_ADDRESS' then
                  op_load_address := t_cur_value;
                  if op_load_address is not null then
                      exec_sql := exec_sql || ',' || h.column_name;
                      exec_value := exec_value || ',''' || t_cur_value || '''';
                  end if;
              elsif h.column_name = 'LOAD_CONTACT' then
                  op_load_contact := t_cur_value;
                  if op_load_contact is not null then
                      exec_sql := exec_sql || ',' || h.column_name;
                      exec_value := exec_value || ',''' || t_cur_value || '''';
                  end if;
              elsif h.column_name = 'LOAD_TEL' then
                  op_load_tel := t_cur_value;
                  if op_load_tel is not null then
                      exec_sql := exec_sql || ',' || h.column_name;
                      exec_value := exec_value || ',''' || t_cur_value || '''';
                  end if;
              elsif h.column_name = 'SKU' then
                  if t_cur_value is not null then
                      select id into op_packid from bas_sku where sku = t_cur_value;
                  end if;
                  exec_sql := exec_sql || ',' || h.column_name;
                  exec_value := exec_value || ',''' || t_cur_value || '''';
              else
                  exec_sql := exec_sql || ',' || h.column_name;
                  exec_value := exec_value || ',''' || t_cur_value || '''';
              end if;
         elsif h.param_type = '4' then --发货地址特殊处理
              if load_code is null then  --先自动录入地址信息再处理
                  select F_GET_DEFAULT_ORGBYUSER(IN_USERID, 0) into op_exec_org_id from dual;
                  select sys_guid() into op_id from dual;
                  select area_code into op_load_area_id from bas_area where area_cname=op_load_area_name and area_level=3 and rownum=1;
                  select area_code into op_load_area_id2 from bas_area where area_cname=op_load_area_name2 and area_level=4 and rownum=1;
                  load_code := substr(F_ZJM(op_load_address),0,32);
                  op_load_name := substr(op_load_address,0,100);
                  if op_load_area_name3 is not null then
                      select area_code into op_load_area_id3 from bas_area where area_cname=op_load_area_name3 and area_level=5 and rownum=1;
                  end if;

                  select count(1) into r_count from bas_address where customer_id = op_customer_id and addr_code = load_code;
                  if r_count > 0 then
                      select id,addr_name,area_id,area_id2,area_id3 into op_id,op_load_name,op_load_area_id,op_load_area_id2,op_load_area_id3
                        from bas_address where customer_id = op_customer_id and addr_code = load_code;
                  else
                      --插入地址
                      insert into bas_address(id,addr_code,customer_id,customer_name,load_flag,transfer_flag,recv_flag,area_id,area_name,addr_name,address,
                        cont_name,cont_tel,addr_typ,create_org_id,exec_org_id,enable_flag,addtime,addwho,area_id2,area_name2,area_id3,area_name3)
                      values(op_id,load_code,op_customer_id,op_customer_name,'Y','N','N',op_load_area_id,op_load_area_name,op_load_name,op_load_address,
                        op_load_contact,op_load_tel,'9E0057747CC24A4BB998749752D2C42E',op_exec_org_id,op_exec_org_id,'Y',sysdate,IN_USERID,op_load_area_id2,op_load_area_name2,op_load_area_id3,op_load_area_name3);
                  end if;
                  --exec_value := exec_value || ',''' || op_id || '''';

                  exec_sql := exec_sql || ',LOAD_ID,LOAD_CODE,LOAD_NAME,LOAD_AREA_ID,LOAD_AREA_ID2,LOAD_AREA_ID3';
                  exec_value := exec_value || ',''' || op_id || ''',''' || load_code || ''',''' || op_load_name || ''',''' || op_load_area_id || ''','''
                     || op_load_area_id2 || ''',''' || op_load_area_id3 || '''';
              else
                  select count(1) into r_count from bas_address where addr_code = load_code;
                  if r_count > 1 then
                      select count(1) into r_count from bas_address where customer_id = op_customer_id and addr_code = load_code;
                      if r_count > 1 or r_count = 0 then
                          OUTPUT_RESULLT := OUTPUT_RESULLT || '<br />数据第'|| r_LINE ||'行收货方代码['|| unload_code ||']重复';
                          for h in 1..odr_lst.count loop
                              op_odr_no := odr_lst(h);
                              delete from trans_order_header where odr_no = op_odr_no;
                              delete from trans_order_item where odr_no = op_odr_no;
                          end loop;
                          commit;
                          return;
                      else
                          select id,addr_name,area_id,area_name,area_id2,area_name2,area_id3,area_name3,cont_name,cont_tel,address
                          into op_id,op_load_name,op_load_area_id,op_load_area_name,op_load_area_id2,op_load_area_name2,op_load_area_id3,op_load_area_name3,tmp_load_contact,tmp_load_tel,tmp_load_address
                          from bas_address where customer_id = op_customer_id and addr_code = load_code;
                      end if;
                  else
                      select id,addr_name,area_id,area_name,area_id2,area_name2,area_id3,area_name3,cont_name,cont_tel,address
                      into op_id,op_load_name,op_load_area_id,op_load_area_name,op_load_area_id2,op_load_area_name2,op_load_area_id3,op_load_area_name3,tmp_load_contact,tmp_load_tel,tmp_load_address
                      from bas_address where addr_code = load_code;
                  end if;

                  exec_sql := exec_sql || ',LOAD_ID,LOAD_NAME,LOAD_AREA_ID,LOAD_AREA_NAME,LOAD_AREA_ID2,LOAD_AREA_NAME2,LOAD_AREA_ID3,LOAD_AREA_NAME3';
                  exec_value := exec_value || ',''' || op_id || ''',''' || op_load_name || ''',''' || op_load_area_id || ''',''' || op_load_area_name ||''','''
                     || op_load_area_id2 || ''',''' || op_load_area_name2 ||''',''' || op_load_area_id3 || ''',''' || op_load_area_name3 || '''';
                  if op_load_address is null then
                      exec_sql := exec_sql || ',LOAD_ADDRESS';
                      exec_value := exec_value || ',''' || tmp_load_address || '''';
                  end if;
                  if op_load_contact is null then
                      exec_sql := exec_sql || ',LOAD_CONTACT';
                      exec_value := exec_value || ',''' || tmp_load_contact || '''';
                  end if;
                  if op_load_tel is null then
                      exec_sql := exec_sql || ',LOAD_TEL';
                      exec_value := exec_value || ',''' || tmp_load_tel || '''';
                  end if;
              end if;
              --exec_value := exec_value || ',' || t_cur_value;
         elsif h.param_type = '5' then --收货地址特殊处理
              if unload_code is null then  --先自动录入地址信息再处理
                  select F_GET_DEFAULT_ORGBYUSER(IN_USERID, 0) into op_exec_org_id from dual;
                  select sys_guid() into op_id from dual;
                  select area_code into op_unload_area_id from bas_area where area_cname=op_unload_area_name and area_level=3 and rownum=1;
                  select area_code into op_unload_area_id2 from bas_area where area_cname=op_unload_area_name2 and area_level=4 and rownum=1;
                  unload_code := substr(F_ZJM(op_unload_address),0,32);
                  op_unload_name := substr(op_unload_address,0,100);
                  if op_unload_area_name3 is not null then
                      select area_code into op_unload_area_id3 from bas_area where area_cname=op_unload_area_name3 and area_level=5 and rownum=1;
                  end if;

                  select count(1) into r_count from bas_address where customer_id = op_customer_id and addr_code = unload_code;
                  if r_count > 0 then
                      select id,addr_name,area_id,area_id2,area_id3 into op_id,op_unload_name,op_unload_area_id,op_unload_area_id2,op_unload_area_id3
                      from bas_address where addr_code = unload_code and customer_id = op_customer_id;
                  else
                      --插入地址
                      insert into bas_address(id,addr_code,customer_id,customer_name,load_flag,transfer_flag,recv_flag,area_id,area_name,addr_name,address,
                        cont_name,cont_tel,addr_typ,create_org_id,exec_org_id,enable_flag,addtime,addwho,area_id2,area_name2,area_id3,area_name3)
                      values(op_id,unload_code,op_customer_id,op_customer_name,'N','N','Y',op_unload_area_id,op_unload_area_name,op_unload_name,op_unload_address,
                        op_unload_contact,op_unload_tel,'9E0057747CC24A4BB998749752D2C42E',op_exec_org_id,op_exec_org_id,'Y',sysdate,IN_USERID,op_unload_area_id2,op_unload_area_name2,op_unload_area_id3,op_unload_area_name3);
                  end if;
                  --exec_value := exec_value || ',''' || op_id || '''';

                  exec_sql := exec_sql || ',UNLOAD_ID,UNLOAD_CODE,UNLOAD_NAME,UNLOAD_AREA_ID,UNLOAD_AREA_ID2,UNLOAD_AREA_ID3';
                  exec_value := exec_value || ',''' || op_id || ''',''' || unload_code || ''',''' || op_unload_name || ''',''' || op_unload_area_id || ''','''
                     || op_unload_area_id2 || ''',''' || op_unload_area_id3 || '''';
              else
                  select count(1) into r_count from bas_address where addr_code = unload_code;
                  if r_count > 1 then
                      select count(1) into r_count from bas_address where customer_id = op_customer_id and addr_code = unload_code;
                      if r_count > 1 or r_count = 0 then
                          OUTPUT_RESULLT := OUTPUT_RESULLT || '<br />数据第'|| r_LINE ||'行收货方代码['|| unload_code ||']重复';
                          for h in 1..odr_lst.count loop
                              op_odr_no := odr_lst(h);
                              delete from trans_order_header where odr_no = op_odr_no;
                              delete from trans_order_item where odr_no = op_odr_no;
                          end loop;
                          commit;
                          return;
                      else
                          select id,addr_name,area_id,area_name,area_id2,area_name2,area_id3,area_name3,address,cont_name,cont_tel
                          into op_id,op_unload_name,op_unload_area_id,op_unload_area_name,op_unload_area_id2,op_unload_area_name2,op_unload_area_id3,op_unload_area_name3,tmp_unload_address,tmp_unload_contact,tmp_unload_tel
                          from bas_address where customer_id = op_customer_id and addr_code = unload_code;
                      end if;
                  else
                      select id,addr_name,area_id,area_name,area_id2,area_name2,area_id3,area_name3,address,cont_name,cont_tel
                      into op_id,op_unload_name,op_unload_area_id,op_unload_area_name,op_unload_area_id2,op_unload_area_name2,op_unload_area_id3,op_unload_area_name3,tmp_unload_address,tmp_unload_contact,tmp_unload_tel
                      from bas_address where addr_code = unload_code;
                  end if;
                  exec_sql := exec_sql || ',UNLOAD_ID,UNLOAD_NAME,UNLOAD_AREA_ID,UNLOAD_AREA_NAME,UNLOAD_AREA_ID2,UNLOAD_AREA_NAME2,UNLOAD_AREA_ID3,UNLOAD_AREA_NAME3';
                  exec_value := exec_value || ',''' || op_id || ''',''' || op_unload_name || ''',''' || op_unload_area_id || ''',''' || op_unload_area_name || ''','''
                     || op_unload_area_id2 || ''',''' || op_unload_area_name2 || ''',''' || op_unload_area_id3 || ''',''' || op_unload_area_name3 || '''';
                  if op_unload_address is null then
                      exec_sql := exec_sql || ',UNLOAD_ADDRESS';
                      exec_value := exec_value || ',''' || tmp_unload_address || '''';
                  end if;
                  if op_unload_contact is null then
                      exec_sql := exec_sql || ',UNLOAD_CONTACT';
                      exec_value := exec_value || ',''' || tmp_unload_contact || '''';
                  end if;
                  if op_unload_tel is null then
                      exec_sql := exec_sql || ',UNLOAD_TEL';
                      exec_value := exec_value || ',''' || tmp_unload_tel || '''';
                  end if;
              end if;
              --exec_value := exec_value || ',' || t_cur_value;
         end if;
         <<next_loop>>
             OUTPUT_RESULLT := '';
      end loop;
      select nvl(max(odr_row),0) + 1 into op_odr_row from trans_order_item where odr_no = op_odr_no;
      exec_sql := 'INSERT INTO TRANS_ORDER_ITEM(ODR_NO,ODR_ROW,ADDWHO,PACK_ID,ADDTIME' || exec_sql || ') VALUES(''' || op_odr_no || ''',' || op_odr_row || ',''' || IN_USERID || ''',''' || op_packid ||''',sysdate' || exec_value || ')';
      execute immediate exec_sql;

      ORDER_QTY_COUNT(op_odr_no, OUTPUT_RESULLT); --汇总订单信息
      --更新订单发货点和收货点信息
      UPDATE TRANS_ORDER_HEADER SET (LOAD_ID,LOAD_NAME,LOAD_AREA_ID,LOAD_AREA_NAME,LOAD_AREA_ID2,LOAD_AREA_NAME2,LOAD_AREA_ID3,LOAD_AREA_NAME3,LOAD_ADDRESS,LOAD_CONTACT,LOAD_TEL,LOAD_CODE)= ( select LOAD_ID,LOAD_NAME,LOAD_AREA_ID,LOAD_AREA_NAME,LOAD_AREA_ID2,LOAD_AREA_NAME2,LOAD_AREA_ID3,LOAD_AREA_NAME3,LOAD_ADDRESS,LOAD_CONTACT,LOAD_TEL,LOAD_CODE  from TRANS_ORDER_ITEM where TRANS_ORDER_HEADER.ODR_NO = TRANS_ORDER_ITEM.ODR_NO and TRANS_ORDER_ITEM.ODR_ROW = (select min(odr_row) from trans_order_item where ODR_NO = op_odr_no)) where TRANS_ORDER_HEADER.ODR_NO = op_odr_no;
      UPDATE TRANS_ORDER_HEADER SET (UNLOAD_ID,UNLOAD_NAME,UNLOAD_AREA_ID,UNLOAD_AREA_NAME,UNLOAD_AREA_ID2,UNLOAD_AREA_NAME2,UNLOAD_AREA_ID3,UNLOAD_AREA_NAME3,UNLOAD_ADDRESS,UNLOAD_CONTACT,UNLOAD_TEL,UNLOAD_CODE)= ( select UNLOAD_ID,UNLOAD_NAME,UNLOAD_AREA_ID,UNLOAD_AREA_NAME,UNLOAD_AREA_ID2,UNLOAD_AREA_NAME2,UNLOAD_AREA_ID3,UNLOAD_AREA_NAME3,UNLOAD_ADDRESS,UNLOAD_CONTACT,UNLOAD_TEL,UNLOAD_CODE  from TRANS_ORDER_ITEM where TRANS_ORDER_HEADER.ODR_NO = TRANS_ORDER_ITEM.ODR_NO and TRANS_ORDER_ITEM.ODR_ROW = (select max(odr_row) from trans_order_item where ODR_NO = op_odr_no)) where TRANS_ORDER_HEADER.ODR_NO = op_odr_no;

      OUTPUT_RESULLT := '00';
  end loop;
  close C_ACT;
  commit;

  delete from TMP_ORDER_IMPORT WHERE TMPID = IN_TMPID;
  /*for h in 1..odr_lst.count loop
      op_odr_no := odr_lst(h);
      ORDER_QTY_COUNT(op_odr_no, OUTPUT_RESULLT); --汇总订单信息
      --更新订单发货点和收货点信息
      UPDATE TRANS_ORDER_HEADER SET (LOAD_ID,LOAD_NAME,LOAD_AREA_ID,LOAD_AREA_NAME,LOAD_AREA_ID2,LOAD_AREA_NAME2,LOAD_AREA_ID3,LOAD_AREA_NAME3,LOAD_ADDRESS,LOAD_CONTACT,LOAD_TEL,LOAD_CODE)= ( select LOAD_ID,LOAD_NAME,LOAD_AREA_ID,LOAD_AREA_NAME,LOAD_AREA_ID2,LOAD_AREA_NAME2,LOAD_AREA_ID3,LOAD_AREA_NAME3,LOAD_ADDRESS,LOAD_CONTACT,LOAD_TEL,LOAD_CODE  from TRANS_ORDER_ITEM where TRANS_ORDER_HEADER.ODR_NO = TRANS_ORDER_ITEM.ODR_NO and TRANS_ORDER_ITEM.ODR_ROW = (select min(odr_row) from trans_order_item where ODR_NO = op_odr_no)) where TRANS_ORDER_HEADER.ODR_NO = op_odr_no;
      UPDATE TRANS_ORDER_HEADER SET (UNLOAD_ID,UNLOAD_NAME,UNLOAD_AREA_ID,UNLOAD_AREA_NAME,UNLOAD_AREA_ID2,UNLOAD_AREA_NAME2,UNLOAD_AREA_ID3,UNLOAD_AREA_NAME3,UNLOAD_ADDRESS,UNLOAD_CONTACT,UNLOAD_TEL,UNLOAD_CODE)= ( select UNLOAD_ID,UNLOAD_NAME,UNLOAD_AREA_ID,UNLOAD_AREA_NAME,UNLOAD_AREA_ID2,UNLOAD_AREA_NAME2,UNLOAD_AREA_ID3,UNLOAD_AREA_NAME3,UNLOAD_ADDRESS,UNLOAD_CONTACT,UNLOAD_TEL,UNLOAD_CODE  from TRANS_ORDER_ITEM where TRANS_ORDER_HEADER.ODR_NO = TRANS_ORDER_ITEM.ODR_NO and TRANS_ORDER_ITEM.ODR_ROW = (select max(odr_row) from trans_order_item where ODR_NO = op_odr_no)) where TRANS_ORDER_HEADER.ODR_NO = op_odr_no;
  end loop;*/
  OUTPUT_RESULLT := '00';
  commit;
  EXCEPTION
    WHEN OTHERS THEN
        --OUTPUT_RESULLT :='01'||sqlerrm || ']';
        OUTPUT_RESULLT := '01' || OUTPUT_RESULLT || '<br />数据第'|| r_LINE ||'行【'|| t_cur_name ||'】列值为[' || t_cur_value || '],数据异常请联系管理员!<br />';
        rollback;
        t_msg := substr(sqlerrm,1,200);
        insert into t_input_excel_temp(type_name,VALUE,line,column_name,column_cname,id,custom_odr_no)
        values(tmp_param_type,tmp_default_value,r_LINE,tmp_column,t_msg,to_char(sysdate,'YYYY-MM-DD HH24:MI'),tmp_table);

        delete from TMP_ORDER_IMPORT WHERE TMPID = IN_TMPID;
        for h in 1..odr_lst.count loop
            op_odr_no := odr_lst(h);
            delete from trans_order_header where odr_no = op_odr_no;
            delete from trans_order_item where odr_no = op_odr_no;
        end loop;
        commit;
        --RAISE_APPLICATION_ERROR(-20101, '执行全局校验时抛出异常: '||sqlerrm, TRUE);
END;

/

--caijiante 2017-05-16
--SYS_FUNC_PAGE 添加4条记录
964?	22965	P06_T051_P1_03	P06_T051_P1	新增	150	Y	2015/5/27	wpsadmin	新增	B	
965?	22966	P06_T051_P1_04	P06_T051_P1	保存	150	Y	2015/5/27	wpsadmin	保存	B	
966?	22967	P06_T051_P1_05	P06_T051_P1	删除	150	Y	2015/5/27	wpsadmin	删除	B	
967?	22968	P06_T051_P1_06	P06_T051_P1	取消	150	Y	2015/5/27	wpsadmin	取消	B	

--yuanlei 2017-5-16
create or replace procedure SP_IMPORT_ORDER(
IN_TMPID varchar2,
IN_USERID varchar2,
IN_LANGUAGE VARCHAR2,
OUTPUT_RESULLT in out varchar2)
IS

t_cur_column varchar2(100);
t_cur_value varchar2(500);
t_cur_name varchar2(100);
t_msg varchar2(200);
t_verify_type number(4);
t_table_name varchar2(100);
t_verify_code varchar2(100);

v_sql varchar2(2048);
temp_sql varchar2(1024);
temp_result varchar2(500);
tmp_verify_code varchar2(100);

r_REFENENCE1 varchar2(100);
r_CUSTOM_ODR_NO varchar2(100);
r_CUSTOMER_NAME varchar2(100);
r_BIZ_TYP varchar2(100);
r_ODR_TYP varchar2(100);
r_ODR_TIME varchar2(100);
r_VEHICLE_TYP varchar2(100);
r_TEMPERATURE1 varchar2(100);
r_TEMPERATURE2 varchar2(100);
r_PRE_LOAD_TIME varchar2(100);
r_PRE_UNLOAD_TIME varchar2(100);
r_SLF_PICKUP_FLAG varchar2(10);
r_SLF_DELIVER_FLAG varchar2(10);
r_NOTES varchar2(500);
r_LOAD_CODE varchar2(100);
r_LOAD_AREA_NAME varchar2(100);
r_LOAD_AREA_NAME2 varchar2(100);
r_LOAD_AREA_NAME3 varchar2(100);
r_LOAD_ADDRESS varchar2(300);
r_LOAD_CONTACT varchar2(100);
r_LOAD_TEL varchar2(100);
r_UNLOAD_CODE varchar2(100);
r_UNLOAD_AREA_NAME varchar2(100);
r_UNLOAD_AREA_NAME2 varchar2(100);
r_UNLOAD_AREA_NAME3 varchar2(100);
r_UNLOAD_ADDRESS varchar2(300);
r_UNLOAD_CONTACT varchar2(100);
r_UNLOAD_TEL varchar2(100);
r_SKU varchar2(100);
r_SKU_NAME varchar2(200);
r_UOM varchar2(100);
r_QNTY varchar2(100);
r_TEMPERATURE varchar2(100);
r_G_WGT varchar2(100);
r_VOL varchar2(100);
r_LINE number(4);
r_USERID varchar2(30);
r_BTCH_NUM VARCHAR2(50);

type   cur_t   is   ref   cursor;
      C_ACT   cur_t;

TYPE array_var IS VARRAY(37) OF nvarchar2(10000);

tmp_key array_var;
tmp_name array_var;
tmp_value array_var;

tmp_table varchar2(255);
tmp_column varchar2(255);
tmp_param_type NUMBER;
tmp_replace_field varchar2(100);
tmp_default_value varchar2(255);

exec_sql varchar2(4096);
exec_value varchar2(4096);

r_count number(4);
pos number(4);

load_code varchar2(100);
unload_code varchar2(100);

op_customer_id varchar2(32);
op_customer_name VARCHAR2(50);
op_load_area_name varchar2(50);
op_load_area_name2 varchar2(50);
op_load_area_name3 varchar2(50);
op_unload_area_name varchar2(50);
op_unload_area_name2 varchar2(50);
op_unload_area_name3 varchar2(50);
op_load_address varchar2(300);
op_load_contact varchar2(40);
op_load_tel varchar2(80);
op_unload_address varchar2(300);
op_unload_contact varchar2(40);
op_unload_tel varchar2(80);
op_load_area_id varchar2(32);
op_load_area_id2 varchar2(32);
op_load_area_id3 varchar2(32);
op_load_name varchar2(100);
op_unload_area_id varchar2(32);
op_unload_area_id2 varchar2(32);
op_unload_area_id3 varchar2(32);
op_unload_name varchar2(100);
op_exec_org_id varchar2(32);
op_id varchar2(32);
op_odr_no varchar2(100);
op_odr_row number(4);
op_skuname varchar2(100);
op_packid varchar2(32);

odr_lst LST := LST();

tmp_unload_address varchar2(300);
tmp_unload_contact varchar2(40);
tmp_unload_tel varchar2(40);
tmp_load_address  varchar2(300);
tmp_load_contact varchar2(40);
tmp_load_tel varchar2(80);

i_key LST := LST();
i_value LST:= LST();
i_size number(4);
t_key varchar2(100);
t_value varchar2(100);
c_area_name char(1);
c_area_name2 char(1);
c_area_name3 char(1);
c_address char(1);
c_contact char(1);
c_tel char(1);

CURSOR verify is
      select verify_type,table_name,verify_code,error_msg from t_input_excel_verify where type_name = 'TMP_ORDER_IMPORT' and COLUMN_NAME = t_cur_column;
CURSOR head is
      select column_name,default_value,param_type,replace_field,table_name from t_input_excel_default where table_name = 'TRANS_ORDER_HEADER' order by exec_seq asc;
CURSOR item is
      select column_name,default_value,param_type,replace_field,table_name from t_input_excel_default where table_name = 'TRANS_ORDER_ITEM' order by exec_seq asc;
--IN_TMPID varchar2(32);
BEGIN
  --IN_TMPID := '1489116521217';
  OUTPUT_RESULLT := '';
  --return;
  tmp_key := array_var('REFENENCE1','CUSTOM_ODR_NO','CUSTOMER_NAME','BIZ_TYP','ODR_TYP','ODR_TIME','VEHICLE_TYP','TEMPERATURE1','TEMPERATURE2','SLF_PICKUP_FLAG'
  ,'SLF_DELIVER_FLAG','NOTES','PRE_LOAD_TIME','PRE_UNLOAD_TIME','LOAD_CODE','LOAD_AREA_NAME','LOAD_AREA_NAME2','LOAD_AREA_NAME3','LOAD_ADDRESS','LOAD_CONTACT'
  ,'LOAD_TEL','UNLOAD_CODE','UNLOAD_AREA_NAME','UNLOAD_AREA_NAME2','UNLOAD_AREA_NAME3','UNLOAD_ADDRESS','UNLOAD_CONTACT','UNLOAD_TEL','SKU','SKU_NAME','UOM'
  ,'QNTY','TEMPERATURE','G_WGT','VOL','BTCH_NUM','USER_ID');
  
  tmp_name := array_var('运单号','客户订单号','客户代码','业务类型','运输类型','下单时间','车辆类型','温度下限','温度上限','客户自提'
  ,'客户自送','备注','要求发货时间','要求到货时间','发货点代码','发货省','发货市','发货区','发货详细地址','发货联系人'
  ,'发货联系电话','卸货点代码','卸货省','卸货市','卸货区','卸货详细地址','卸货联系人','卸货联系电话','货品代码','货品名称','运输单位'
  ,'数量','温区','毛重(千克)','体积（立方）','订单组号','登录用户');
  v_sql := '';
  r_LINE := 1;
  pos := 1;
  for i in 1..tmp_key.count loop
      t_cur_column := tmp_key(i);
      v_sql := v_sql|| t_cur_column || ',';
  end loop;
  v_sql := 'SELECT ' || v_sql || 'LINENO FROM TMP_ORDER_IMPORT WHERE TMPID = ''' || IN_TMPID || ''' AND USER_ID = ''' || IN_USERID || ''' ORDER BY LINENO ASC';
  --校验字段
  Open  C_ACT   for   v_sql ;
  loop
      fetch C_ACT into r_REFENENCE1,r_CUSTOM_ODR_NO,r_CUSTOMER_NAME,r_BIZ_TYP,r_ODR_TYP
       ,r_ODR_TIME,r_VEHICLE_TYP,r_TEMPERATURE1,r_TEMPERATURE2,r_SLF_PICKUP_FLAG,r_SLF_DELIVER_FLAG
       ,r_NOTES,r_PRE_LOAD_TIME,r_PRE_UNLOAD_TIME,r_LOAD_CODE
       ,r_LOAD_AREA_NAME,r_LOAD_AREA_NAME2,r_LOAD_AREA_NAME3,r_LOAD_ADDRESS,r_LOAD_CONTACT
       ,r_LOAD_TEL,r_UNLOAD_CODE,r_UNLOAD_AREA_NAME,r_UNLOAD_AREA_NAME2,r_UNLOAD_AREA_NAME3
       ,r_UNLOAD_ADDRESS,r_UNLOAD_CONTACT,r_UNLOAD_TEL,r_SKU,r_SKU_NAME
       ,r_UOM,r_QNTY,r_TEMPERATURE,r_G_WGT,r_VOL,r_BTCH_NUM,r_USERID,r_LINE;            --V418A
      exit when C_ACT%notfound;

      tmp_value := array_var(r_REFENENCE1,r_CUSTOM_ODR_NO,r_CUSTOMER_NAME,r_BIZ_TYP,r_ODR_TYP
       ,r_ODR_TIME,r_VEHICLE_TYP,r_TEMPERATURE1,r_TEMPERATURE2,r_SLF_PICKUP_FLAG,r_SLF_DELIVER_FLAG
       ,r_NOTES,r_PRE_LOAD_TIME,r_PRE_UNLOAD_TIME,r_LOAD_CODE
       ,r_LOAD_AREA_NAME,r_LOAD_AREA_NAME2,r_LOAD_AREA_NAME3,r_LOAD_ADDRESS,r_LOAD_CONTACT
       ,r_LOAD_TEL,r_UNLOAD_CODE,r_UNLOAD_AREA_NAME,r_UNLOAD_AREA_NAME2,r_UNLOAD_AREA_NAME3
       ,r_UNLOAD_ADDRESS,r_UNLOAD_CONTACT,r_UNLOAD_TEL,r_SKU,r_SKU_NAME
       ,r_UOM,r_QNTY,r_TEMPERATURE,r_G_WGT,r_VOL,r_BTCH_NUM,r_USERID);

      if r_CUSTOMER_NAME is null then  --当客户单号为空时，可认为与上一行信息相同，直接跳到明细列进行校验。
          pos := 15;
      end if;

      for i in pos..tmp_key.count loop
           t_cur_column := tmp_key(i);
           t_cur_value := tmp_value(i);
           t_cur_name := tmp_name(i);
           for m in verify loop
               t_verify_type := m.verify_type;
               t_table_name := m.table_name;
               t_verify_code := m.verify_code;
               t_msg := m.error_msg;

               if t_verify_type = 0 then  --非空检验
                   if t_cur_value is null or length(t_cur_value) < 1 then
                       OUTPUT_RESULLT := OUTPUT_RESULLT || '<br />数据第'|| r_LINE ||'行【'|| t_cur_name ||'】列' || t_msg;
                       if length(OUTPUT_RESULLT) > 1000 then
                           OUTPUT_RESULLT:='01'||OUTPUT_RESULLT;
                           return;
                       end if;
                   end if;
               elsif t_verify_type = 1 and length(t_cur_value) > 0 then --唯一性校验
                   temp_sql := 'select count(1) from ' || t_table_name || ' where ' || t_cur_column || '=''' || t_cur_value || '''';
                   execute immediate temp_sql into r_count;
                   if r_count > 0 then
                        OUTPUT_RESULLT := OUTPUT_RESULLT || '<br />数据第'|| r_LINE ||'行【'|| t_cur_name ||'】列' || t_msg;
                        if length(OUTPUT_RESULLT) > 1000 then
                           OUTPUT_RESULLT:='01'||OUTPUT_RESULLT;
                           return;
                        end if;
                   else
                      temp_sql := 'select count(1) from TMP_ORDER_IMPORT where TMPID = ''' || IN_TMPID || ''' AND USER_ID = '''
                        || IN_USERID || ''' and ' || t_cur_column || '= ''' || t_cur_value || '''';
                      execute immediate temp_sql into r_count;
                      if r_count > 1 then
                          OUTPUT_RESULLT := OUTPUT_RESULLT || '<br />数据第'|| r_LINE ||'行【'|| t_cur_name ||'】列' || t_msg;
                          if length(OUTPUT_RESULLT) > 1000 then
                               OUTPUT_RESULLT:='01'||OUTPUT_RESULLT;
                               return;
                           end if;
                      end if;
                   end if;
               elsif t_verify_type = 2 and length(t_verify_code) > 0 and length(t_cur_value) > 0 then
                   temp_sql := REPLACE(t_verify_code, '?', t_cur_value);
                   execute immediate temp_sql into r_count;
                   if r_count = 0 then
                       OUTPUT_RESULLT := OUTPUT_RESULLT || '<br />数据第'|| r_LINE ||'行【'|| t_cur_name ||'】列值为[' || t_cur_value || '],' || t_msg;
                       if length(OUTPUT_RESULLT) > 1000 then
                           OUTPUT_RESULLT:='01'||OUTPUT_RESULLT;
                           return;
                       end if;
                   else
                      if t_cur_column = 'SKU' then  --如果是只填写SKU，则将SKU对应的名称写到临时表，避免校验SKU_NAME时因为无值不通过
                          select sku_cname into op_skuname from BAS_SKU where sku = t_cur_value;
                          update TMP_ORDER_IMPORT set SKU_NAME = op_skuname
                            WHERE TMPID = IN_TMPID AND USER_ID = IN_USERID AND LINENO = r_LINE;
                          tmp_value(30) := op_skuname;
                      end if;
                   end if;
               elsif t_verify_type = 3 then   --二选一非空校验
                   if t_cur_value is null then
                       select verify_code into tmp_verify_code from t_input_excel_verify where column_name = t_verify_code and verify_type = '2' and type_name = 'TMP_ORDER_IMPORT';
                       temp_sql := 'select ' || t_verify_code || ' from TMP_ORDER_IMPORT WHERE TMPID = ''' || IN_TMPID || ''' AND USER_ID = ''' || IN_USERID || ''' and LINENO = ''' || r_LINE || '''';
                       execute immediate temp_sql into temp_result;
                       temp_sql := REPLACE(tmp_verify_code, '?', temp_result);
                       execute immediate temp_sql into r_count;
                       if r_count = 0 then
                           OUTPUT_RESULLT := OUTPUT_RESULLT || '<br />数据第'|| r_LINE ||'行【'|| t_cur_name ||'】列' || t_msg;
                           if length(OUTPUT_RESULLT) > 1000 then
                               OUTPUT_RESULLT:='01'||OUTPUT_RESULLT;
                               return;
                           end if;
                       end if;
                   end if;
               elsif t_verify_type = 4 and length(t_verify_code) > 0 and length(t_cur_value) > 0 then --长度校验
                   temp_sql := REPLACE(t_verify_code, '?', t_cur_value);
                   execute immediate temp_sql into r_count;
                   if r_count = 0 then
                       OUTPUT_RESULLT := OUTPUT_RESULLT || '<br />数据第'|| r_LINE ||'行【'|| t_cur_name ||'】列' || t_msg;
                       if length(OUTPUT_RESULLT) > 1000 then
                           OUTPUT_RESULLT:='01'||OUTPUT_RESULLT;
                           return;
                       end if;
                   end if;
               end if;
           end loop;
      end loop;
      <<next_loop>>
          t_cur_column := '';
  end loop;
  close C_ACT;

  if length(OUTPUT_RESULLT) > 0 then
    OUTPUT_RESULLT:='01'||OUTPUT_RESULLT;
    rollback;
    -- 失败删除中间表
    delete from TMP_ORDER_IMPORT where TMPID = IN_TMPID;
    commit;
    return;
  end if;
  --插入数据
  Open  C_ACT   for   v_sql ;
  loop
      fetch C_ACT into r_REFENENCE1,r_CUSTOM_ODR_NO,r_CUSTOMER_NAME,r_BIZ_TYP,r_ODR_TYP
       ,r_ODR_TIME,r_VEHICLE_TYP,r_TEMPERATURE1,r_TEMPERATURE2,r_SLF_PICKUP_FLAG,r_SLF_DELIVER_FLAG
       ,r_NOTES,r_PRE_LOAD_TIME,r_PRE_UNLOAD_TIME,r_LOAD_CODE
       ,r_LOAD_AREA_NAME,r_LOAD_AREA_NAME2,r_LOAD_AREA_NAME3,r_LOAD_ADDRESS,r_LOAD_CONTACT
       ,r_LOAD_TEL,r_UNLOAD_CODE,r_UNLOAD_AREA_NAME,r_UNLOAD_AREA_NAME2,r_UNLOAD_AREA_NAME3
       ,r_UNLOAD_ADDRESS,r_UNLOAD_CONTACT,r_UNLOAD_TEL,r_SKU,r_SKU_NAME
       ,r_UOM,r_QNTY,r_TEMPERATURE,r_G_WGT,r_VOL,r_BTCH_NUM,r_USERID,r_LINE;            --V418A
      exit when C_ACT%notfound;

      tmp_value := array_var(r_REFENENCE1,r_CUSTOM_ODR_NO,r_CUSTOMER_NAME,r_BIZ_TYP,r_ODR_TYP
       ,r_ODR_TIME,r_VEHICLE_TYP,r_TEMPERATURE1,r_TEMPERATURE2,r_SLF_PICKUP_FLAG,r_SLF_DELIVER_FLAG
       ,r_NOTES,r_PRE_LOAD_TIME,r_PRE_UNLOAD_TIME,r_LOAD_CODE
       ,r_LOAD_AREA_NAME,r_LOAD_AREA_NAME2,r_LOAD_AREA_NAME3,r_LOAD_ADDRESS,r_LOAD_CONTACT
       ,r_LOAD_TEL,r_UNLOAD_CODE,r_UNLOAD_AREA_NAME,r_UNLOAD_AREA_NAME2,r_UNLOAD_AREA_NAME3
       ,r_UNLOAD_ADDRESS,r_UNLOAD_CONTACT,r_UNLOAD_TEL,r_SKU,r_SKU_NAME
       ,r_UOM,r_QNTY,r_TEMPERATURE,r_G_WGT,r_VOL,r_BTCH_NUM,r_USERID);

      exec_sql := '';
      exec_value := '';
      i_size := 1;
      i_key := LST();
      i_value := LST();
      if r_CUSTOMER_NAME is not null then
          for h in head loop
              tmp_table := h.table_name;
              tmp_column := h.column_name;
              tmp_param_type := h.param_type;
              tmp_replace_field := h.replace_field;
              tmp_default_value := h.default_value;
              --exec_sql := exec_sql || ',' || h.column_name;
              
              i_key.extend();
              i_key(i_size) := h.column_name;
              if h.param_type = '0' then  --定制
                  i_value.extend();
                  i_value(i_size) := h.default_value;
                  --exec_value := exec_value || ',' || h.default_value;
              elsif h.param_type = '1' then  --从执行结果取值
                  temp_sql := h.default_value;
                  execute immediate temp_sql into temp_result;
                  --exec_value := exec_value || ',''' || temp_result || '''';
                  i_value.extend();
                  i_value(i_size) := temp_result;
              elsif h.param_type = '2' then   --将？替换成参数值，并从结果取值
                  for i in 1..tmp_key.count loop
                      t_cur_column := tmp_key(i);
                      if t_cur_column = h.Replace_Field then
                          t_cur_value := tmp_value(i);
                          exit;
                      end if;
                  end loop;
                  if t_cur_value is not null then
                      temp_sql := REPLACE(h.default_value, '?', t_cur_value);
                      execute immediate temp_sql into temp_result;
                      --exec_value := exec_value || ',''' || temp_result || '''';
                      i_value.extend();
                      i_value(i_size) := temp_result;
                  else
                      --exec_value := exec_value || ',NULL';
                      i_value.extend();
                      i_value(i_size) := NULL;
                  end if;
                  if  h.column_name = 'CUSTOMER_ID' then
                      op_customer_id := temp_result;
                  elsif h.column_name = 'CUSTOMER_NAME' then
                      op_customer_name := temp_result;
                  end if;
              elsif h.param_type = '3' then  --直接从临时表上取值
                  for i in 1..tmp_key.count loop
                      t_cur_column := tmp_key(i);
                      if t_cur_column = h.column_name then
                          t_cur_value := tmp_value(i);
                          exit;
                      end if;
                  end loop;
                  if t_cur_value is null and h.column_name = 'CUSTOMER_NAME' then
                     goto next_loop;
                  end if;
                  if t_cur_value is null then
                      --exec_value := exec_value || ',NULL';
                      i_value.extend();
                      i_value(i_size) := NULL;
                  else
                      --exec_value := exec_value || ',''' || t_cur_value || '''';
                      i_value.extend();
                      i_value(i_size) := t_cur_value;
                  end if;
             end if;
             i_size := i_size + 1;
          end loop;
      end if;
      <<next_loop>>
          OUTPUT_RESULLT := '';
      if i_key.count > 0 then
          --获取托运单号
          SP_GET_IDSEQ('ORDER',op_odr_no);

          exec_sql := '';
          exec_value := '';
          for i in 1..i_key.count loop
              t_key := i_key(i);
              t_value := i_value(i);
              exec_sql := exec_sql || ',' || t_key;
              if t_value is null then 
                  exec_value := exec_value || ',NULL';
              else
                  exec_value := exec_value || ','''|| t_value || '''';
              end if;
          end loop;
          exec_sql := 'INSERT INTO TRANS_ORDER_HEADER(ODR_NO,ADDWHO,ADDTIME' || exec_sql || ') VALUES(''' || op_odr_no || ''',''' || IN_USERID || ''',sysdate' || exec_value || ')';
          execute immediate exec_sql;

          odr_lst.extend();
          odr_lst(odr_lst.count) := op_odr_no;
      end if;
      exec_sql := '';
      exec_value := '';
      op_packid := '2EEB495B515049B3A9CD76572DDDC999';
      i_key := LST();
      i_value := LST();
      i_size := 1;
      for h in item loop
          tmp_table := h.table_name;
          tmp_column := h.column_name;
          tmp_param_type := h.param_type;
          tmp_replace_field := h.replace_field;
          tmp_default_value := h.default_value;
          if h.param_type = '0' then  --定制
              exec_sql := exec_sql || ',' || h.column_name;
              exec_value := exec_value || ',' || h.default_value;
              i_key.extend();
              i_key(i_size) := h.column_name;
              i_value.extend();
              i_value(i_size) := h.default_value;
              i_size := i_size + 1;
          elsif h.param_type = '1' then  --从执行结果取值
              exec_sql := exec_sql || ',' || h.column_name;
              temp_sql := h.default_value;
              execute immediate temp_sql into temp_result;
              exec_value := exec_value || ',''' || temp_result || '''';
              i_key.extend();
              i_key(i_size) := h.column_name;
              i_value.extend();
              i_value(i_size) := temp_result;
              i_size := i_size + 1;
          elsif h.param_type = '2' then   --将？替换成参数值，并从结果取值
              exec_sql := exec_sql || ',' || h.column_name;
              i_key.extend();
              i_key(i_size) := h.column_name;
              for i in 1..tmp_key.count loop
                  t_cur_column := tmp_key(i);
                  if t_cur_column = h.replace_field then
                      t_cur_value := tmp_value(i);
                      exit;
                  end if;
              end loop;
              if t_cur_value is not null then
                  temp_sql := REPLACE(h.default_value, '?', t_cur_value);
                  execute immediate temp_sql into temp_result;
                  exec_value := exec_value || ',''' || temp_result || '''';
                  i_value.extend();
                  i_value(i_size) := temp_result;
              else
                  exec_value := exec_value || ',NULL';
                  i_value.extend();
                  i_value(i_size) := NULL;
              end if;
              i_size := i_size + 1;
          elsif h.param_type = '3' then  --直接从临时表上取值
              for i in 1..tmp_key.count loop
                  t_cur_column := tmp_key(i);
                  if t_cur_column = h.column_name then
                      t_cur_value := tmp_value(i);
                      exit;
                  end if;
              end loop;
              if h.column_name = 'LOAD_CODE' then
                  load_code := t_cur_value;
                  if load_code is not null then
                      exec_sql := exec_sql || ',' || h.column_name;
                      exec_value := exec_value || ',''' || t_cur_value || '''';
                      
                      i_key.extend();
                      i_key(i_size) := h.column_name;
                      i_value.extend();
                      i_value(i_size) := t_cur_value;
                      i_size := i_size + 1;
                  end if;
              elsif h.column_name = 'UNLOAD_CODE' then
                  unload_code := t_cur_value;
                  if unload_code is not null then
                      exec_sql := exec_sql || ',' || h.column_name;
                      exec_value := exec_value || ',''' || t_cur_value || '''';
                      
                      i_key.extend();
                      i_key(i_size) := h.column_name;
                      i_value.extend();
                      i_value(i_size) := t_cur_value;
                      i_size := i_size + 1;
                  end if;
              elsif h.column_name = 'UNLOAD_AREA_NAME' then
                  op_unload_area_name := t_cur_value;
                  if op_unload_area_name is not null then
                      exec_sql := exec_sql || ',' || h.column_name;
                      exec_value := exec_value || ',''' || t_cur_value || '''';
                      
                      i_key.extend();
                      i_key(i_size) := h.column_name;
                      i_value.extend();
                      i_value(i_size) := t_cur_value;
                      i_size := i_size + 1;
                  end if;
              elsif h.column_name = 'UNLOAD_AREA_NAME2' then
                  op_unload_area_name2 := t_cur_value;
                  if op_unload_area_name2 is not null then
                      exec_sql := exec_sql || ',' || h.column_name;
                      exec_value := exec_value || ',''' || t_cur_value  || '''';
                      
                      i_key.extend();
                      i_key(i_size) := h.column_name;
                      i_value.extend();
                      i_value(i_size) := t_cur_value;
                      i_size := i_size + 1;
                  end if;
              elsif h.column_name = 'UNLOAD_AREA_NAME3' then
                  op_unload_area_name3 := t_cur_value;
                  if op_unload_area_name3 is not null then
                      exec_sql := exec_sql || ',' || h.column_name;
                      exec_value := exec_value || ',''' || t_cur_value || '''';
                      
                      i_key.extend();
                      i_key(i_size) := h.column_name;
                      i_value.extend();
                      i_value(i_size) := t_cur_value;
                      i_size := i_size + 1;
                  end if;
              elsif h.column_name = 'UNLOAD_ADDRESS' then
                  op_unload_address := t_cur_value;
                  if op_unload_address is not null then
                      exec_sql := exec_sql || ',' || h.column_name;
                      exec_value := exec_value || ',''' || t_cur_value || '''';
                      
                      i_key.extend();
                      i_key(i_size) := h.column_name;
                      i_value.extend();
                      i_value(i_size) := t_cur_value;
                      i_size := i_size + 1;
                  end if;
              elsif h.column_name = 'UNLOAD_CONTACT' then
                  op_unload_contact := t_cur_value;
                  if op_unload_contact is not null then
                      exec_sql := exec_sql || ',' || h.column_name;
                      exec_value := exec_value || ',''' || t_cur_value || '''';
                      
                      i_key.extend();
                      i_key(i_size) := h.column_name;
                      i_value.extend();
                      i_value(i_size) := t_cur_value;
                      i_size := i_size + 1;
                  end if;
              elsif h.column_name = 'UNLOAD_TEL' then
                  op_unload_tel := t_cur_value;
                  if op_unload_tel is not null then
                      exec_sql := exec_sql || ',' || h.column_name;
                      exec_value := exec_value || ',''' || t_cur_value || '''';
                      
                      i_key.extend();
                      i_key(i_size) := h.column_name;
                      i_value.extend();
                      i_value(i_size) := t_cur_value;
                      i_size := i_size + 1;
                  end if;
              elsif h.column_name = 'LOAD_AREA_NAME' then
                  op_load_area_name := t_cur_value;
                  if op_load_area_name is not null then
                      exec_sql := exec_sql || ',' || h.column_name;
                      exec_value := exec_value || ',''' || t_cur_value || '''';
                      
                      i_key.extend();
                      i_key(i_size) := h.column_name;
                      i_value.extend();
                      i_value(i_size) := t_cur_value;
                      i_size := i_size + 1;
                  end if;
              elsif h.column_name = 'LOAD_AREA_NAME2' then
                  op_load_area_name2 := t_cur_value;
                  if op_load_area_name2 is not null then
                      exec_sql := exec_sql || ',' || h.column_name;
                      exec_value := exec_value || ',''' || t_cur_value || '''';
                      
                      i_key.extend();
                      i_key(i_size) := h.column_name;
                      i_value.extend();
                      i_value(i_size) := t_cur_value;
                      i_size := i_size + 1;
                  end if;
              elsif h.column_name = 'LOAD_AREA_NAME3' then
                  op_load_area_name3 := t_cur_value;
                  if op_load_area_name3 is not null then
                      exec_sql := exec_sql || ',' || h.column_name;
                      exec_value := exec_value || ',''' || t_cur_value || '''';
                      
                      i_key.extend();
                      i_key(i_size) := h.column_name;
                      i_value.extend();
                      i_value(i_size) := t_cur_value;
                      i_size := i_size + 1;
                  end if;
              elsif h.column_name = 'LOAD_ADDRESS' then
                  op_load_address := t_cur_value;
                  if op_load_address is not null then
                      exec_sql := exec_sql || ',' || h.column_name;
                      exec_value := exec_value || ',''' || t_cur_value || '''';
                      
                      i_key.extend();
                      i_key(i_size) := h.column_name;
                      i_value.extend();
                      i_value(i_size) := t_cur_value;
                      i_size := i_size + 1;
                  end if;
              elsif h.column_name = 'LOAD_CONTACT' then
                  op_load_contact := t_cur_value;
                  if op_load_contact is not null then
                      exec_sql := exec_sql || ',' || h.column_name;
                      exec_value := exec_value || ',''' || t_cur_value || '''';
                      
                      i_key.extend();
                      i_key(i_size) := h.column_name;
                      i_value.extend();
                      i_value(i_size) := t_cur_value;
                      i_size := i_size + 1;
                  end if;
              elsif h.column_name = 'LOAD_TEL' then
                  op_load_tel := t_cur_value;
                  if op_load_tel is not null then
                      exec_sql := exec_sql || ',' || h.column_name;
                      exec_value := exec_value || ',''' || t_cur_value || '''';
                      
                      i_key.extend();
                      i_key(i_size) := h.column_name;
                      i_value.extend();
                      i_value(i_size) := t_cur_value;
                      i_size := i_size + 1;
                  end if;
              elsif h.column_name = 'SKU' then
                  if t_cur_value is not null then
                      select id into op_packid from bas_sku where sku = t_cur_value;
                  end if;
                  exec_sql := exec_sql || ',' || h.column_name;
                  exec_value := exec_value || ',''' || t_cur_value || '''';
                  
                  i_key.extend();
                  i_key(i_size) := h.column_name;
                  i_value.extend();
                  i_value(i_size) := t_cur_value;
                  i_size := i_size + 1;
              else
                  exec_sql := exec_sql || ',' || h.column_name;
                  exec_value := exec_value || ',''' || t_cur_value || '''';
                  
                  i_key.extend();
                  i_key(i_size) := h.column_name;
                  i_value.extend();
                  i_value(i_size) := t_cur_value;
                  i_size := i_size + 1;
              end if;
         elsif h.param_type = '4' then --发货地址特殊处理
              if load_code is null then  --先自动录入地址信息再处理
                  select F_GET_DEFAULT_ORGBYUSER(IN_USERID, 0) into op_exec_org_id from dual;
                  select sys_guid() into op_id from dual;
                  select area_code into op_load_area_id from bas_area where area_cname=op_load_area_name and area_level=3 and rownum=1;
                  select area_code into op_load_area_id2 from bas_area where area_cname=op_load_area_name2 and area_level=4 and rownum=1;
                  load_code := substr(F_ZJM(op_load_address),0,32);
                  op_load_name := substr(op_load_address,0,100);
                  if op_load_area_name3 is not null then
                      select area_code into op_load_area_id3 from bas_area where area_cname=op_load_area_name3 and area_level=5 and rownum=1;
                  end if;

                  select count(1) into r_count from bas_address where customer_id = op_customer_id and addr_code = load_code;
                  if r_count > 0 then
                      select id,addr_name,area_id,area_id2,area_id3 into op_id,op_load_name,op_load_area_id,op_load_area_id2,op_load_area_id3
                        from bas_address where customer_id = op_customer_id and addr_code = load_code;
                  else
                      --插入地址
                      insert into bas_address(id,addr_code,customer_id,customer_name,load_flag,transfer_flag,recv_flag,area_id,area_name,addr_name,address,
                        cont_name,cont_tel,addr_typ,create_org_id,exec_org_id,enable_flag,addtime,addwho,area_id2,area_name2,area_id3,area_name3)
                      values(op_id,load_code,op_customer_id,op_customer_name,'Y','N','N',op_load_area_id,op_load_area_name,op_load_name,op_load_address,
                        op_load_contact,op_load_tel,'9E0057747CC24A4BB998749752D2C42E',op_exec_org_id,op_exec_org_id,'Y',sysdate,IN_USERID,op_load_area_id2,op_load_area_name2,op_load_area_id3,op_load_area_name3);
                  end if;

                  exec_sql := exec_sql || ',LOAD_ID,LOAD_CODE,LOAD_NAME,LOAD_AREA_ID,LOAD_AREA_ID2,LOAD_AREA_ID3';
                  exec_value := exec_value || ',''' || op_id || ''',''' || load_code || ''',''' || op_load_name || ''',''' || op_load_area_id || ''','''
                     || op_load_area_id2 || ''',''' || op_load_area_id3 || '''';
                  i_key.extend();
                  i_key(i_size) := 'LOAD_ID';
                  i_value.extend();
                  i_value(i_size) := op_id;
                  i_size := i_size + 1;
                  i_key.extend();
                  i_key(i_size) := 'LOAD_CODE';
                  i_value.extend();
                  i_value(i_size) := load_code;
                  i_size := i_size + 1;
                  i_key.extend();
                  i_key(i_size) := 'LOAD_NAME';
                  i_value.extend();
                  i_value(i_size) := op_load_name;
                  i_size := i_size + 1;
                  i_key.extend();
                  i_key(i_size) := 'LOAD_AREA_ID';
                  i_value.extend();
                  i_value(i_size) := op_load_area_id;
                  i_size := i_size + 1;
                  i_key.extend();
                  i_key(i_size) := 'LOAD_AREA_ID2';
                  i_value.extend();
                  i_value(i_size) := op_load_area_id2;
                  i_size := i_size + 1;
                  i_key.extend();
                  i_key(i_size) := 'LOAD_AREA_ID2';
                  i_value.extend();
                  i_value(i_size) := op_load_area_id2;
                  i_size := i_size + 1;
              else
                  select count(1) into r_count from bas_address where addr_code = load_code;
                  if r_count > 1 then
                      select count(1) into r_count from bas_address where customer_id = op_customer_id and addr_code = load_code;
                      if r_count > 1 or r_count = 0 then
                          OUTPUT_RESULLT := OUTPUT_RESULLT || '<br />数据第'|| r_LINE ||'行收货方代码['|| unload_code ||']重复';
                          for h in 1..odr_lst.count loop
                              op_odr_no := odr_lst(h);
                              delete from trans_order_header where odr_no = op_odr_no;
                              delete from trans_order_item where odr_no = op_odr_no;
                          end loop;
                          commit;
                          return;
                      else
                          select id,addr_name,area_id,area_name,area_id2,area_name2,area_id3,area_name3,cont_name,cont_tel,address
                          into op_id,op_load_name,op_load_area_id,op_load_area_name,op_load_area_id2,op_load_area_name2,op_load_area_id3,op_load_area_name3,tmp_load_contact,tmp_load_tel,tmp_load_address
                          from bas_address where customer_id = op_customer_id and addr_code = load_code;
                      end if;
                  else
                      select id,addr_name,area_id,area_name,area_id2,area_name2,area_id3,area_name3,cont_name,cont_tel,address
                      into op_id,op_load_name,op_load_area_id,op_load_area_name,op_load_area_id2,op_load_area_name2,op_load_area_id3,op_load_area_name3,tmp_load_contact,tmp_load_tel,tmp_load_address
                      from bas_address where addr_code = load_code;
                  end if;

                  exec_sql := exec_sql || ',LOAD_ID,LOAD_NAME,LOAD_AREA_ID,LOAD_AREA_NAME,LOAD_AREA_ID2,LOAD_AREA_NAME2,LOAD_AREA_ID3,LOAD_AREA_NAME3';
                  exec_value := exec_value || ',''' || op_id || ''',''' || op_load_name || ''',''' || op_load_area_id || ''',''' || op_load_area_name ||''','''
                     || op_load_area_id2 || ''',''' || op_load_area_name2 ||''',''' || op_load_area_id3 || ''',''' || op_load_area_name3 || '''';
                  
                  i_key.extend();
                  i_key(i_size) := 'LOAD_ID';
                  i_value.extend();
                  i_value(i_size) := op_id;
                  i_size := i_size + 1;
                  i_key.extend();
                  i_key(i_size) := 'LOAD_NAME';
                  i_value.extend();
                  i_value(i_size) := op_load_name;
                  i_size := i_size + 1;      
                  i_key.extend();
                  i_key(i_size) := 'LOAD_AREA_ID';
                  i_value.extend();
                  i_value(i_size) := op_load_area_id;
                  i_size := i_size + 1;   
                  i_key.extend();
                  i_key(i_size) := 'LOAD_AREA_ID2';
                  i_value.extend();
                  i_value(i_size) := op_load_area_id2;
                  i_size := i_size + 1;  
                  i_key.extend();
                  i_key(i_size) := 'LOAD_AREA_ID3';
                  i_value.extend();
                  i_value(i_size) := op_load_area_id3;
                  i_size := i_size + 1;
                  
                  c_area_name := 'N';
                  c_area_name2 := 'N';
                  c_area_name3 := 'N';
                  c_address := 'N';
                  c_contact := 'N';
                  c_tel := 'N';
                  for i in 1..i_key.count loop
                      t_key := i_key(i);
                      if t_key = 'LOAD_AREA_NAME' then
                          c_area_name := 'Y';
                          i_value(i) := op_load_area_name;
                      elsif t_key = 'LOAD_AREA_NAME2' then
                          c_area_name2 := 'Y';
                          i_value(i) := op_load_area_name2;
                      elsif t_key = 'LOAD_AREA_NAME3' then
                          c_area_name3 := 'Y';
                          i_value(i) := op_load_area_name3;
                      elsif t_key = 'LOAD_ADDRESS' then
                          c_address := 'Y';
                      elsif t_key = 'LOAD_CONTACT' then
                          c_contact := 'Y';
                      elsif t_key = 'LOAD_TEL' then
                          c_tel := 'Y';
                      end if;
                  end loop;
                  
                  if c_area_name = 'N' then
                      i_key.extend();
                      i_key(i_size) := 'LOAD_AREA_NAME';
                      i_value.extend();
                      i_value(i_size) := op_load_area_name;
                      i_size := i_size + 1;
                  end if;
                  if c_area_name2 = 'N' then
                      i_key.extend();
                      i_key(i_size) := 'LOAD_AREA_NAME2';
                      i_value.extend();
                      i_value(i_size) := op_load_area_name2;
                      i_size := i_size + 1;
                  end if;
                  if c_area_name3 = 'N' then
                      i_key.extend();
                      i_key(i_size) := 'LOAD_AREA_NAME3';
                      i_value.extend();
                      i_value(i_size) := op_load_area_name3;
                      i_size := i_size + 1;
                  end if;
                  if c_address = 'N' then
                      i_key.extend();
                      i_key(i_size) := 'LOAD_ADDRESS';
                      i_value.extend();
                      i_value(i_size) := tmp_load_address;
                      i_size := i_size + 1;
                  end if;
                  if c_contact = 'N' then
                      i_key.extend();
                      i_key(i_size) := 'LOAD_CONTACT';
                      i_value.extend();
                      i_value(i_size) := tmp_load_contact;
                      i_size := i_size + 1;
                  end if;
                  if c_tel = 'N' then
                      i_key.extend();
                      i_key(i_size) := 'LOAD_TEL';
                      i_value.extend();
                      i_value(i_size) := tmp_load_tel;
                      i_size := i_size + 1;
                  end if;
                  /*if op_load_address is null then
                      exec_sql := exec_sql || ',LOAD_ADDRESS';
                      exec_value := exec_value || ',''' || tmp_load_address || '''';
                      i_size := i_size + 1;
                      
                  end if;
                  if op_load_contact is null then
                      exec_sql := exec_sql || ',LOAD_CONTACT';
                      exec_value := exec_value || ',''' || tmp_load_contact || '''';
                  end if;
                  if op_load_tel is null then
                      exec_sql := exec_sql || ',LOAD_TEL';
                      exec_value := exec_value || ',''' || tmp_load_tel || '''';
                  end if;*/
       
                    
              end if;
              --exec_value := exec_value || ',' || t_cur_value;
         elsif h.param_type = '5' then --收货地址特殊处理
              if unload_code is null then  --先自动录入地址信息再处理
                  select F_GET_DEFAULT_ORGBYUSER(IN_USERID, 0) into op_exec_org_id from dual;
                  select sys_guid() into op_id from dual;
                  select area_code into op_unload_area_id from bas_area where area_cname=op_unload_area_name and area_level=3 and rownum=1;
                  select area_code into op_unload_area_id2 from bas_area where area_cname=op_unload_area_name2 and area_level=4 and rownum=1;
                  unload_code := substr(F_ZJM(op_unload_address),0,32);
                  op_unload_name := substr(op_unload_address,0,100);
                  if op_unload_area_name3 is not null then
                      select area_code into op_unload_area_id3 from bas_area where area_cname=op_unload_area_name3 and area_level=5 and rownum=1;
                  end if;

                  select count(1) into r_count from bas_address where customer_id = op_customer_id and addr_code = unload_code;
                  if r_count > 0 then
                      select id,addr_name,area_id,area_id2,area_id3 into op_id,op_unload_name,op_unload_area_id,op_unload_area_id2,op_unload_area_id3
                      from bas_address where addr_code = unload_code and customer_id = op_customer_id;
                  else
                      --插入地址
                      insert into bas_address(id,addr_code,customer_id,customer_name,load_flag,transfer_flag,recv_flag,area_id,area_name,addr_name,address,
                        cont_name,cont_tel,addr_typ,create_org_id,exec_org_id,enable_flag,addtime,addwho,area_id2,area_name2,area_id3,area_name3)
                      values(op_id,unload_code,op_customer_id,op_customer_name,'N','N','Y',op_unload_area_id,op_unload_area_name,op_unload_name,op_unload_address,
                        op_unload_contact,op_unload_tel,'9E0057747CC24A4BB998749752D2C42E',op_exec_org_id,op_exec_org_id,'Y',sysdate,IN_USERID,op_unload_area_id2,op_unload_area_name2,op_unload_area_id3,op_unload_area_name3);
                  end if;
                  --exec_value := exec_value || ',''' || op_id || '''';

                  exec_sql := exec_sql || ',UNLOAD_ID,UNLOAD_CODE,UNLOAD_NAME,UNLOAD_AREA_ID,UNLOAD_AREA_ID2,UNLOAD_AREA_ID3';
                  exec_value := exec_value || ',''' || op_id || ''',''' || unload_code || ''',''' || op_unload_name || ''',''' || op_unload_area_id || ''','''
                     || op_unload_area_id2 || ''',''' || op_unload_area_id3 || '''';
                     
                  i_key.extend();
                  i_key(i_size) := 'UNLOAD_ID';
                  i_value.extend();
                  i_value(i_size) := op_id;
                  i_size := i_size + 1;
                  i_key.extend();
                  i_key(i_size) := 'UNLOAD_CODE';
                  i_value.extend();
                  i_value(i_size) := unload_code;
                  i_size := i_size + 1;
                  i_key.extend();
                  i_key(i_size) := 'UNLOAD_NAME';
                  i_value.extend();
                  i_value(i_size) := op_unload_name;
                  i_size := i_size + 1;
                  i_key.extend();
                  i_key(i_size) := 'UNLOAD_AREA_ID';
                  i_value.extend();
                  i_value(i_size) := op_unload_area_id;
                  i_size := i_size + 1;
                  i_key.extend();
                  i_key(i_size) := 'UNLOAD_AREA_ID2';
                  i_value.extend();
                  i_value(i_size) := op_unload_area_id2;
                  i_size := i_size + 1;
                  i_key.extend();
                  i_key(i_size) := 'UNLOAD_AREA_ID3';
                  i_value.extend();
                  i_value(i_size) := op_unload_area_id3;
                  i_size := i_size + 1;
              else
                  select count(1) into r_count from bas_address where addr_code = unload_code;
                  if r_count > 1 then
                      select count(1) into r_count from bas_address where customer_id = op_customer_id and addr_code = unload_code;
                      if r_count > 1 or r_count = 0 then
                          OUTPUT_RESULLT := OUTPUT_RESULLT || '<br />数据第'|| r_LINE ||'行收货方代码['|| unload_code ||']重复';
                          for h in 1..odr_lst.count loop
                              op_odr_no := odr_lst(h);
                              delete from trans_order_header where odr_no = op_odr_no;
                              delete from trans_order_item where odr_no = op_odr_no;
                          end loop;
                          commit;
                          return;
                      else
                          select id,addr_name,area_id,area_name,area_id2,area_name2,area_id3,area_name3,address,cont_name,cont_tel
                          into op_id,op_unload_name,op_unload_area_id,op_unload_area_name,op_unload_area_id2,op_unload_area_name2,op_unload_area_id3,op_unload_area_name3,tmp_unload_address,tmp_unload_contact,tmp_unload_tel
                          from bas_address where customer_id = op_customer_id and addr_code = unload_code;
                      end if;
                  else
                      select id,addr_name,area_id,area_name,area_id2,area_name2,area_id3,area_name3,address,cont_name,cont_tel
                      into op_id,op_unload_name,op_unload_area_id,op_unload_area_name,op_unload_area_id2,op_unload_area_name2,op_unload_area_id3,op_unload_area_name3,tmp_unload_address,tmp_unload_contact,tmp_unload_tel
                      from bas_address where addr_code = unload_code;
                  end if;
                  exec_sql := exec_sql || ',UNLOAD_ID,UNLOAD_NAME,UNLOAD_AREA_ID,UNLOAD_AREA_NAME,UNLOAD_AREA_ID2,UNLOAD_AREA_NAME2,UNLOAD_AREA_ID3,UNLOAD_AREA_NAME3';
                  exec_value := exec_value || ',''' || op_id || ''',''' || op_unload_name || ''',''' || op_unload_area_id || ''',''' || op_unload_area_name || ''','''
                     || op_unload_area_id2 || ''',''' || op_unload_area_name2 || ''',''' || op_unload_area_id3 || ''',''' || op_unload_area_name3 || '''';
                     
                  i_key.extend();
                  i_key(i_size) := 'UNLOAD_ID';
                  i_value.extend();
                  i_value(i_size) := op_id;
                  i_size := i_size + 1;
                  i_key.extend();
                  i_key(i_size) := 'UNLOAD_NAME';
                  i_value.extend();
                  i_value(i_size) := op_unload_name;
                  i_size := i_size + 1;      
                  i_key.extend();
                  i_key(i_size) := 'UNLOAD_AREA_ID';
                  i_value.extend();
                  i_value(i_size) := op_unload_area_id;
                  i_size := i_size + 1;   
                  i_key.extend();
                  i_key(i_size) := 'UNLOAD_AREA_ID2';
                  i_value.extend();
                  i_value(i_size) := op_unload_area_id2;
                  i_size := i_size + 1;  
                  i_key.extend();
                  i_key(i_size) := 'UNLOAD_AREA_ID3';
                  i_value.extend();
                  i_value(i_size) := op_unload_area_id3;
                  i_size := i_size + 1;
                  
                  c_area_name := 'N';
                  c_area_name2 := 'N';
                  c_area_name3 := 'N';
                  c_address := 'N';
                  c_contact := 'N';
                  c_tel := 'N';
                  for i in 1..i_key.count loop
                      t_key := i_key(i);
                      if t_key = 'UNLOAD_AREA_NAME' then
                          c_area_name := 'Y';
                          i_value(i) := op_unload_area_name;
                      elsif t_key = 'UNLOAD_AREA_NAME2' then
                          c_area_name2 := 'Y';
                          i_value(i) := op_unload_area_name2;
                      elsif t_key = 'UNLOAD_AREA_NAME3' then
                          c_area_name3 := 'Y';
                          i_value(i) := op_unload_area_name3;
                      elsif t_key = 'UNLOAD_ADDRESS' then
                          c_address := 'Y';
                      elsif t_key = 'UNLOAD_CONTACT' then
                          c_contact := 'Y';
                      elsif t_key = 'UNLOAD_TEL' then
                          c_tel := 'Y';
                      end if;
                  end loop;
                  
                  if c_area_name = 'N' then
                      i_key.extend();
                      i_key(i_size) := 'UNLOAD_AREA_NAME';
                      i_value.extend();
                      i_value(i_size) := op_unload_area_name;
                      i_size := i_size + 1;
                  end if;
                  if c_area_name2 = 'N' then
                      i_key.extend();
                      i_key(i_size) := 'UNLOAD_AREA_NAME2';
                      i_value.extend();
                      i_value(i_size) := op_unload_area_name2;
                      i_size := i_size + 1;
                  end if;
                  if c_area_name3 = 'N' then
                      i_key.extend();
                      i_key(i_size) := 'UNLOAD_AREA_NAME3';
                      i_value.extend();
                      i_value(i_size) := op_unload_area_name3;
                      i_size := i_size + 1;
                  end if;
                  if c_address = 'N' then
                      i_key.extend();
                      i_key(i_size) := 'UNLOAD_ADDRESS';
                      i_value.extend();
                      i_value(i_size) := tmp_unload_address;
                      i_size := i_size + 1;
                  end if;
                  if c_contact = 'N' then
                      i_key.extend();
                      i_key(i_size) := 'UNLOAD_CONTACT';
                      i_value.extend();
                      i_value(i_size) := tmp_unload_contact;
                      i_size := i_size + 1;
                  end if;
                  if c_tel = 'N' then
                      i_key.extend();
                      i_key(i_size) := 'UNLOAD_TEL';
                      i_value.extend();
                      i_value(i_size) := tmp_unload_tel;
                      i_size := i_size + 1;
                  end if;
                  /*if op_load_address is null then
                      exec_sql := exec_sql || ',LOAD_ADDRESS';
                      exec_value := exec_value || ',''' || tmp_load_address || '''';
                      i_size := i_size + 1;
                      
                  end if;*/
                  /*if op_unload_address is null then
                      exec_sql := exec_sql || ',UNLOAD_ADDRESS';
                      exec_value := exec_value || ',''' || tmp_unload_address || '''';
                  end if;
                  if op_unload_contact is null then
                      exec_sql := exec_sql || ',UNLOAD_CONTACT';
                      exec_value := exec_value || ',''' || tmp_unload_contact || '''';
                  end if;
                  if op_unload_tel is null then
                      exec_sql := exec_sql || ',UNLOAD_TEL';
                      exec_value := exec_value || ',''' || tmp_unload_tel || '''';
                  end if;*/
              end if;
              --exec_value := exec_value || ',' || t_cur_value;
         end if;
         <<next_loop>>
             OUTPUT_RESULLT := '';
      end loop;
      select nvl(max(odr_row),0) + 1 into op_odr_row from trans_order_item where odr_no = op_odr_no;
      exec_sql := '';
      exec_value := '';
      for i in 1..i_key.count loop
          t_key := i_key(i);
          t_value := i_value(i);
          exec_sql := exec_sql || ',' || t_key;
          if t_value is null then 
              exec_value := exec_value || ',NULL';
          else
              exec_value := exec_value || ','''|| t_value || '''';
          end if;
      end loop;
      
      exec_sql := 'INSERT INTO TRANS_ORDER_ITEM(ODR_NO,ODR_ROW,ADDWHO,PACK_ID,ADDTIME' || exec_sql || ') VALUES(''' || op_odr_no || ''',' || op_odr_row || ',''' || IN_USERID || ''',''' || op_packid ||''',sysdate' || exec_value || ')';
      execute immediate exec_sql;

      ORDER_QTY_COUNT(op_odr_no, OUTPUT_RESULLT); --汇总订单信息
      --更新订单发货点和收货点信息
      UPDATE TRANS_ORDER_HEADER SET (LOAD_ID,LOAD_NAME,LOAD_AREA_ID,LOAD_AREA_NAME,LOAD_AREA_ID2,LOAD_AREA_NAME2,LOAD_AREA_ID3,LOAD_AREA_NAME3,LOAD_ADDRESS,LOAD_CONTACT,LOAD_TEL,LOAD_CODE)= ( select LOAD_ID,LOAD_NAME,LOAD_AREA_ID,LOAD_AREA_NAME,LOAD_AREA_ID2,LOAD_AREA_NAME2,LOAD_AREA_ID3,LOAD_AREA_NAME3,LOAD_ADDRESS,LOAD_CONTACT,LOAD_TEL,LOAD_CODE  from TRANS_ORDER_ITEM where TRANS_ORDER_HEADER.ODR_NO = TRANS_ORDER_ITEM.ODR_NO and TRANS_ORDER_ITEM.ODR_ROW = (select min(odr_row) from trans_order_item where ODR_NO = op_odr_no)) where TRANS_ORDER_HEADER.ODR_NO = op_odr_no;
      UPDATE TRANS_ORDER_HEADER SET (UNLOAD_ID,UNLOAD_NAME,UNLOAD_AREA_ID,UNLOAD_AREA_NAME,UNLOAD_AREA_ID2,UNLOAD_AREA_NAME2,UNLOAD_AREA_ID3,UNLOAD_AREA_NAME3,UNLOAD_ADDRESS,UNLOAD_CONTACT,UNLOAD_TEL,UNLOAD_CODE)= ( select UNLOAD_ID,UNLOAD_NAME,UNLOAD_AREA_ID,UNLOAD_AREA_NAME,UNLOAD_AREA_ID2,UNLOAD_AREA_NAME2,UNLOAD_AREA_ID3,UNLOAD_AREA_NAME3,UNLOAD_ADDRESS,UNLOAD_CONTACT,UNLOAD_TEL,UNLOAD_CODE  from TRANS_ORDER_ITEM where TRANS_ORDER_HEADER.ODR_NO = TRANS_ORDER_ITEM.ODR_NO and TRANS_ORDER_ITEM.ODR_ROW = (select max(odr_row) from trans_order_item where ODR_NO = op_odr_no)) where TRANS_ORDER_HEADER.ODR_NO = op_odr_no;

      OUTPUT_RESULLT := '00';
  end loop;
  close C_ACT;
  commit;

  delete from TMP_ORDER_IMPORT WHERE TMPID = IN_TMPID;
  /*for h in 1..odr_lst.count loop
      op_odr_no := odr_lst(h);
      ORDER_QTY_COUNT(op_odr_no, OUTPUT_RESULLT); --汇总订单信息
      --更新订单发货点和收货点信息
      UPDATE TRANS_ORDER_HEADER SET (LOAD_ID,LOAD_NAME,LOAD_AREA_ID,LOAD_AREA_NAME,LOAD_AREA_ID2,LOAD_AREA_NAME2,LOAD_AREA_ID3,LOAD_AREA_NAME3,LOAD_ADDRESS,LOAD_CONTACT,LOAD_TEL,LOAD_CODE)= ( select LOAD_ID,LOAD_NAME,LOAD_AREA_ID,LOAD_AREA_NAME,LOAD_AREA_ID2,LOAD_AREA_NAME2,LOAD_AREA_ID3,LOAD_AREA_NAME3,LOAD_ADDRESS,LOAD_CONTACT,LOAD_TEL,LOAD_CODE  from TRANS_ORDER_ITEM where TRANS_ORDER_HEADER.ODR_NO = TRANS_ORDER_ITEM.ODR_NO and TRANS_ORDER_ITEM.ODR_ROW = (select min(odr_row) from trans_order_item where ODR_NO = op_odr_no)) where TRANS_ORDER_HEADER.ODR_NO = op_odr_no;
      UPDATE TRANS_ORDER_HEADER SET (UNLOAD_ID,UNLOAD_NAME,UNLOAD_AREA_ID,UNLOAD_AREA_NAME,UNLOAD_AREA_ID2,UNLOAD_AREA_NAME2,UNLOAD_AREA_ID3,UNLOAD_AREA_NAME3,UNLOAD_ADDRESS,UNLOAD_CONTACT,UNLOAD_TEL,UNLOAD_CODE)= ( select UNLOAD_ID,UNLOAD_NAME,UNLOAD_AREA_ID,UNLOAD_AREA_NAME,UNLOAD_AREA_ID2,UNLOAD_AREA_NAME2,UNLOAD_AREA_ID3,UNLOAD_AREA_NAME3,UNLOAD_ADDRESS,UNLOAD_CONTACT,UNLOAD_TEL,UNLOAD_CODE  from TRANS_ORDER_ITEM where TRANS_ORDER_HEADER.ODR_NO = TRANS_ORDER_ITEM.ODR_NO and TRANS_ORDER_ITEM.ODR_ROW = (select max(odr_row) from trans_order_item where ODR_NO = op_odr_no)) where TRANS_ORDER_HEADER.ODR_NO = op_odr_no;
  end loop;*/
  OUTPUT_RESULLT := '00';
  commit;
  EXCEPTION
    WHEN OTHERS THEN
        --OUTPUT_RESULLT :='01'||sqlerrm || ']';
        OUTPUT_RESULLT := '01' || OUTPUT_RESULLT || '<br />数据第'|| r_LINE ||'行【'|| t_cur_name ||'】列值为[' || t_cur_value || '],数据异常请联系管理员!<br />';
        rollback;
        t_msg := substr(sqlerrm,1,200);
        insert into t_input_excel_temp(type_name,VALUE,line,column_name,column_cname,id,custom_odr_no)
        values(tmp_param_type,tmp_default_value,r_LINE,tmp_column,t_msg,to_char(sysdate,'YYYY-MM-DD HH24:MI'),tmp_table);

        delete from TMP_ORDER_IMPORT WHERE TMPID = IN_TMPID;
        for h in 1..odr_lst.count loop
            op_odr_no := odr_lst(h);
            delete from trans_order_header where odr_no = op_odr_no;
            delete from trans_order_item where odr_no = op_odr_no;
        end loop;
        commit;
        --RAISE_APPLICATION_ERROR(-20101, '执行全局校验时抛出异常: '||sqlerrm, TRUE);
END;

/

alter table T_INPUT_EXCEL_VERIFY add ERROR_MSG VARCHAR2(200) NULL;

--yuanlei t_input_excel_default
1	TRANS_ORDER_HEADER	ODR_TIME	select to_date('?','YYYY-MM-DD HH24:MI:SS') from dual	2	ODR_TIME	1
2	TRANS_ORDER_HEADER	CUSTOMER_NAME	select t.customer_cname from bas_customer t where t.CUSTOMER_CODE='?'	2	CUSTOMER_NAME	1
3	TRANS_ORDER_HEADER	REFENENCE1		3		1
4	TRANS_ORDER_HEADER	CUSTOM_ODR_NO		3		0
5	TRANS_ORDER_HEADER	BIZ_TYP	select id from bas_codes where name_c = '?' and prop_code = 'BIZ_TYP'	2	BIZ_TYP	1
6	TRANS_ORDER_HEADER	ODR_TYP	select id from bas_codes where name_c = '?' and prop_code = 'TRS_TYP'	2	ODR_TYP	1
7	TRANS_ORDER_HEADER	VEHICLE_TYP	select id from bas_vehicle_type where VEHICLE_TYPE = '?'	2	VEHICLE_TYP	1
8	TRANS_ORDER_HEADER	TEMPERATURE1		3		1
9	TRANS_ORDER_HEADER	TEMPERATURE2		3		1
10	TRANS_ORDER_ITEM	REQ_LOAD_TIME	select to_date('?','YYYY-MM-DD HH24:MI:SS') from dual	2	PRE_LOAD_TIME	1
11	TRANS_ORDER_ITEM	REQ_UNLOAD_TIME	select to_date('?','YYYY-MM-DD HH24:MI:SS') from dual	2	PRE_UNLOAD_TIME	1
12	TRANS_ORDER_HEADER	SLF_PICKUP_FLAG		3		1
13	TRANS_ORDER_HEADER	SLF_DELIVER_FLAG		3		1
14	TRANS_ORDER_HEADER	NOTES		3		1
15	TRANS_ORDER_ITEM	UNLOAD_CODE		3		1
16	TRANS_ORDER_ITEM	LOAD_CODE		3		1
17	TRANS_ORDER_ITEM	LOAD_ID	select t.id from bas_address t where t.addr_code = '?' and rownum = 1	4	LOAD_CODE	4
18	TRANS_ORDER_ITEM	UNLOAD_AREA_NAME		3		0
19	TRANS_ORDER_ITEM	UNLOAD_AREA_NAME2		3		0
20	TRANS_ORDER_ITEM	UNLOAD_AREA_NAME3		3		0
21	TRANS_ORDER_ITEM	LOAD_AREA_NAME		3		0
22	TRANS_ORDER_ITEM	LOAD_AREA_NAME2		3		0
23	TRANS_ORDER_ITEM	LOAD_AREA_NAME3		3		0
24	TRANS_ORDER_ITEM	UNLOAD_ADDRESS		3		0
25	TRANS_ORDER_ITEM	UNLOAD_CONTACT		3		0
26	TRANS_ORDER_ITEM	UNLOAD_TEL		3		0
27	TRANS_ORDER_ITEM	LOAD_ADDRESS		3		0
28	TRANS_ORDER_ITEM	LOAD_CONTACT		3		0
29	TRANS_ORDER_ITEM	LOAD_TEL		3		0
30	TRANS_ORDER_ITEM	SKU		3		2
31	TRANS_ORDER_ITEM	SKU_NAME		3		2
32	TRANS_ORDER_ITEM	QNTY		3		2
33	TRANS_ORDER_ITEM	QNTY_EACH	select '?' from dual	2	QNTY	2
34	TRANS_ORDER_ITEM	G_WGT		3		2
35	TRANS_ORDER_ITEM	VOL		3		2
36	TRANS_ORDER_ITEM	TEMPERATURE1	select id from bas_codes where prop_code = 'STOR_COND' and name_c = '?'	2	TEMPERATURE	2
37	TRANS_ORDER_ITEM	ID	select sys_guid() from dual	1		2
38	TRANS_ORDER_HEADER	TRANS_SRVC_ID	1	0		1
39	TRANS_ORDER_HEADER	TRANS_SRVC_ID_NAME	公路运输	0		1
40	TRANS_ORDER_HEADER	CREATE_ORG_ID	select F_GET_DEFAULT_ORGBYUSER('?', 0) from dual	2	USER_ID	1
41	TRANS_ORDER_HEADER	CREATE_ORG_ID_NAME	select F_GET_DEFAULT_ORGBYUSER('?', 1) from dual	2	USER_ID	1
42	TRANS_ORDER_HEADER	EXEC_ORG_ID	select F_GET_DEFAULT_ORGBYUSER('?', 0) from dual	2	USER_ID	1
43	TRANS_ORDER_HEADER	EXEC_ORG_ID_NAME	select F_GET_DEFAULT_ORGBYUSER('?', 1) from dual	2	USER_ID	1
44	TRANS_ORDER_HEADER	CUSTOMER_ID	select t.id from bas_customer t where t.CUSTOMER_CODE='?'	2	CUSTOMER_NAME	1
45	TRANS_ORDER_HEADER	TRANS_UOM	件	0		1
46	TRANS_ORDER_HEADER	STATUS	10	0		1
47	TRANS_ORDER_HEADER	EXEC_STAT	B41F05C6B85A4221813B833B103D2452	0		1
48	TRANS_ORDER_HEADER	DISCOUNT	1	0		1
49	TRANS_ORDER_ITEM	VOL_UNIT	M3	0		2
50	TRANS_ORDER_HEADER	ID	select sys_guid() from dual	1		1
51	TRANS_ORDER_ITEM	WGT_UNIT	T	0		2
52	TRANS_ORDER_ITEM	WORTH	0	0		2
53	TRANS_ORDER_ITEM	PLAN_STAT	10	0		2
54	TRANS_ORDER_ITEM	LOAD_STAT	10	0		2
55	TRANS_ORDER_ITEM	UNLOAD_STAT	10	0		2
56	TRANS_ORDER_ITEM	UOM		3		2
57	TRANS_ORDER_HEADER	STATUS_NAME	select name_c from bas_codes where code ='10' and prop_code='TRANS_ODR_STAT'	1		1
58	TRANS_ORDER_HEADER	BILL_FLAG	BILLY	0		1
59	TRANS_ORDER_ITEM	UNLOAD_ID	select t.id from bas_address t where t.addr_code = '?' and rownum = 1	5	UNLOAD_CODE	4
60	TRANS_ORDER_HEADER	BTCH_NUM		3		1

--t_input_excel_verify
1	CUSTOMER_NAME	4	TRANS_ORDER_HEADER	TMP_ORDER_IMPORT	select count(1) from dual where length('?')  <= 100	内容超长
2	BIZ_TYP	4	TRANS_ORDER_HEADER	TMP_ORDER_IMPORT	select count(1) from dual where length('?')  <= 100	内容超长
3	ODR_TYP	4	TRANS_ORDER_HEADER	TMP_ORDER_IMPORT	select count(1) from dual where length('?')  <= 100	内容超长
4	BTCH_NUM	4	TRANS_ORDER_HEADER	TMP_ORDER_IMPORT	select count(1) from dual where length('?')  <= 50	内容超长
5	REFENENCE1	4	TRANS_ORDER_HEADER	TMP_ORDER_IMPORT	select count(1) from dual where length('?')  <= 50	内容超长
6	CUSTOM_ODR_NO	4	TRANS_ORDER_HEADER	TMP_ORDER_IMPORT	select count(1) from dual where length('?')  <= 50	内容超长
7	VEHICLE_TYP	4	TRANS_ORDER_HEADER	TMP_ORDER_IMPORT	select count(1) from dual where length('?')  <= 32	内容超长
8	TEMPERATURE1	2	TRANS_ORDER_HEADER	TMP_ORDER_IMPORT	select IS_NUMBER('?') from dual	非数值
9	TEMPERATURE1	4	TRANS_ORDER_HEADER	TMP_ORDER_IMPORT	select count(1) from dual where length('?')  <= 5	内容超长
10	TEMPERATURE2	2	TRANS_ORDER_HEADER	TMP_ORDER_IMPORT	select IS_NUMBER('?') from dual	非数值
11	TEMPERATURE2	4	TRANS_ORDER_HEADER	TMP_ORDER_IMPORT	select count(1) from dual where length('?')  <= 5	内容超长
12	SLF_PICKUP_FLAG	4	TRANS_ORDER_HEADER	TMP_ORDER_IMPORT	select count(1) from dual where length('?')  <= 1	内容超长
13	SLF_DELIVER_FLAG	4	TRANS_ORDER_HEADER	TMP_ORDER_IMPORT	select count(1) from dual where length('?')  <= 1	内容超长
14	NOTES	4	TRANS_ORDER_HEADER	TMP_ORDER_IMPORT	select count(1) from dual where length('?')  <= 255	内容超长
15	LOAD_CODE	4	TRANS_ORDER_ITEM	TMP_ORDER_IMPORT	select count(1) from dual where length('?')  <= 100	内容超长
16	LOAD_AREA_NAME	4	TRANS_ORDER_ITEM	TMP_ORDER_IMPORT	select count(1) from dual where length('?')  <= 50	内容超长
17	LOAD_AREA_NAME2	4	TRANS_ORDER_ITEM	TMP_ORDER_IMPORT	select count(1) from dual where length('?')  <= 50	内容超长
18	LOAD_AREA_NAME3	4	TRANS_ORDER_ITEM	TMP_ORDER_IMPORT	select count(1) from dual where length('?')  <= 50	内容超长
19	LOAD_ADDRESS	4	TRANS_ORDER_ITEM	TMP_ORDER_IMPORT	select count(1) from dual where length('?')  <= 300	内容超长
20	LOAD_CONTACT	4	TRANS_ORDER_ITEM	TMP_ORDER_IMPORT	select count(1) from dual where length('?')  <= 50	内容超长
21	LOAD_TEL	4	TRANS_ORDER_ITEM	TMP_ORDER_IMPORT	select count(1) from dual where length('?')  <= 50	内容超长
22	UNLOAD_CODE	4	TRANS_ORDER_ITEM	TMP_ORDER_IMPORT	select count(1) from dual where length('?')  <= 100	内容超长
23	UNLOAD_AREA_NAME	4	TRANS_ORDER_ITEM	TMP_ORDER_IMPORT	select count(1) from dual where length('?')  <= 50	内容超长
24	UNLOAD_AREA_NAME2	4	TRANS_ORDER_ITEM	TMP_ORDER_IMPORT	select count(1) from dual where length('?')  <= 50	内容超长
25	UNLOAD_AREA_NAME3	4	TRANS_ORDER_ITEM	TMP_ORDER_IMPORT	select count(1) from dual where length('?')  <= 50	内容超长
26	UNLOAD_ADDRESS	4	TRANS_ORDER_ITEM	TMP_ORDER_IMPORT	select count(1) from dual where length('?')  <= 300	内容超长
27	UNLOAD_CONTACT	4	TRANS_ORDER_ITEM	TMP_ORDER_IMPORT	select count(1) from dual where length('?')  <= 50	内容超长
28	UNLOAD_TEL	4	TRANS_ORDER_ITEM	TMP_ORDER_IMPORT	select count(1) from dual where length('?')  <= 50	内容超长
29	SKU	4	TRANS_ORDER_ITEM	TMP_ORDER_IMPORT	select count(1) from dual where length('?')  <= 50	内容超长
30	SKU_NAME	4	TRANS_ORDER_ITEM	TMP_ORDER_IMPORT	select count(1) from dual where length('?')  <= 200	内容超长
31	UOM	4	TRANS_ORDER_ITEM	TMP_ORDER_IMPORT	select count(1) from dual where length('?')  <= 32	内容超长
32	QNTY	4	TRANS_ORDER_ITEM	TMP_ORDER_IMPORT	select count(1) from dual where length('?')  <= 19	内容超长
33	VOL	4	TRANS_ORDER_ITEM	TMP_ORDER_IMPORT	select count(1) from dual where length('?')  <= 19	内容超长
34	G_WGT	4	TRANS_ORDER_ITEM	TMP_ORDER_IMPORT	select count(1) from dual where length('?')  <= 19	内容超长
35	LOAD_CODE	2	TRANS_ORDER_ITEM	TMP_ORDER_IMPORT	select count(1) from bas_address where addr_code = '?'	无关联基础数据
36	UNLOAD_CODE	2	TRANS_ORDER_ITEM	TMP_ORDER_IMPORT	select count(1) from bas_address where addr_code = '?'	无关联基础数据
37	QNTY	2	TRANS_ORDER_ITEM	TMP_ORDER_IMPORT	select count(1) from dual where 0 <= '?'	不允许小于0
38	UNLOAD_AREA_NAME3	2	TRANS_ORDER_ITEM	TMP_ORDER_IMPORT	select count(1) from bas_area t where t.area_cname = '?' and t.area_level = 5	无关联基础数据
39	LOAD_AREA_NAME3	2	TRANS_ORDER_ITEM	TMP_ORDER_IMPORT	select count(1) from bas_area t where t.area_cname = '?' and t.area_level = 5	无关联基础数据
40	CUSTOMER_NAME	2	TRANS_ORDER_HEADER	TMP_ORDER_IMPORT	select count(1) from bas_customer where customer_code='?'	无关联基础数据
41	LOAD_AREA_NAME	2	TRANS_ORDER_ITEM	TMP_ORDER_IMPORT	select count(1) from bas_area t where t.area_cname = '?' and t.area_level = 3	无关联基础数据
42	LOAD_AREA_NAME2	2	TRANS_ORDER_ITEM	TMP_ORDER_IMPORT	select count(1) from bas_area t where t.area_cname = '?' and t.area_level = 4	无关联基础数据
43	UNLOAD_AREA_NAME	2	TRANS_ORDER_ITEM	TMP_ORDER_IMPORT	select count(1) from bas_area t where t.area_cname = '?' and t.area_level = 3	无关联基础数据
44	UNLOAD_AREA_NAME2	2	TRANS_ORDER_ITEM	TMP_ORDER_IMPORT	select count(1) from bas_area t where t.area_cname = '?' and t.area_level = 4	无关联基础数据
45	CUSTOMER_NAME	0	TRANS_ORDER_HEADER	TMP_ORDER_IMPORT		不允许为空
46	BIZ_TYP	0	TRANS_ORDER_HEADER	TMP_ORDER_IMPORT		不允许为空
47	LOAD_AREA_NAME	3	TRANS_ORDER_ITEM	TMP_ORDER_IMPORT	LOAD_CODE	无关联基础数据
48	LOAD_AREA_NAME2	3	TRANS_ORDER_ITEM	TMP_ORDER_IMPORT	LOAD_CODE	无关联基础数据
49	LOAD_ADDRESS	3	TRANS_ORDER_ITEM	TMP_ORDER_IMPORT	LOAD_CODE	无关联基础数据
50	LOAD_CONTACT	3	TRANS_ORDER_ITEM	TMP_ORDER_IMPORT	LOAD_CODE	无关联基础数据
51	LOAD_TEL	3	TRANS_ORDER_ITEM	TMP_ORDER_IMPORT	LOAD_CODE	无关联基础数据
52	UNLOAD_AREA_NAME	3	TRANS_ORDER_ITEM	TMP_ORDER_IMPORT	UNLOAD_CODE	无关联基础数据
53	UNLOAD_AREA_NAME2	3	TRANS_ORDER_ITEM	TMP_ORDER_IMPORT	UNLOAD_CODE	无关联基础数据
54	UNLOAD_ADDRESS	3	TRANS_ORDER_ITEM	TMP_ORDER_IMPORT	UNLOAD_CODE	无关联基础数据
55	SKU_NAME	0	TRANS_ORDER_ITEM	TMP_ORDER_IMPORT		不允许为空
56	QNTY	0	TRANS_ORDER_ITEM	TMP_ORDER_IMPORT		不允许为空
57	G_WGT	0	TRANS_ORDER_ITEM	TMP_ORDER_IMPORT		不允许为空
58	VOL	0	TRANS_ORDER_ITEM	TMP_ORDER_IMPORT		不允许为空
59	G_WGT	2	TRANS_ORDER_HEADER	TMP_ORDER_IMPORT	select IS_NUMBER('?') from dual	非数值
60	VOL	2	TRANS_ORDER_HEADER	TMP_ORDER_IMPORT	select IS_NUMBER('?') from dual	非数值
61	ODR_TYP	0	TRANS_ORDER_HEADER	TMP_ORDER_IMPORT		不允许为空
62	SKU	2	TRANS_ORDER_ITEM	TMP_ORDER_IMPORT	select count(1) from bas_sku where sku='?'	无关联基础数据
63	BIZ_TYP	2	TRANS_ORDER_HEADER	TMP_ORDER_IMPORT	select count(1) from bas_codes where prop_code = 'BIZ_TYP' and name_c = '?'	无关联基础数据
64	TEMPERATURE	2	TRANS_ORDER_ITEM	TMP_ORDER_IMPORT	select count(1) from bas_codes where prop_code = 'STOR_COND' and name_c = '?'	无关联基础数据
65	G_WGT	2	TRANS_ORDER_ITEM	TMP_ORDER_IMPORT	select count(1) from dual where 0 <= '?'	不允许小于0
66	VOL	2	TRANS_ORDER_ITEM	TMP_ORDER_IMPORT	select count(1) from dual where 0 <= '?'	不允许小于0
67	BTCH_NUM	1	TRANS_ORDER_HEADER	TMP_ORDER_IMPORT		不唯一
68	ODR_TYP	2	TRANS_ORDER_HEADER	TMP_ORDER_IMPORT	select count(1) from bas_codes where prop_code = 'TRS_TYP' and name_c = '?'	无关联基础数据
69	VEHICLE_TYP	2	TRANS_ORDER_HEADER	TMP_ORDER_IMPORT	select count(1) from bas_vehicle_type where VEHICLE_TYPE = '?' 	无关联基础数据
70	QNTY	2	TRANS_ORDER_HEADER	TMP_ORDER_IMPORT	select IS_NUMBER('?') from dual	非数值
71	ODR_TIME	2	TRANS_ORDER_HEADER	TMP_ORDER_IMPORT	select IS_DATE('?') from dual	非日期
72	PRE_LOAD_TIME	2	TRANS_ORDER_ITEM	TMP_ORDER_IMPORT	select IS_DATE('?') from dual	非日期
73	PRE_UNLOAD_TIME	2	TRANS_ORDER_ITEM	TMP_ORDER_IMPORT	select IS_DATE('?') from dual	非日期

--sys_function
2?	P02_B35	客户信息	客户信息	B	Y	P06_T09	0,P_F02,P_T019	wpsadmin	3	2093	2010/7/20	com.rd.client.view.base.BmsCustomerView	2081	wpsadmin	
--sys_func_page 2017-5-16
--lml
22972	P09_F022_P0_09	P09_F022_P0	生成对账单	150	Y	27-5月 -15	wpsadmin	生成对账单	B
22977	P02_B35_P0	P02_B35	按钮	150	Y	27-5月 -15	wpsadmin	按钮	B
22980	P02_B35_P0_03	P02_B35_P0	导出	150	Y	27-5月 -15	wpsadmin	导出	B
22979	P02_B35_P0_02	P02_B35_P0	取消	150	Y	27-5月 -15	wpsadmin	取消	B
22978	P02_B35_P0_01	P02_B35_P0	保存	150	Y	27-5月 -15	wpsadmin	保存	B

--yuanlei 2017-5-16
--bas_codes
6?	AA4F32C3168447D18782AEF6F241C72F	99	已关闭	已关闭	6	Y	N			2010/11/25 11:05:23	wpsadmin	TRANS_LOAD_STAT	wpsadmin	2010/11/25 11:37:48