package com.rd.server;

import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.PrintWriter;
import java.util.List;

import javax.servlet.ServletContext;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.commons.fileupload.FileItem;
import org.apache.commons.fileupload.disk.DiskFileItemFactory;
import org.apache.commons.fileupload.servlet.ServletFileUpload;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.ss.usermodel.WorkbookFactory;



public class ExcelUploadServlet extends HttpServlet{
		private static final long serialVersionUID = 1L;
	       
	   
	    public ExcelUploadServlet() {
	        super();
	    }

		
		@SuppressWarnings("unchecked")
		protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {

			request.setCharacterEncoding("utf-8"); 
			
			response.setContentType("text/html;charset=utf-8"); 
			
			DiskFileItemFactory factory = new DiskFileItemFactory(); 
			//创建解析类的实例 
			ServletFileUpload sfu = new ServletFileUpload(factory); 
			//开始解析 
			sfu.setFileSizeMax(1024*400); 
			
			//获得存放文件的物理路径 
			//upload下的某个文件夹 得到当前在线的用户 找到对应的文件夹 
			ServletContext sctx = getServletContext(); 
			
			String path = sctx.getRealPath("/upload"); 
			
			//List<String> list=new ArrayList<String> ();
			String fileName="";
			try { 
				
				//每个表单域中数据会封装到一个对应的FileItem对象上 
				List<FileItem> items = sfu.parseRequest(request); 
				//区分表单域 
				for (int i = 0; i < items.size(); i++) { 
				 
					FileItem item = items.get(i); 
				
					//isFormField为true，表示这不是文件上传表单域 
				
					if(!item.isFormField()){ 
		
						System.out.println(path); 
						//获得文件名 
						fileName= item.getName(); 
						
						System.out.println(fileName); 
						//该方法在某些平台(操作系统),会返回路径+文件名 
						fileName = fileName.substring(fileName.lastIndexOf("/")+1); 
						
						File file = new File(path+"\\"+fileName); 
						
						if(!file.exists()){ 
						
							item.write(file); 
						
						} 
		
					} 

				} 
			
				File excel=new File(path+"\\"+fileName); 

				InputStream is=new FileInputStream(excel);
				
				Workbook workbook = null;
				
				workbook = WorkbookFactory.create(is);
	            
				Sheet sheet = workbook.getSheetAt(0);
				 
				Row row = sheet.getRow(0);
				
				PrintWriter p=response.getWriter();
			
				for (int i = 0; i <row.getLastCellNum(); i++) {  
		                    
					Cell cell = row.getCell(i);				
					System.out.println(cell.getRichStringCellValue());
	
				}  
				String result="000";
				
                p.println("</html>");
    			p.flush();
    			p.close();
    			p = null;
				
				
		} catch (Exception e) {
			
				e.printStackTrace(); 
			
			} 
		
			
		}

		/**
		 * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response)
		 */
		protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
			doGet(request,response);
		}
		
		
		private String toHtml(String str){
			if(str != null){
				str = str.replaceAll("<", "&lt;");
				str = str.replaceAll(">", "&gt;");
			}
			return str;
		}
}