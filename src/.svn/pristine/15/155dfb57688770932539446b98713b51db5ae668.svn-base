package com.rd.client.view.tms;

import java.util.LinkedHashMap;

import com.rd.client.action.tms.dispatch.ChangedTotalQntyAction;
import com.rd.client.common.obj.FormUtil;
import com.rd.client.common.obj.LoginCache;
import com.rd.client.common.util.ObjUtil;
import com.rd.client.common.util.StaticRef;
import com.rd.client.common.util.TrsPrivRef;
import com.rd.client.common.util.Util;
import com.rd.client.common.widgets.SGCheck;
import com.rd.client.common.widgets.SGCombo;
import com.rd.client.common.widgets.SGDateTime;
import com.rd.client.common.widgets.SGForm;
import com.rd.client.common.widgets.SGPage;
import com.rd.client.common.widgets.SGPanel;
import com.rd.client.common.widgets.SGTable;
import com.rd.client.common.widgets.SGText;
import com.rd.client.ds.tms.ChangeRecordDS;
import com.rd.client.win.SearchWin;
import com.smartgwt.client.data.DataSource;
import com.smartgwt.client.data.Record;
import com.smartgwt.client.types.Alignment;
import com.smartgwt.client.types.RecordSummaryFunctionType;
import com.smartgwt.client.types.SelectionStyle;
import com.smartgwt.client.types.SummaryFunctionType;
import com.smartgwt.client.types.TitleOrientation;
import com.smartgwt.client.types.VerticalAlignment;
import com.smartgwt.client.widgets.Canvas;
import com.smartgwt.client.widgets.IButton;
import com.smartgwt.client.widgets.Window;
import com.smartgwt.client.widgets.events.ClickEvent;
import com.smartgwt.client.widgets.events.ClickHandler;
import com.smartgwt.client.widgets.form.DynamicForm;
import com.smartgwt.client.widgets.form.fields.ComboBoxItem;
import com.smartgwt.client.widgets.form.fields.TextAreaItem;
import com.smartgwt.client.widgets.form.fields.TextItem;
import com.smartgwt.client.widgets.form.fields.events.ChangedEvent;
import com.smartgwt.client.widgets.form.fields.events.ChangedHandler;
import com.smartgwt.client.widgets.grid.ListGridField;
import com.smartgwt.client.widgets.grid.ListGridRecord;
import com.smartgwt.client.widgets.layout.HLayout;
import com.smartgwt.client.widgets.layout.SectionStack;
import com.smartgwt.client.widgets.layout.SectionStackSection;
import com.smartgwt.client.widgets.layout.VLayout;
import com.smartgwt.client.widgets.menu.Menu;
import com.smartgwt.client.widgets.toolbar.ToolStrip;

/**
 * 运输管理-->换车记录
 * @author wangjun
 *
 */
public class ChangeRecordView extends SGForm{

	private DataSource loadDS;
	public  SGTable groupTable1;
	public SGPanel panel;
	public SGPanel panel1;
	private SGPanel searchLoadForm;
	private Window searchLoadWin;
	public SGTable shpmTable;       //已调作业单表
	public SGTable loadTable;
	public SGTable unloadTable;
	public SGTable shpmlstTable;    //已调作业单明细表
	public SGTable damageTable;
	public Record shpmnorecord;
	public Record grouprecords;
	public ListGridRecord[] loadReocrd;
	public IButton recepitButton;
	public IButton canReceButton;
	public int tabSelect = 0;
	//public TabSet tabSet;
	private SectionStackSection loadListItem;
	private SectionStack loadSectionStack;
	//private Tab tab1;
    //private String biz_typ;
	public ChangeRecordView(String id) {
	    super(id);
	}
	
	public Canvas getViewPanel() {
		
		privObj = LoginCache.getUserPrivilege().get(getFUNCID());
		VLayout main = new VLayout();//定义全局布局
		main.setWidth100();
		main.setHeight100();
		loadDS = ChangeRecordDS.getInstance("V_LOAD_HEADER", "TRANS_LOAD_HEADER");
		//主布局
		
//		final VStack stack =new VStack();
//		stack.setHeight("100%");
//		stack.setWidth100();
		
		
//		final TabSet bottomTabSet = new TabSet();
//		bottomTabSet.setWidth100();
//		bottomTabSet.setHeight("52%");	
		
		initVerify(); 
	
		ToolStrip recivetoolStrip = new ToolStrip();
		recivetoolStrip.setAlign(Alignment.LEFT);
		//tab1 = new Tab("换成记录");
		VLayout recivelay = new VLayout();
		HLayout layout=new HLayout();
		//layout.setWidth("80%");
		DynamicForm form1=new DynamicForm();
		createLittleForm1(form1);
		DynamicForm form2=new DynamicForm();
		createLittleForm2(form2);
		layout.addMember(form1);
		layout.addMember(form2);
		layout.setHeight("30%");
		recivelay.addMember(layout);
		recivelay.addMember(createbottoInfo2());
		recivelay.setWidth("30%");
		
		SGTable downTable=new SGTable();
		createDownTable(downTable);
		downTable.setWidth("70%");
		downTable.setHeight(375);
		
		HLayout hlayout=new HLayout();
		hlayout.addMember(downTable);
		hlayout.addMember(recivelay);
		
		
		
		
		//tab1.setPane();
		reciveBtnWidget(recivetoolStrip);
		recivelay.addMember(recivetoolStrip);
		
		
//		bottomTabSet.addTab(tab1);
	

		
	
		//VLayout layOut = new VLayout();
		//layOut.setWidth("100%");
		//layOut.setHeight("100%");
		//layOut.addMember(createLoadList());
		hlayout.setHeight("40%");
		//layOut.addMember(hlayout);
		
		main.addMember(createLoadList());
		main.addMember(hlayout);
		
		return main;
	}
 
	private Canvas createLoadList(){

    	VLayout vlay=new VLayout();
    	final Menu menu=new Menu();
    	menu.setWidth(140);
    	
    	loadTable=new SGTable(loadDS,"100%","100%",false,true,false);
    	loadTable.setShowRowNumbers(true);
    	loadTable.setCanEdit(false);
    	loadTable.setSelectionType(SelectionStyle.SINGLE);
    	
    	createTableList(loadTable,false);
		
		loadListItem = new SectionStackSection(Util.TI18N.LISTINFO());
		loadListItem.setItems(loadTable);
		loadListItem.setExpanded(true);
		loadListItem.setControls(new SGPage(loadTable,true).initPageBtn());
		
		loadSectionStack=new SectionStack();
		loadSectionStack.addSection(loadListItem);
		loadSectionStack.setWidth("100%");		
		ToolStrip load=new ToolStrip();
		load.setWidth("100%");
		load.setHeight("20");
		load.setAlign(Alignment.RIGHT);
		IButton searchLoadButton=createBtn(StaticRef.FETCH_BTN,TrsPrivRef.TRACK_P5);
		searchLoadButton.addClickHandler(new ClickHandler() {
			
			@Override
			public void onClick(ClickEvent event) {
//				tabSet.selectTab("1");
//				if(searchWin!=null){
//					searchWin.hide();
//				}
//				if(searchUnloadWin!=null){
//					searchUnloadWin.hide();
//				}
				if(searchLoadWin==null){
					searchLoadForm=new SGPanel();
					searchLoadForm.setDataSource(loadDS);
					searchLoadWin=new SearchWin(loadDS,createSearchLoadForm(searchLoadForm,false),loadSectionStack.getSection(0)).getViewPanel();
				}else{
					searchLoadWin.show();
				}
			}
		});
		load.addMember(searchLoadButton);
		vlay.setMembers(load,loadSectionStack);
		vlay.setHeight("60%");
		return vlay;
	
	}
	
	private void createTableList(SGTable table,boolean stat_flag){
		boolean isDigitCanEdit = false;
		ListGridField LOAD_NO = new ListGridField("LOAD_NO",Util.TI18N.LOAD_NO(),90);//调度单编号
		LOAD_NO.setShowGridSummary(true);
		LOAD_NO.setSummaryFunction(SummaryFunctionType.COUNT);
		ListGridField PLATE_NO = new ListGridField("PLATE_NO",Util.TI18N.PLATE_NO(),60);//车牌号
		
		ListGridField STATUS=new ListGridField("STATUS",Util.TI18N.STATUS(),50);
		STATUS.setHidden(true);
		ListGridField STATUS_NAME = new ListGridField("STATUS_NAME",Util.TI18N.STATUS(),50);//状态
		STATUS_NAME.setHidden(stat_flag);
		ListGridField DISPATCH_STAT_NAME = new ListGridField("DISPATCH_STAT_NAME", Util.TI18N.DISPATCH_STAT_NAME(), 60);  //配车状态
		DISPATCH_STAT_NAME.setHidden(true);
		ListGridField LOAD_STAT=new ListGridField("LOAD_STAT","装车状态");//装车状态
		LOAD_STAT.setHidden(true);
		ListGridField LOAD_STAT_NAME=new ListGridField("LOAD_STAT_NAME","装车状态",60);
//		LOAD_STAT_NAME.setHidden(true);
		
		ListGridField VEHICLE_TYP = new ListGridField("VEHICLE_TYP_ID",Util.TI18N.VEHICLE_TYP(),60);//车辆类型
		Util.initComboValue(VEHICLE_TYP, "BAS_VEHICLE_TYPE", "ID", "VEHICLE_TYPE", " WHERE ENABLE_FLAG = 'Y'", " SHOW_SEQ ASC");  //车辆类型
		
		ListGridField TRANS_SRVC_ID = new ListGridField("TRANS_SRVC_ID", Util.TI18N.TRANS_SRVC_ID(),70);
		Util.initTrsService(TRANS_SRVC_ID, "");
		
		ListGridField START_AREA_ID = new ListGridField("START_AREA_ID",Util.TI18N.AREA_NAME(),0);
		ListGridField START_AREA = new ListGridField("START_AREA_NAME",Util.TI18N.LOAD_AREA_NAME(),60);//起点区域
		START_AREA_ID.setHidden(true);
		Util.initArea(table,START_AREA,"START_AREA_ID", "START_AREA_NAME", "");
		ListGridField END_AREA_ID = new ListGridField("END_AREA_ID",Util.TI18N.AREA_NAME(),0);
		ListGridField END_AREA = new ListGridField("END_AREA_NAME",Util.TI18N.END_AREA(),60);//终点区域
		END_AREA_ID.setHidden(true);
		Util.initArea(table,END_AREA, "END_AREA_ID", "END_AREA_NAME", "");
		ListGridField DEPART_TIME = new ListGridField("DEPART_TIME", Util.TI18N.END_LOAD_TIME(), 110);  //发运时间
		//Util.initListGridDateTime(DEPART_TIME);
		Util.initDateTime(table,DEPART_TIME);
		
		ListGridField DONE_TIME = new ListGridField("DONE_TIME","预计回场时间", 110);  //发运时间
		//Util.initListGridDateTime(DEPART_TIME);
		Util.initDateTime(table,DONE_TIME);
		
		ListGridField REMAIN_GROSS_W = new ListGridField("REMAIN_GROSS_W","余量",50);//余量
		REMAIN_GROSS_W.setCanEdit(false);
		
		final ListGridField UDF1 = new ListGridField("UDF1",Util.TI18N.LOAD_UDF21(),65);//随车特服
		
		ListGridField UDF2 = new ListGridField("UDF2", Util.TI18N.LOAD_UDF22(), 85);  //电话
		
		ListGridField EXEC_ORG_ID_NAME = new ListGridField("EXEC_ORG_ID_NAME", Util.TI18N.EXEC_ORG_ID_NAME(), 80);  //供应商
		ListGridField SUPLR_NAME = new ListGridField("SUPLR_ID", Util.TI18N.SUPLR_NAME(), 70);  //供应商
		Util.initOrgSupplier(SUPLR_NAME, "");
		ListGridField DRIVER1 = new ListGridField("DRIVER1", Util.TI18N.DRIVER1(), 50);  //司机
		ListGridField MOBILE1 = new ListGridField("MOBILE1", Util.TI18N.MOBILE(), 85);  //电话
		ListGridField TOT_QNTY = new ListGridField("TOT_QNTY","总数量",50);//总数量
		TOT_QNTY.setRecordSummaryFunction(RecordSummaryFunctionType.MULTIPLIER);   
		TOT_QNTY.setSummaryFunction(SummaryFunctionType.SUM);
		TOT_QNTY.setShowGroupSummary(true); 
		TOT_QNTY.setAlign(Alignment.RIGHT);
		TOT_QNTY.setCanEdit(isDigitCanEdit);
		if(isDigitCanEdit) {
			TOT_QNTY.addEditorExitHandler(new ChangedTotalQntyAction(table, "TOT_QNTY", Util.TI18N.TOT_QNTY()));
		}
		ListGridField TOT_QNTY_EACH = new ListGridField("TOT_QNTY_EACH",Util.TI18N.R_EA(),50);//总数量
		TOT_QNTY_EACH.setRecordSummaryFunction(RecordSummaryFunctionType.MULTIPLIER);   
		TOT_QNTY_EACH.setSummaryFunction(SummaryFunctionType.SUM);
		TOT_QNTY_EACH.setShowGroupSummary(true); 
		TOT_QNTY_EACH.setAlign(Alignment.RIGHT);
		TOT_QNTY_EACH.setCanEdit(isDigitCanEdit);
		if(isDigitCanEdit) {
			TOT_QNTY_EACH.addEditorExitHandler(new ChangedTotalQntyAction(table, "TOT_QNTY_EACH", Util.TI18N.R_EA()));
		}
		ListGridField TOT_GROSS_W = new ListGridField("TOT_GROSS_W",Util.TI18N.TOT_GROSS_W(),60);//总毛重
		TOT_GROSS_W.setRecordSummaryFunction(RecordSummaryFunctionType.MULTIPLIER);   
		TOT_GROSS_W.setSummaryFunction(SummaryFunctionType.SUM); 
		TOT_GROSS_W.setShowGroupSummary(true); 
		TOT_GROSS_W.setAlign(Alignment.RIGHT);
		TOT_GROSS_W.setCanEdit(isDigitCanEdit);
		if(isDigitCanEdit) {
			TOT_GROSS_W.addEditorExitHandler(new ChangedTotalQntyAction(table, "TOT_GROSS_W", Util.TI18N.TOT_GROSS_W()));
		}
		ListGridField TOT_VOL = new ListGridField("TOT_VOL",Util.TI18N.TOT_VOL(),60);//总体积
		//TOT_VOL.setRecordSummaryFunction(RecordSummaryFunctionType.MULTIPLIER); 
		TOT_VOL.setSummaryFunction(SummaryFunctionType.SUM);
		TOT_VOL.setAlign(Alignment.RIGHT);
		TOT_VOL.setShowGroupSummary(true); 
		TOT_VOL.setCanEdit(isDigitCanEdit);
		if(isDigitCanEdit) {
			TOT_VOL.addEditorExitHandler(new ChangedTotalQntyAction(table, "TOT_VOL", Util.TI18N.TOT_VOL()));
		}
		final ListGridField NOTES = new ListGridField("NOTES",Util.TI18N.NOTES(),65);//备注
		
		
		table.setFields(LOAD_NO,STATUS,STATUS_NAME,LOAD_STAT,LOAD_STAT_NAME, DISPATCH_STAT_NAME, TRANS_SRVC_ID, START_AREA_ID,START_AREA, END_AREA_ID, END_AREA, SUPLR_NAME, PLATE_NO,VEHICLE_TYP
				,DRIVER1, MOBILE1, REMAIN_GROSS_W,DEPART_TIME, DONE_TIME, UDF1,UDF2,TOT_QNTY,TOT_QNTY_EACH,NOTES, TOT_VOL, TOT_GROSS_W,EXEC_ORG_ID_NAME);
	}

	private void createDownTable(SGTable table){
		
		ListGridField PLATE_NO1 = new ListGridField("PLATE_NO1","原车车牌",100);
		ListGridField VEHICLE_TYP_ID1 = new ListGridField("VEHICLE_TYP_ID1","车辆类型",100);
		ListGridField DRIVER1 = new ListGridField("DRIVER1","联系人",80);
		ListGridField MOBILE1 = new ListGridField("MOBILE1","联系电话",100);
		ListGridField PLATE_NO2 = new ListGridField("PLATE_NO2","目标车牌",80);
		ListGridField VEHICLE_TYP_ID2 = new ListGridField("VEHICLE_TYP_ID2","车辆类型",60);
		ListGridField DRIVER2 = new ListGridField("DRIVER2","联系人",80);
		ListGridField MOBILE2 = new ListGridField("MOBILE2","联系电话",100);	
		ListGridField CHANGE_TIME = new ListGridField("CHANGE_TIME","换车时间",100);
		ListGridField CHANGE_AREA_ID = new ListGridField("CHANGE_AREA_ID","换车地点",80);
		ListGridField CHANGE_REASON = new ListGridField("CHANGE_REASON","换车原因",80);
		ListGridField CARD_NO2 = new ListGridField("CARD_NO2","驾驶证",80);
		
		table.setFields(PLATE_NO1,VEHICLE_TYP_ID1,DRIVER1,MOBILE1,PLATE_NO2,VEHICLE_TYP_ID2,DRIVER2,MOBILE2,CHANGE_TIME,CHANGE_AREA_ID,CHANGE_REASON,CARD_NO2);

		
	}
	
	/**
	 * 按钮布局
	 */
    public  void createTransFollowBtnWidget(ToolStrip followtoolStrip){
    	followtoolStrip.setWidth("100%");
    	followtoolStrip.setHeight("20");
    	followtoolStrip.setPadding(2);
    	followtoolStrip.setSeparatorSize(12);
    	followtoolStrip.addSeparator();
    	followtoolStrip.setMembersMargin(4);
    	followtoolStrip.setAlign(Alignment.LEFT);      
        //保存按钮
        IButton saveButton = createBtn(StaticRef.SAVE_BTN,TrsPrivRef.GpsReclaim_P1_01);
       // saveButton.addClickHandler(new SaveTrasFollowAction(shpmTable,groupTable1,this,check_map));
        
        //取消按钮
        IButton canButton = createBtn(StaticRef.CANCEL_BTN,TrsPrivRef.GpsReclaim_P1_02);
      //  canButton.addClickHandler(new CancelAction(groupTable1,this));
      
        followtoolStrip.setMembersMargin(3);
        followtoolStrip.setMembers(saveButton, canButton);
        //add_map.put(TrsPrivRef.TRACK_P1_01, newButton);
        save_map.put(TrsPrivRef.GpsReclaim_P1_01, saveButton);
        save_map.put(TrsPrivRef.GpsReclaim_P1_02, canButton);
        //this.enableOrDisables(add_map, true);
        this.enableOrDisables(save_map, false);
        
    }
  //查询窗口
	private DynamicForm createSearchLoadForm(final DynamicForm form,boolean flag){
		SGCombo CUSTOMER=new SGCombo("CUSTOMER_ID",Util.TI18N.CUSTOMER(),true);
		Util.initCustComboValue(CUSTOMER, "");
	
		SGText LOAD_NO=new SGText("LOAD_NO",Util.TI18N.LOAD_NO());//调度单号

		SGText CUSTOM_ODR_NO_NAME=new SGText("CUSTOM_ODR_NO",Util.TI18N.CUSTOM_ODR_NO());//客户单号
		  
		SGText SHPM_NO=new SGText("SHPM_NO",Util.TI18N.SHPM_NO());//

		//2
		SGCombo STATUS_FROM=new SGCombo("STATUS_FROM", Util.TI18N.STATUS(),true);//状态 从 到 
		SGCombo STATUS_TO=new SGCombo("STATUS_TO", "到");
		Util.initStatus(STATUS_FROM, StaticRef.LOADNO_STAT, "40");
		Util.initStatus(STATUS_TO, StaticRef.LOADNO_STAT, "40");
		
		//二级窗口 SUPLR_ID_NAME
		SGCombo SUPLR_ID =new SGCombo("SUPLR_ID", Util.TI18N.SUPLR_NAME());//供应商
		Util.initSupplier(SUPLR_ID, "");
		
		SGText PLATE_NO=new SGText("PLATE_NO",Util.TI18N.PLATE_NO());//

		//3
		ComboBoxItem START_AREA=new ComboBoxItem("START_AREA_NAME",Util.TI18N.START_AREA_ID_NAME());//起点区域
		START_AREA.setTitleOrientation(TitleOrientation.TOP);
		TextItem START_AREA_ID=new TextItem("START_AREA_ID", Util.TI18N.START_ARAE());
		START_AREA_ID.setVisible(false);
		Util.initArea(START_AREA, START_AREA_ID);
		
		ComboBoxItem END_AREA=new ComboBoxItem("END_AREA_NAME",Util.TI18N.END_AREA_ID_NAME());//
		END_AREA.setTitleOrientation(TitleOrientation.TOP);
		
		TextItem END_AREA_ID=new TextItem("END_AREA_ID", Util.TI18N.END_AREA());
		END_AREA_ID.setVisible(false);
		Util.initArea(END_AREA, END_AREA_ID);
		
		SGDateTime ORD_ADDTIME_FROM = new SGDateTime("ADDTIME", Util.TI18N.ORD_ADDTIME_FROM());//创建时间 从  到  
		SGDateTime ORD_ADDTIME_TO = new SGDateTime("ADDTIME_TO", "到");
		
		//4
		
		SGCombo DISPATCH_STAT= new SGCombo("DISPATCH_STAT",Util.TI18N.DISPATCH_STAT_NAME());
		Util.initCodesComboValue(DISPATCH_STAT, "DISPATCH_STAT");//--wangjun 2010-2-27
		
		TextItem EXEC_ORG_ID = new TextItem("EXEC_ORG_ID");
		EXEC_ORG_ID.setVisible(false);
		SGText EXEC_ORG_ID_NAME = new SGText("EXEC_ORG_ID_NAME",Util.TI18N.EXEC_ORG_ID());
		Util.initOrg(EXEC_ORG_ID_NAME, EXEC_ORG_ID, false, "50%", "50%");
		EXEC_ORG_ID.setValue(LoginCache.getLoginUser().getDEFAULT_ORG_ID());
		EXEC_ORG_ID_NAME.setValue(LoginCache.getLoginUser().getDEFAULT_ORG_ID_NAME()); 
		
		SGText ADDWHO=new SGText("ADDWHO",Util.TI18N.ADDWHO());//制单人
		
		SGCheck C_ORG_FLAG=new SGCheck("C_ORG_FLAG", Util.TI18N.C_ORG_FLAG());// 包含下级机构	
		C_ORG_FLAG.setWidth(120);
//		C_ORG_FLAG.setColSpan(3);
		C_ORG_FLAG.setValue(true);
		
		SGCheck EXEC_FLAG = new SGCheck("EXEC_FLAG", "参与执行");	
		EXEC_FLAG.setColSpan(3);
		
		SGCheck C_RDC_FLAG=new SGCheck("C_RDC_FLAG", Util.TI18N.C_RDC_FLAG());// 包含下级机构	
		C_RDC_FLAG.setColSpan(3);
		
		//SGCheck HISTORY_FLAG=new SGCheck("HISTORY_FLAG", "查看历史数据");// 包含历史数据
		
		SGCombo ROUTE_ID = new SGCombo("ROUTE_ID", Util.TI18N.ROUTE_NAME());	//业务类型
		Util.initComboValue(ROUTE_ID, "BAS_ROUTE_HEAD", "ID", "ROUTE_NAME", "", " order by show_seq asc");
		
		final SGCombo BIZ_TYP=new SGCombo("BIZ_TYP",Util.TI18N.BIZ_TYP());
		Util.initCodesComboValue(BIZ_TYP,"BIZ_TYP");
		BIZ_TYP.setVisible(flag);
		if(flag){
			BIZ_TYP.setValue(StaticRef.B2C);
		}
		BIZ_TYP.addChangedHandler(new ChangedHandler() {
			@Override
			public void onChanged(ChangedEvent event) {
				if(ObjUtil.isNotNull(BIZ_TYP)){
				// biz_typ=ObjUtil.isNotNull(BIZ_TYP.getValue())? BIZ_TYP.getValue().toString() : "";
				}
			}
		});
		
		SGCombo LOAD_STAT = new SGCombo("LOAD_STAT","装车状态");
		LinkedHashMap<String,String> map = new LinkedHashMap<String,String>();
		map.put("", "");
		map.put("10", "未装车");
		map.put("20", "已装车");
		LOAD_STAT.setValueMap(map);
		form.setItems(CUSTOMER,LOAD_NO,CUSTOM_ODR_NO_NAME,SHPM_NO,
				STATUS_FROM,STATUS_TO,SUPLR_ID,PLATE_NO,START_AREA_ID,
				START_AREA,END_AREA_ID,END_AREA,ORD_ADDTIME_FROM,ORD_ADDTIME_TO,BIZ_TYP,
				DISPATCH_STAT,ROUTE_ID,ADDWHO,LOAD_STAT,EXEC_ORG_ID,EXEC_ORG_ID_NAME,C_ORG_FLAG,EXEC_FLAG);
		return form;
	}


	
	public void createForm(DynamicForm form) {
		
	}

	public void onDestroy() {
		
		if(searchLoadWin!=null){
			searchLoadWin.destroy();
			searchLoadForm.destroy();
		}
	}

	public void initVerify() {
		
	}
	
@Override
public void createBtnWidget(ToolStrip strip) {
	// TODO Auto-generated method stub
	
} 
private Canvas createbottoInfo2() {
	HLayout hLayout =new HLayout();
	hLayout.setHeight("100%");
	hLayout.setWidth("40%");
	panel = new SGPanel();
	
	//【到货签收】左布局
	SGText CARD_NO1 = new SGText("CARD_NO1","身份证");//到货签收时间

	SGText CARD_NO2 = new SGText("CARD_NO2", "驾驶证");//归还数量

	SGText CARD_NO3 = new SGText("CARD_NO3", "营运证");//损坏数量

	SGText CHANGE_AREA_ID = new SGText("CHANGE_AREA_ID", "换车地点");//关门温度 
	
	SGText CHANGE_TIME = new SGText("CHANGE_TIME","换车时间",true);
	Util.initDateTime(panel,CHANGE_TIME);
	
	SGCombo CHANGE_REASON = new SGCombo("CHANGE_REASON","换车原因");
	// 5：备注
	TextAreaItem notes = new TextAreaItem("TRACK_NOTES", "原因描述");
	notes.setStartRow(true);
	notes.setColSpan(6);
	notes.setHeight(40);
	notes.setWidth(FormUtil.longWidth+FormUtil.Width);
	notes.setTitleOrientation(TitleOrientation.TOP);
	notes.setTitleVAlign(VerticalAlignment.TOP);


	
	panel.setWidth("30%");
	panel.setItems(CARD_NO1, CARD_NO2, CARD_NO3,CHANGE_TIME,CHANGE_REASON,CHANGE_AREA_ID,notes);
	hLayout.addMember(panel);
	

	return hLayout;
	
}

    public void createLittleForm1(DynamicForm form){
    	
    	SGText PLATE_NO1 = new SGText("PLATE_NO1","车牌");
    	//PLATE_NO1.setAlign(Alignment.CENTER);
    	SGText VEHICLE_TYP_ID1 = new SGText("VEHICLE_TYP_ID1","车辆类型");
    	//VEHICLE_TYP_ID1.setAlign(Alignment.CENTER);
    	SGText DRIVER1 = new SGText("DRIVER1","联系人");
    	//DRIVER1.setAlign(Alignment.CENTER);
    	SGText MOBILE1 = new SGText("MOBILE1","联系电话");
    	//MOBILE1.setAlign(Alignment.CENTER);
    	form.setItems(PLATE_NO1,VEHICLE_TYP_ID1,DRIVER1,MOBILE1);
    	form.setIsGroup(true);  
   	    form.setGroupTitle("原始车辆");
	    form.setWidth("45%");	
	    form.setPadding(3); 
	    form.setMargin(3);
	    form.setTitleSuffix("");
	  }
    public void createLittleForm2(DynamicForm form){
    	SGText PLATE_NO2 = new SGText("PLATE_NO2", "车牌");
    	//PLATE_NO2.setAlign(Alignment.CENTER);
    	SGText VEHICLE_TYP_ID2 = new SGText("VEHICLE_TYP_ID2", "车辆类型");
    	//VEHICLE_TYP_ID2.setAlign(Alignment.CENTER);
    	SGText DRIVER2 = new SGText("DRIVER2", "联系人");
    	//DRIVER2.setAlign(Alignment.CENTER);
    	SGText MOBILE2 = new SGText("MOBILE2", "联系电话");
    	//MOBILE2.setAlign(Alignment.CENTER);
    	
    	form.setItems(PLATE_NO2,VEHICLE_TYP_ID2,DRIVER2,MOBILE2);
    	form.setIsGroup(true);  
   	    form.setGroupTitle("目标车辆");
   	    form.setWidth("45%");
   	    form.setPadding(3); 
   	    form.setMargin(3);
   	    form.setTitleSuffix("");
				
	}


   public void reciveBtnWidget(ToolStrip recivetoolStrip){
	
		recivetoolStrip.setWidth("16%");
		recivetoolStrip.setHeight("20");
		recivetoolStrip.setPadding(2);
		recivetoolStrip.setSeparatorSize(12);
		recivetoolStrip.addSeparator();
		recivetoolStrip.setMembersMargin(4);
		recivetoolStrip.setAlign(Alignment.LEFT);
		//确认按钮
	    recepitButton = createUDFBtn("新增", StaticRef.ICON_NEW,TrsPrivRef.TRACK_P2_01);
	
	  //取消按钮
	    canReceButton = createUDFBtn("取消", StaticRef.ICON_CANCEL,TrsPrivRef.TRACK_P2_02);
	    
	
	    IButton deleteButton=createUDFBtn("删除", StaticRef.ICON_DEL,TrsPrivRef.TRACK_P2_02);
	    
	    IButton saveButton=createUDFBtn("保存", StaticRef.ICON_SAVE,TrsPrivRef.TRACK_P2_02);
	   
	    recivetoolStrip.setMembersMargin(4);
	    recivetoolStrip.setMembers(recepitButton,saveButton,deleteButton,canReceButton);
	
}




public static native String getCurTime() /*-{
	
	var now = new Date();
	var year=now.getFullYear();
	var m=now.getMonth()+1;
	var month = (m < 10) ? '0' + m : m;
	var day=now.getDate();
	var hour=now.getHours();
	var minute=now.getMinutes();
	if (minute < 10) {
	    minute = "0" + minute;
	}
	var res = year+"-"+month+"-"+ day + " " + hour + ":" + minute;
	return res;
	}-*/; 
}
